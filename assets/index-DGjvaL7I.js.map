{"version":3,"file":"index-DGjvaL7I.js","sources":["../../src/contexts/AuthContext.tsx","../../src/hooks/useAuth.ts","../../src/components/auth/ProtectedRoute.tsx","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/card.tsx","../../src/components/ui/tabs.tsx","../../src/components/admin/AdminSidebar.tsx","../../src/components/ui/dialog.tsx","../../src/components/ui/badge.tsx","../../src/components/ui/scroll-area.tsx","../../src/components/ui/textarea.tsx","../../src/hooks/use-toast.ts","../../src/components/ui/checkbox.tsx","../../src/components/ui/input.tsx","../../src/components/press/ContentDistributor.tsx","../../src/services/pressMonitoring.ts","../../src/components/admin/ContentModerator.tsx","../../src/pages/Admin.tsx","../../src/components/ui/table.tsx","../../src/components/admin/clients/ClientList.tsx","../../src/components/admin/payments/PaymentList.tsx","../../src/components/admin/password-reset/PasswordResetList.tsx","../../src/components/admin/BackToAdminButton.tsx","../../src/components/admin/clients/hooks/useClientManagement.ts","../../src/pages/admin/ClientManagement.tsx","../../src/components/editor/RichTextEditor.tsx","../../src/pages/admin/ContentManagement.tsx","../../src/components/ui/label.tsx","../../src/components/ui/select.tsx","../../src/pages/admin/MediaContactsManagement.tsx","../../src/components/admin/monitoring/MonitoringList.tsx","../../src/components/admin/monitoring/MonitoringForm.tsx","../../src/components/admin/monitoring/MonitoringStats.tsx","../../src/components/ui/switch.tsx","../../src/components/ui/separator.tsx","../../src/components/admin/monitoring/MonitoringSettings.tsx","../../src/components/charts/LineChart.tsx","../../src/components/charts/BarChart.tsx","../../src/components/charts/PieChart.tsx","../../src/components/charts/geoData.ts","../../src/components/charts/MapChart.tsx","../../src/components/ui/alert.tsx","../../src/components/admin/monitoring/MonitoringAnalytics.tsx","../../src/components/admin/monitoring/MonitoringReports.tsx","../../src/components/admin/monitoring/AdminMonitoringDashboard.tsx","../../src/components/layout/Header.tsx","../../src/components/layout/Footer.tsx","../../src/data/clientDetails/observatory.ts","../../src/data/clientDetails/researcher.ts","../../src/data/clientDetails/politician.ts","../../src/data/clientDetails/institution.ts","../../src/data/clientDetails/journalist.ts","../../src/data/clientDetails/press.ts","../../src/data/clientDetails/index.ts","../../src/components/service/utils/colorUtils.ts","../../src/components/ui/form.tsx","../../src/components/monitoring/utils/clientTypeUtils.ts","../../src/components/monitoring/ClientAlert.tsx","../../src/components/monitoring/CategoryManager.tsx","../../src/components/monitoring/BasicFormFields.tsx","../../src/components/monitoring/AdvancedFormFields.tsx","../../src/components/monitoring/MonitoringFormInputs.tsx","../../src/components/monitoring/MonitoringForm.tsx","../../src/pages/clients/ObservatoryClient.tsx","../../src/pages/clients/ResearcherClient.tsx","../../src/pages/clients/PoliticianClient.tsx","../../src/pages/clients/InstitutionClient.tsx","../../src/pages/clients/JournalistClient.tsx","../../src/pages/clients/PressClient.tsx","../../src/components/dashboard/HeroSection.tsx","../../src/components/dashboard/FeaturesSection.tsx","../../src/components/dashboard/ServicesSection.tsx","../../src/components/dashboard/CTASection.tsx","../../src/pages/Index.tsx","../../src/pages/Login.tsx","../../src/components/client-login/ClientLoginForm.tsx","../../src/components/client-login/LoginCard.tsx","../../src/components/client-login/ClientUtils.ts","../../src/components/client-login/useClientLogin.ts","../../src/pages/ClientLogin.tsx","../../src/components/service/ServiceHero.tsx","../../src/components/service/ServiceDetails.tsx","../../src/components/service/ServiceFeatures.tsx","../../src/components/service/ServiceBenefits.tsx","../../src/components/service/ServiceCTA.tsx","../../src/pages/ServiceLanding.tsx","../../src/components/example-client/ClientHeader.tsx","../../src/components/example-client/ClientInfo.tsx","../../src/components/ui/radio-group.tsx","../../src/components/press/ContentCreator.tsx","../../src/components/press/PressContent.tsx","../../src/components/monitoring/MonitoringContent.tsx","../../src/components/analysis/AnalysisContent.tsx","../../src/pages/ExampleClient.tsx","../../src/pages/Client.tsx","../../src/pages/Payment.tsx","../../src/pages/Unauthorized.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  type: string;\n}\n\ninterface AuthContextData {\n  isAuthenticated: boolean;\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextData | null>(null);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(() => {\n    const storedUser = localStorage.getItem('@Koga:user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  const login = (userData: User) => {\n    localStorage.setItem('@Koga:user', JSON.stringify(userData));\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('@Koga:user');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        login,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth as useAuthContext } from '@/contexts/AuthContext';\n\ninterface LoginFormData {\n  email: string;\n  password: string;\n}\n\nexport function useAuth() {\n  const navigate = useNavigate();\n  const auth = useAuthContext();\n  const form = useForm<LoginFormData>();\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  const handleLogin = async (data: LoginFormData) => {\n    try {\n      setIsLoggingIn(true);\n      // Simular delay de rede\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock de autenticação - substituir por chamada real à API\n      if (data.email === 'admin@koga.com' && data.password === 'admin123') {\n        auth.login({\n          id: '1',\n          name: 'Administrador',\n          email: data.email,\n          type: 'admin'\n        });\n        navigate('/admin');\n      } else {\n        throw new Error('Credenciais inválidas');\n      }\n    } catch (error) {\n      console.error('Erro ao fazer login:', error);\n      throw error;\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  const handleLogout = () => {\n    auth.logout();\n    navigate('/login');\n  };\n\n  return {\n    isAuthenticated: auth.isAuthenticated,\n    user: auth.user,\n    form,\n    isLoggingIn,\n    handleLogin,\n    handleLogout\n  };\n}\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '@/hooks/useAuth';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  allowedTypes: string[];\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, allowedTypes }) => {\n  const { isAuthenticated, user } = useAuth();\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  if (user && !allowedTypes.includes(user.type)) {\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatDate(date: string) {\n  return new Intl.DateTimeFormat('pt-BR', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(new Date(date));\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\n// Service card component with colorful headers\nconst ServiceCard = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    color: \"blue\" | \"indigo\" | \"purple\" | \"green\" | \"red\" | \"amber\"\n  }\n>(({ className, color = \"blue\", ...props }, ref) => {\n  const colorClasses = {\n    blue: \"bg-blue-600\",\n    indigo: \"bg-indigo-600\",\n    purple: \"bg-purple-600\",\n    green: \"bg-green-600\",\n    red: \"bg-red-600\",\n    amber: \"bg-amber-600\"\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"rounded-xl shadow-lg overflow-hidden border border-gray-100 hover:shadow-xl hover:scale-[1.02] transition-all duration-300 bg-white\",\n        className\n      )}\n      {...props}\n    >\n      <div className={`h-2 ${colorClasses[color]}`}></div>\n      <div className=\"p-6\">{props.children}</div>\n    </div>\n  )\n})\nServiceCard.displayName = \"ServiceCard\"\n\n// Icon wrapper for service cards\nconst ServiceIconWrapper = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    color: \"blue\" | \"indigo\" | \"purple\" | \"green\" | \"red\" | \"amber\"\n  }\n>(({ className, color = \"blue\", ...props }, ref) => {\n  const bgColorClasses = {\n    blue: \"bg-blue-100\",\n    indigo: \"bg-indigo-100\",\n    purple: \"bg-purple-100\",\n    green: \"bg-green-100\",\n    red: \"bg-red-100\",\n    amber: \"bg-amber-100\"\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        `rounded-full ${bgColorClasses[color]} p-3 w-14 h-14 mb-4 flex items-center justify-center`,\n        className\n      )}\n      {...props}\n    />\n  )\n})\nServiceIconWrapper.displayName = \"ServiceIconWrapper\"\n\n// Feature card component\nconst FeatureCard = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\",\n      className\n    )}\n    {...props}\n  />\n))\nFeatureCard.displayName = \"FeatureCard\"\n\nexport { \n  Card, \n  CardHeader, \n  CardFooter, \n  CardTitle, \n  CardDescription, \n  CardContent,\n  ServiceCard,\n  ServiceIconWrapper,\n  FeatureCard\n}\n","\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { \n  Users, \n  FileText,\n  Home,\n  Settings,\n  LogOut,\n  UserPlus,\n  BarChart2,\n  Eye,\n  Activity\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nconst AdminSidebar: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { handleLogout } = useAuth();\n  \n  const menuItems = [\n    {\n      title: \"Dashboard\",\n      icon: <Home className=\"h-5 w-5\" />,\n      path: \"/admin\"\n    },\n    {\n      title: \"Monitoramento\",\n      icon: <Activity className=\"h-4 w-4\" />,\n      path: \"/admin/monitoring\",\n      description: \"Central de monitoramento do sistema\"\n    },\n    {\n      title: \"Gerenciar Clientes\",\n      icon: <UserPlus className=\"h-4 w-4\" />,\n      path: \"/admin/clients\"\n    },\n    {\n      title: \"Visualizar Clientes\",\n      icon: <Eye className=\"h-4 w-4\" />,\n      path: \"/example-client\",\n      description: \"Visualizar a interface dos clientes para suporte\"\n    },\n    {\n      title: \"Contatos de Mídia\",\n      icon: <Users className=\"h-4 w-4\" />,\n      path: \"/admin/contacts\"\n    },\n    {\n      title: \"Releases e Reportagens\",\n      icon: <FileText className=\"h-4 w-4\" />,\n      path: \"/admin/content\"\n    },\n    {\n      title: \"Análise e Relatórios\",\n      icon: <BarChart2 className=\"h-4 w-4\" />,\n      path: \"/admin/analytics\"\n    },\n    {\n      title: \"Configurações\",\n      icon: <Settings className=\"h-4 w-4\" />,\n      path: \"/admin/settings\"\n    }\n  ];\n  \n  return (\n    <div className=\"w-64 bg-card border-r h-screen p-4 flex flex-col\">\n      <div className=\"flex items-center justify-center p-4 border-b\">\n        <h2 className=\"text-xl font-bold\">Admin</h2>\n      </div>\n\n      <nav className=\"flex-1 py-4\">\n        {menuItems.map((item) => (\n          <Button\n            key={item.path}\n            variant={location.pathname === item.path ? \"secondary\" : \"ghost\"}\n            className=\"w-full justify-start mb-2 relative group\"\n            onClick={() => navigate(item.path)}\n          >\n            {item.icon}\n            <span className=\"ml-2\">{item.title}</span>\n            {item.description && (\n              <div className=\"absolute left-full ml-2 p-2 bg-black text-white text-xs rounded hidden group-hover:block w-48\">\n                {item.description}\n              </div>\n            )}\n          </Button>\n        ))}\n      </nav>\n\n      <div className=\"border-t pt-4\">\n        <Button\n          variant=\"ghost\"\n          className=\"w-full justify-start text-red-500 hover:text-red-600 hover:bg-red-50\"\n          onClick={handleLogout}\n        >\n          <LogOut className=\"h-5 w-5\" />\n          <span className=\"ml-2\">Sair</span>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminSidebar;\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Search } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { toast } from '@/components/ui/use-toast';\n\ninterface Contact {\n  id: string;\n  name: string;\n  organization: string;\n  type: 'journalist' | 'website' | 'newspaper' | 'tv' | 'radio';\n  email: string;\n  phone?: string;\n}\n\ninterface ContentDistributorProps {\n  contentId: string;\n  contentTitle: string;\n  onDistribute: (contentId: string, selectedContacts: string[]) => void;\n}\n\nconst ContentDistributor: React.FC<ContentDistributorProps> = ({\n  contentId,\n  contentTitle,\n  onDistribute\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedContacts, setSelectedContacts] = useState<string[]>([]);\n  const [filterType, setFilterType] = useState<string>('all');\n\n  // Mock data - substituir por dados reais da API\n  const mockContacts: Contact[] = [\n    {\n      id: '1',\n      name: 'João Silva',\n      organization: 'Folha de São Paulo',\n      type: 'journalist',\n      email: 'joao@folha.com.br'\n    },\n    {\n      id: '2',\n      name: 'G1',\n      organization: 'Portal G1',\n      type: 'website',\n      email: 'pauta@g1.com'\n    },\n    {\n      id: '3',\n      name: 'Maria Santos',\n      organization: 'O Globo',\n      type: 'newspaper',\n      email: 'maria@oglobo.com.br'\n    }\n  ];\n\n  const contactTypes = [\n    { value: 'all', label: 'Todos' },\n    { value: 'journalist', label: 'Jornalistas' },\n    { value: 'website', label: 'Websites' },\n    { value: 'newspaper', label: 'Jornais' },\n    { value: 'tv', label: 'TV' },\n    { value: 'radio', label: 'Rádio' }\n  ];\n\n  const filteredContacts = mockContacts.filter(contact => {\n    const matchesSearch = contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      contact.organization.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesType = filterType === 'all' || contact.type === filterType;\n    return matchesSearch && matchesType;\n  });\n\n  const handleToggleContact = (contactId: string) => {\n    setSelectedContacts(prev =>\n      prev.includes(contactId)\n        ? prev.filter(id => id !== contactId)\n        : [...prev, contactId]\n    );\n  };\n\n  const handleDistribute = () => {\n    if (selectedContacts.length === 0) {\n      toast({\n        title: \"Selecione contatos\",\n        description: \"Por favor, selecione pelo menos um contato para distribuir o conteúdo.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    onDistribute(contentId, selectedContacts);\n    toast({\n      title: \"Conteúdo distribuído\",\n      description: `O conteúdo foi enviado para ${selectedContacts.length} contatos.`,\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Buscar contatos...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-8\"\n              />\n            </div>\n          </div>\n          <select\n            className=\"border rounded-md p-2\"\n            value={filterType}\n            onChange={(e) => setFilterType(e.target.value)}\n          >\n            {contactTypes.map(type => (\n              <option key={type.value} value={type.value}>\n                {type.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"border rounded-md\">\n          <ScrollArea className=\"h-[400px] p-4\">\n            <div className=\"space-y-4\">\n              {filteredContacts.map((contact) => (\n                <div\n                  key={contact.id}\n                  className=\"flex items-center space-x-4 p-2 hover:bg-muted/50 rounded-md\"\n                >\n                  <Checkbox\n                    checked={selectedContacts.includes(contact.id)}\n                    onCheckedChange={() => handleToggleContact(contact.id)}\n                  />\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium\">{contact.name}</p>\n                    <p className=\"text-sm text-muted-foreground\">{contact.organization}</p>\n                  </div>\n                  <Badge>{contact.type}</Badge>\n                </div>\n              ))}\n            </div>\n          </ScrollArea>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-sm text-muted-foreground\">\n            {selectedContacts.length} contatos selecionados\n          </p>\n          <Button onClick={handleDistribute}>\n            Distribuir Conteúdo\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentDistributor;\n","// Serviço de monitoramento específico para releases e reportagens\nexport interface PressPublication {\n  id: string;\n  url: string;\n  website: string;\n  title: string;\n  publishedAt: string;\n  excerpt: string;\n}\n\nexport interface PressMonitoringResult {\n  contentId: string;\n  publications: PressPublication[];\n  lastCheck: Date;\n}\n\nclass PressMonitoringService {\n  private monitoringJobs: Map<string, NodeJS.Timer> = new Map();\n  private results: Map<string, PressMonitoringResult> = new Map();\n\n  // Inicia o monitoramento de um release/reportagem\n  startMonitoring(contentId: string, title: string, distributedTo: string[]) {\n    // Evita duplicar o monitoramento\n    if (this.monitoringJobs.has(contentId)) {\n      return;\n    }\n\n    // Cria resultado inicial\n    this.results.set(contentId, {\n      contentId,\n      publications: [],\n      lastCheck: new Date()\n    });\n\n    // Inicia job de monitoramento\n    const timer = setInterval(() => {\n      this.checkPublications(contentId, title, distributedTo);\n    }, 5 * 60 * 1000); // Checa a cada 5 minutos\n\n    this.monitoringJobs.set(contentId, timer);\n  }\n\n  // Para o monitoramento\n  stopMonitoring(contentId: string) {\n    const timer = this.monitoringJobs.get(contentId);\n    if (timer) {\n      clearInterval(timer);\n      this.monitoringJobs.delete(contentId);\n    }\n  }\n\n  // Busca publicações para um conteúdo específico\n  private async checkPublications(contentId: string, title: string, distributedTo: string[]) {\n    try {\n      // Aqui você implementaria a lógica real de busca\n      // Por exemplo, usando APIs dos sites de notícias ou web scraping\n      \n      const result = this.results.get(contentId);\n      if (!result) return;\n\n      // Atualiza o resultado\n      result.lastCheck = new Date();\n      \n      // Se encontrar novas publicações, notifica os interessados\n      this.notifyNewPublications(contentId);\n    } catch (error) {\n      console.error('Erro ao verificar publicações:', error);\n    }\n  }\n\n  // Notifica sobre novas publicações\n  private notifyNewPublications(contentId: string) {\n    // Aqui você implementaria a lógica de notificação\n    // Por exemplo, usando websockets ou um sistema de eventos\n  }\n\n  // Obtém resultados do monitoramento\n  getResults(contentId: string): PressMonitoringResult | undefined {\n    return this.results.get(contentId);\n  }\n}\n\n// Singleton para ser usado em toda a aplicação\nexport const pressMonitoringService = new PressMonitoringService();\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { toast } from '@/components/ui/use-toast';\nimport ContentDistributor from '../press/ContentDistributor';\nimport { pressMonitoringService } from '@/services/pressMonitoring';\n\ninterface Content {\n  id: string;\n  type: 'release' | 'reportagem';\n  title: string;\n  subtitle: string;\n  category: string;\n  content: string;\n  status: 'pending' | 'approved' | 'distributed' | 'published' | 'rejected';\n  tags: string[];\n}\n\ninterface ContentModeratorProps {\n  contents: Content[];\n  onUpdateStatus: (id: string, status: 'approved' | 'rejected', feedback?: string) => void;\n}\n\nconst ContentModerator: React.FC<ContentModeratorProps> = ({\n  contents,\n  onUpdateStatus\n}) => {\n  const [selectedContent, setSelectedContent] = useState<Content | null>(null);\n  const [feedback, setFeedback] = useState('');\n\n  const handleApprove = () => {\n    if (selectedContent) {\n      onUpdateStatus(selectedContent.id, 'approved');\n      toast({\n        title: \"Conteúdo aprovado\",\n        description: \"O conteúdo foi aprovado e está pronto para distribuição.\",\n      });\n      setSelectedContent(null);\n    }\n  };\n\n  const handleReject = () => {\n    if (selectedContent && feedback) {\n      onUpdateStatus(selectedContent.id, 'rejected', feedback);\n      toast({\n        title: \"Conteúdo rejeitado\",\n        description: \"O feedback foi enviado ao autor.\",\n      });\n      setSelectedContent(null);\n      setFeedback('');\n    } else {\n      toast({\n        title: \"Feedback necessário\",\n        description: \"Por favor, forneça um feedback para rejeitar o conteúdo.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleDistribute = (contentId: string, selectedContacts: string[]) => {\n    if (selectedContent) {\n      // Inicia o monitoramento em background\n      pressMonitoringService.startMonitoring(\n        contentId,\n        selectedContent.title,\n        selectedContacts\n      );\n\n      toast({\n        title: \"Conteúdo distribuído\",\n        description: \"O conteúdo foi enviado e o monitoramento foi iniciado.\",\n      });\n    }\n    setSelectedContent(null);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"pending\">\n        <TabsList>\n          <TabsTrigger value=\"pending\">Pendentes</TabsTrigger>\n          <TabsTrigger value=\"approved\">Aprovados</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"pending\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {contents\n              .filter(content => content.status === 'pending')\n              .map((content) => (\n                <div\n                  key={content.id}\n                  className=\"border rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer\"\n                  onClick={() => setSelectedContent(content)}\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div>\n                      <h3 className=\"font-medium\">{content.title}</h3>\n                      <p className=\"text-sm text-muted-foreground\">{content.subtitle}</p>\n                    </div>\n                    <Badge>{content.type}</Badge>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\n                    {content.tags.map(tag => (\n                      <Badge key={tag} variant=\"outline\">{tag}</Badge>\n                    ))}\n                  </div>\n                </div>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"approved\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {contents\n              .filter(content => content.status === 'approved')\n              .map((content) => (\n                <div\n                  key={content.id}\n                  className=\"border rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer\"\n                  onClick={() => setSelectedContent(content)}\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div>\n                      <h3 className=\"font-medium\">{content.title}</h3>\n                      <p className=\"text-sm text-muted-foreground\">{content.subtitle}</p>\n                    </div>\n                    <Badge>{content.type}</Badge>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\n                    {content.tags.map(tag => (\n                      <Badge key={tag} variant=\"outline\">{tag}</Badge>\n                    ))}\n                  </div>\n                </div>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {selectedContent && (\n        <Dialog open={!!selectedContent} onOpenChange={() => setSelectedContent(null)}>\n          <DialogContent className=\"max-w-3xl\">\n            <DialogHeader>\n              <DialogTitle>{selectedContent.title}</DialogTitle>\n              <DialogDescription>{selectedContent.subtitle}</DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2\">\n                <Badge>{selectedContent.type}</Badge>\n                <Badge variant=\"outline\">{selectedContent.category}</Badge>\n              </div>\n\n              <ScrollArea className=\"h-[400px] border rounded-md p-4\">\n                <div dangerouslySetInnerHTML={{ __html: selectedContent.content }} />\n              </ScrollArea>\n\n              {selectedContent.status === 'pending' && (\n                <>\n                  <Textarea\n                    placeholder=\"Feedback para o autor (obrigatório em caso de rejeição)\"\n                    value={feedback}\n                    onChange={(e) => setFeedback(e.target.value)}\n                  />\n\n                  <div className=\"flex justify-end gap-2\">\n                    <Button variant=\"outline\" onClick={() => setSelectedContent(null)}>\n                      Cancelar\n                    </Button>\n                    <Button variant=\"destructive\" onClick={handleReject}>\n                      Rejeitar\n                    </Button>\n                    <Button onClick={handleApprove}>\n                      Aprovar\n                    </Button>\n                  </div>\n                </>\n              )}\n\n              {selectedContent.status === 'approved' && (\n                <ContentDistributor\n                  contentId={selectedContent.id}\n                  contentTitle={selectedContent.title}\n                  onDistribute={handleDistribute}\n                />\n              )}\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n};\n\nexport default ContentModerator;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport AdminSidebar from \"@/components/admin/AdminSidebar\";\nimport ContentModerator from \"@/components/admin/ContentModerator\";\n\ninterface Content {\n  id: string;\n  type: 'release' | 'reportagem';\n  title: string;\n  subtitle: string;\n  category: string;\n  content: string;\n  status: 'pending' | 'approved' | 'distributed' | 'published' | 'rejected';\n  tags: string[];\n}\n\nconst Admin: React.FC = () => {\n  const navigate = useNavigate();\n  const [contents, setContents] = useState<Content[]>([\n    {\n      id: '1',\n      type: 'release',\n      title: 'Nova Política de Sustentabilidade',\n      subtitle: 'Empresa anuncia metas ambiciosas para 2026',\n      category: 'sustentabilidade',\n      content: '<h1>Nova Política de Sustentabilidade</h1><p>A empresa anunciou hoje suas novas metas...</p>',\n      status: 'pending',\n      tags: ['sustentabilidade', 'meio ambiente', 'ESG']\n    },\n    {\n      id: '2',\n      type: 'reportagem',\n      title: 'Impacto da IA no Mercado de Trabalho',\n      subtitle: 'Como a inteligência artificial está mudando as profissões',\n      category: 'tecnologia',\n      content: '<h1>Impacto da IA no Mercado de Trabalho</h1><p>A inteligência artificial está transformando...</p>',\n      status: 'pending',\n      tags: ['tecnologia', 'ia', 'mercado de trabalho']\n    }\n  ]);\n\n  const quickActions = [\n    {\n      title: \"Central de Monitoramento\",\n      description: \"Gerencie todos os monitoramentos do sistema\",\n      path: \"/admin/monitoring\"\n    },\n    {\n      title: \"Gerenciar Clientes\",\n      description: \"Adicionar, editar e remover clientes do sistema\",\n      path: \"/admin/clients\"\n    },\n    {\n      title: \"Contatos de Mídia\",\n      description: \"Gerenciar contatos e relacionamentos com veículos de mídia\",\n      path: \"/admin/contacts\"\n    },\n    {\n      title: \"Releases e Reportagens\",\n      description: \"Gerenciar conteúdo e publicações\",\n      path: \"/admin/content\"\n    }\n  ];\n\n  const handleUpdateStatus = (id: string, status: 'approved' | 'rejected', feedback?: string) => {\n    setContents(prevContents => \n      prevContents.map(content => \n        content.id === id \n          ? { ...content, status } \n          : content\n      )\n    );\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <AdminSidebar />\n      \n      <div className=\"flex-1 p-6 overflow-auto\">\n        <h1 className=\"text-3xl font-bold mb-6\">Painel Administrativo</h1>\n        \n        <Tabs defaultValue=\"overview\" className=\"w-full\">\n          <TabsList>\n            <TabsTrigger value=\"overview\">Visão Geral</TabsTrigger>\n            <TabsTrigger value=\"moderation\">Moderação</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {quickActions.map((action) => (\n                <Card key={action.path} className=\"hover:shadow-lg transition-shadow\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-lg\">{action.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4\">{action.description}</p>\n                    <Button \n                      className=\"w-full\"\n                      onClick={() => navigate(action.path)}\n                    >\n                      Acessar\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Estatísticas Gerais</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h3 className=\"font-medium\">Clientes</h3>\n                      <p className=\"text-2xl font-bold\">248</p>\n                      <p className=\"text-sm text-muted-foreground\">Total de clientes ativos</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium\">Monitoramentos</h3>\n                      <p className=\"text-2xl font-bold\">1,842</p>\n                      <p className=\"text-sm text-muted-foreground\">Monitoramentos ativos</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium\">Releases</h3>\n                      <p className=\"text-2xl font-bold\">324</p>\n                      <p className=\"text-sm text-muted-foreground\">Releases publicados este mês</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader>\n                  <CardTitle>Atividades Recentes</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-4 border-b pb-4\">\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">Novo Cliente Adicionado</p>\n                        <p className=\"text-sm text-muted-foreground\">Observatório de Políticas Públicas</p>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">Há 2 horas</p>\n                    </div>\n                    <div className=\"flex items-center gap-4 border-b pb-4\">\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">Release Publicado</p>\n                        <p className=\"text-sm text-muted-foreground\">Análise do Cenário Político 2025</p>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">Há 4 horas</p>\n                    </div>\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">Monitoramento Atualizado</p>\n                        <p className=\"text-sm text-muted-foreground\">Cobertura de Mídia - Setor Educacional</p>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">Há 6 horas</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"moderation\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Moderação de Conteúdo</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ContentModerator\n                  contents={contents}\n                  onUpdateStatus={handleUpdateStatus}\n                />\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n","\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\"bg-primary font-medium text-primary-foreground\", className)}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ClientAccount } from '@/types/adminTypes';\nimport { PlusCircle, Search, Edit, Trash, Eye } from 'lucide-react';\nimport { formatDate } from '@/lib/utils';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface ClientListProps {\n  clients: ClientAccount[];\n  onAddClient: () => void;\n  onEditClient: (client: ClientAccount) => void;\n  onDeleteClient: (clientId: string) => void;\n  currentClientType?: string; \n}\n\nconst ClientList: React.FC<ClientListProps> = ({\n  clients,\n  onAddClient,\n  onEditClient,\n  onDeleteClient,\n  currentClientType\n}) => {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredClients = clients\n    .filter(client => !currentClientType || client.type === currentClientType)\n    .filter(client =>\n      client.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      client.email.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-500';\n      case 'inactive':\n        return 'bg-gray-500';\n      case 'trial':\n        return 'bg-blue-500';\n      case 'suspended':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const getPlanColor = (plan: string) => {\n    switch (plan) {\n      case 'free':\n        return 'bg-gray-500';\n      case 'basic':\n        return 'bg-blue-500';\n      case 'premium':\n        return 'bg-purple-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const handleViewClient = (clientType: string) => {\n    const clientPages: Record<string, string> = {\n      'observatory': '/clients/observatory',\n      'researcher': '/clients/researcher',\n      'politician': '/clients/politician',\n      'institution': '/clients/institution',\n      'journalist': '/clients/journalist',\n      'press': '/clients/press'\n    };\n\n    if (currentClientType) {\n      navigate(clientPages[currentClientType]);\n      return;\n    }\n\n    if (clientPages[clientType]) {\n      navigate(clientPages[clientType]);\n    } else {\n      toast({\n        title: \"Página não encontrada\",\n        description: \"A página deste tipo de cliente ainda não está disponível.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center space-x-2\">\n          <Input\n            placeholder=\"Buscar clientes...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-[300px]\"\n          />\n          <Search className=\"w-4 h-4 text-gray-500\" />\n        </div>\n        <Button onClick={onAddClient}>\n          <PlusCircle className=\"w-4 h-4 mr-2\" />\n          Novo Cliente\n        </Button>\n      </div>\n\n      <div className=\"border rounded-lg\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Nome</TableHead>\n              <TableHead>Email</TableHead>\n              {!currentClientType && <TableHead>Tipo</TableHead>}\n              <TableHead>Status</TableHead>\n              <TableHead>Plano</TableHead>\n              <TableHead>Criado em</TableHead>\n              <TableHead>Ações</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredClients.map((client) => (\n              <TableRow key={client.id}>\n                <TableCell>{client.name}</TableCell>\n                <TableCell>{client.email}</TableCell>\n                {!currentClientType && <TableCell>{client.type}</TableCell>}\n                <TableCell>\n                  <Badge className={getStatusColor(client.status)}>\n                    {client.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <Badge className={getPlanColor(client.plan)}>\n                    {client.plan}\n                  </Badge>\n                </TableCell>\n                <TableCell>{formatDate(client.createdAt)}</TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleViewClient(client.type)}\n                      title={`Visualizar área do ${currentClientType || client.type}`}\n                    >\n                      <Eye className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onEditClient(client)}\n                      title=\"Editar cliente\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onDeleteClient(client.id)}\n                      title=\"Excluir cliente\"\n                    >\n                      <Trash className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientList;\n","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Payment } from '@/types/adminTypes';\nimport { Search, Download } from 'lucide-react';\nimport { formatDate } from '@/lib/utils';\n\ninterface PaymentListProps {\n  payments: Payment[];\n  onExportPayments: () => void;\n}\n\nconst PaymentList: React.FC<PaymentListProps> = ({\n  payments,\n  onExportPayments,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredPayments = payments.filter(payment =>\n    payment.description.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-500';\n      case 'pending':\n        return 'bg-yellow-500';\n      case 'failed':\n        return 'bg-red-500';\n      case 'refunded':\n        return 'bg-gray-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center space-x-2\">\n          <Input\n            placeholder=\"Buscar pagamentos...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-[300px]\"\n          />\n          <Search className=\"w-4 h-4 text-gray-500\" />\n        </div>\n        <button\n          onClick={onExportPayments}\n          className=\"flex items-center text-sm text-gray-600 hover:text-gray-900\"\n        >\n          <Download className=\"w-4 h-4 mr-1\" />\n          Exportar\n        </button>\n      </div>\n\n      <div className=\"border rounded-lg\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>ID</TableHead>\n              <TableHead>Descrição</TableHead>\n              <TableHead>Valor</TableHead>\n              <TableHead>Status</TableHead>\n              <TableHead>Método</TableHead>\n              <TableHead>Data</TableHead>\n              <TableHead>Data Pagamento</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredPayments.map((payment) => (\n              <TableRow key={payment.id}>\n                <TableCell className=\"font-mono\">{payment.id}</TableCell>\n                <TableCell>{payment.description}</TableCell>\n                <TableCell>{formatCurrency(payment.amount)}</TableCell>\n                <TableCell>\n                  <Badge className={getStatusColor(payment.status)}>\n                    {payment.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>{payment.paymentMethod}</TableCell>\n                <TableCell>{formatDate(payment.createdAt)}</TableCell>\n                <TableCell>{payment.paidAt ? formatDate(payment.paidAt) : '-'}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentList;\n","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { PasswordReset } from '@/types/adminTypes';\nimport { Search, RotateCw } from 'lucide-react';\nimport { formatDate } from '@/lib/utils';\n\ninterface PasswordResetListProps {\n  resets: PasswordReset[];\n  onResetPassword: (resetId: string) => void;\n}\n\nconst PasswordResetList: React.FC<PasswordResetListProps> = ({\n  resets,\n  onResetPassword,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredResets = resets.filter(reset =>\n    reset.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-500';\n      case 'pending':\n        return 'bg-yellow-500';\n      case 'expired':\n        return 'bg-gray-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center space-x-2\">\n        <Input\n          placeholder=\"Buscar por email...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"w-[300px]\"\n        />\n        <Search className=\"w-4 h-4 text-gray-500\" />\n      </div>\n\n      <div className=\"border rounded-lg\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Email</TableHead>\n              <TableHead>Status</TableHead>\n              <TableHead>Solicitado em</TableHead>\n              <TableHead>Expira em</TableHead>\n              <TableHead>Completado em</TableHead>\n              <TableHead>Ações</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredResets.map((reset) => (\n              <TableRow key={reset.id}>\n                <TableCell>{reset.email}</TableCell>\n                <TableCell>\n                  <Badge className={getStatusColor(reset.status)}>\n                    {reset.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>{formatDate(reset.requestedAt)}</TableCell>\n                <TableCell>{formatDate(reset.expiresAt)}</TableCell>\n                <TableCell>\n                  {reset.completedAt ? formatDate(reset.completedAt) : '-'}\n                </TableCell>\n                <TableCell>\n                  {reset.status === 'pending' && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onResetPassword(reset.id)}\n                    >\n                      <RotateCw className=\"w-4 h-4 mr-2\" />\n                      Resetar Senha\n                    </Button>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetList;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\n\nconst BackToAdminButton: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Button\n      variant=\"outline\"\n      className=\"mb-4\"\n      onClick={() => navigate(\"/admin\")}\n    >\n      <ArrowLeft className=\"h-4 w-4 mr-2\" />\n      Voltar para Administração\n    </Button>\n  );\n};\n\nexport default BackToAdminButton; ","import { useState, useCallback } from 'react';\nimport { ClientAccount } from '@/types/adminTypes';\n\n// Mock data - substituir por dados reais da API\nconst mockClients: ClientAccount[] = [\n  // Clientes do Observatório\n  {\n    id: '1',\n    name: 'Observatório Nacional',\n    email: 'contato@observatorio.com.br',\n    type: 'observatory',\n    status: 'active',\n    plan: 'premium',\n    createdAt: new Date().toISOString(),\n    organization: 'Observatório Nacional'\n  },\n  {\n    id: '7',\n    name: 'Observatório Regional',\n    email: 'contato@observatorio-regional.com.br',\n    type: 'observatory',\n    status: 'active',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Observatório Regional'\n  },\n  // Pesquisadores\n  {\n    id: '2',\n    name: 'João Silva',\n    email: 'joao.silva@pesquisa.org',\n    type: 'researcher',\n    status: 'trial',\n    plan: 'basic',\n    createdAt: new Date().toISOString()\n  },\n  {\n    id: '8',\n    name: 'Ana Pesquisadora',\n    email: 'ana@pesquisa.org',\n    type: 'researcher',\n    status: 'active',\n    plan: 'premium',\n    createdAt: new Date().toISOString()\n  },\n  // Políticos\n  {\n    id: '3',\n    name: 'Maria Santos',\n    email: 'maria@politica.gov.br',\n    type: 'politician',\n    status: 'active',\n    plan: 'premium',\n    createdAt: new Date().toISOString(),\n    organization: 'Câmara dos Deputados'\n  },\n  {\n    id: '9',\n    name: 'José Político',\n    email: 'jose@politica.gov.br',\n    type: 'politician',\n    status: 'active',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Assembleia Legislativa'\n  },\n  // Instituições\n  {\n    id: '4',\n    name: 'Universidade Federal',\n    email: 'reitoria@univ.edu.br',\n    type: 'institution',\n    status: 'active',\n    plan: 'premium',\n    createdAt: new Date().toISOString(),\n    organization: 'Universidade Federal'\n  },\n  {\n    id: '10',\n    name: 'Instituto de Pesquisa',\n    email: 'contato@instituto.org.br',\n    type: 'institution',\n    status: 'active',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Instituto de Pesquisa'\n  },\n  // Jornalistas\n  {\n    id: '5',\n    name: 'Pedro Costa',\n    email: 'pedro@jornal.com.br',\n    type: 'journalist',\n    status: 'active',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Jornal da Cidade'\n  },\n  {\n    id: '11',\n    name: 'Carla Jornalista',\n    email: 'carla@jornal.com.br',\n    type: 'journalist',\n    status: 'trial',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Revista Semanal'\n  },\n  // Assessorias de Imprensa\n  {\n    id: '6',\n    name: 'Agência de Notícias',\n    email: 'redacao@agencia.com.br',\n    type: 'press',\n    status: 'active',\n    plan: 'premium',\n    createdAt: new Date().toISOString(),\n    organization: 'Agência de Notícias'\n  },\n  {\n    id: '12',\n    name: 'Assessoria Comunicação',\n    email: 'contato@assessoria.com.br',\n    type: 'press',\n    status: 'active',\n    plan: 'basic',\n    createdAt: new Date().toISOString(),\n    organization: 'Assessoria Comunicação'\n  }\n];\n\nexport const useClientManagement = (clientType?: string) => {\n  const [clients, setClients] = useState<ClientAccount[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const loadClients = useCallback(async () => {\n    try {\n      // Simular chamada à API\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Se um tipo de cliente foi especificado, filtrar apenas os clientes daquele tipo\n      const filteredClients = clientType \n        ? mockClients.filter(client => client.type === clientType)\n        : mockClients;\n        \n      setClients(filteredClients);\n    } catch (error) {\n      console.error('Erro ao carregar clientes:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [clientType]);\n\n  const handleStatusToggle = useCallback(async (clientId: string) => {\n    try {\n      // Simular chamada à API\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setClients(prevClients => \n        prevClients.map(client => {\n          if (client.id === clientId) {\n            return {\n              ...client,\n              status: client.status === 'active' ? 'inactive' : 'active'\n            };\n          }\n          return client;\n        })\n      );\n    } catch (error) {\n      console.error('Erro ao alterar status do cliente:', error);\n    }\n  }, []);\n\n  return {\n    clients,\n    isLoading,\n    loadClients,\n    handleStatusToggle\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport ClientList from '@/components/admin/clients/ClientList';\nimport PaymentList from '@/components/admin/payments/PaymentList';\nimport PasswordResetList from '@/components/admin/password-reset/PasswordResetList';\nimport { ClientAccount, Payment, PasswordReset } from '@/types/adminTypes';\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\n// Mock data - substituir por dados reais da API\nconst mockPayments: Payment[] = [\n  {\n    id: '1',\n    clientId: '1',\n    amount: 99.90,\n    status: 'completed',\n    paymentMethod: 'credit_card',\n    createdAt: new Date().toISOString(),\n    paidAt: new Date().toISOString(),\n    description: 'Assinatura Mensal - Plano Básico'\n  }\n];\n\nconst mockResets: PasswordReset[] = [\n  {\n    id: '1',\n    clientId: '1',\n    email: 'cliente@teste.com',\n    status: 'pending',\n    requestedAt: new Date().toISOString(),\n    token: 'token123',\n    expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\n  }\n];\n\nconst ClientManagement: React.FC = () => {\n  const {\n    clients,\n    isLoading,\n    loadClients,\n    handleStatusToggle,\n  } = useClientManagement();\n\n  const [activeTab, setActiveTab] = useState('clients');\n  const [selectedClient, setSelectedClient] = useState<ClientAccount | null>(null);\n\n  const addClient = () => {\n    // Implementar lógica de adicionar cliente\n    console.log('Adicionar novo cliente');\n  };\n\n  const editClient = (client: ClientAccount) => {\n    setSelectedClient(client);\n    console.log('Editar cliente:', client);\n  };\n\n  const deleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n    console.log('Deletar cliente:', clientId);\n  };\n\n  const exportPayments = () => {\n    // Implementar lógica de exportar pagamentos\n    console.log('Exportar pagamentos');\n  };\n\n  const resetPassword = (resetId: string) => {\n    // Implementar lógica de reset de senha\n    console.log('Reset de senha:', resetId);\n  };\n\n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <BackToAdminButton />\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Gerenciamento de Clientes</CardTitle>\n          <CardDescription>\n            Gerencie clientes, pagamentos e solicitações de recuperação de senha.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs value={activeTab} onValueChange={setActiveTab}>\n            <TabsList>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"payments\">Pagamentos</TabsTrigger>\n              <TabsTrigger value=\"resets\">Recuperação de Senha</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"clients\" className=\"mt-6\">\n              <ClientList\n                clients={clients}\n                onAddClient={addClient}\n                onEditClient={editClient}\n                onDeleteClient={deleteClient}\n              />\n            </TabsContent>\n\n            <TabsContent value=\"payments\" className=\"mt-6\">\n              <PaymentList\n                payments={mockPayments}\n                onExportPayments={exportPayments}\n              />\n            </TabsContent>\n\n            <TabsContent value=\"resets\" className=\"mt-6\">\n              <PasswordResetList\n                resets={mockResets}\n                onResetPassword={resetPassword}\n              />\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ClientManagement;\n","import React, { useState } from 'react';\nimport { \n  Bold, \n  Italic, \n  Underline, \n  Link2, \n  Image, \n  List, \n  ListOrdered,\n  AlignLeft,\n  AlignCenter,\n  AlignRight,\n  Heading1,\n  Heading2,\n  Quote\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\nexport interface RichTextEditorProps {\n  initialContent?: string;\n  onContentChange: (content: string) => void;\n}\n\ninterface EditorCommand {\n  icon: React.ReactNode;\n  command: string;\n  title: string;\n}\n\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\n  initialContent = '',\n  onContentChange\n}) => {\n  const [showLinkDialog, setShowLinkDialog] = useState(false);\n  const [showImageDialog, setShowImageDialog] = useState(false);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n\n  const editorRef = React.useRef<HTMLDivElement>(null);\n\n  const commands: EditorCommand[] = [\n    { icon: <Bold className=\"h-4 w-4\" />, command: 'bold', title: 'Negrito' },\n    { icon: <Italic className=\"h-4 w-4\" />, command: 'italic', title: 'Itálico' },\n    { icon: <Underline className=\"h-4 w-4\" />, command: 'underline', title: 'Sublinhado' },\n    { icon: <Heading1 className=\"h-4 w-4\" />, command: 'formatBlock', title: 'Título 1' },\n    { icon: <Heading2 className=\"h-4 w-4\" />, command: 'formatBlock', title: 'Título 2' },\n    { icon: <List className=\"h-4 w-4\" />, command: 'insertUnorderedList', title: 'Lista' },\n    { icon: <ListOrdered className=\"h-4 w-4\" />, command: 'insertOrderedList', title: 'Lista Numerada' },\n    { icon: <Quote className=\"h-4 w-4\" />, command: 'formatBlock', title: 'Citação' },\n    { icon: <AlignLeft className=\"h-4 w-4\" />, command: 'justifyLeft', title: 'Alinhar à Esquerda' },\n    { icon: <AlignCenter className=\"h-4 w-4\" />, command: 'justifyCenter', title: 'Centralizar' },\n    { icon: <AlignRight className=\"h-4 w-4\" />, command: 'justifyRight', title: 'Alinhar à Direita' },\n  ];\n\n  const execCommand = (command: string, value?: string) => {\n    document.execCommand(command, false, value);\n    if (editorRef.current) {\n      onContentChange(editorRef.current.innerHTML);\n    }\n  };\n\n  const handleInsertLink = () => {\n    if (linkUrl) {\n      execCommand('createLink', linkUrl);\n      setLinkUrl('');\n      setShowLinkDialog(false);\n    }\n  };\n\n  const handleInsertImage = () => {\n    if (imageUrl) {\n      execCommand('insertImage', imageUrl);\n      setImageUrl('');\n      setShowImageDialog(false);\n    }\n  };\n\n  return (\n    <div className=\"border rounded-md\">\n      <div className=\"border-b p-2 flex flex-wrap gap-1 bg-muted/20\">\n        {commands.map((cmd) => (\n          <Button\n            key={cmd.command}\n            variant=\"ghost\"\n            size=\"sm\"\n            title={cmd.title}\n            onClick={() => execCommand(cmd.command, cmd.command === 'formatBlock' ? `<${cmd.title.toLowerCase()}>` : undefined)}\n          >\n            {cmd.icon}\n          </Button>\n        ))}\n\n        <Dialog open={showLinkDialog} onOpenChange={setShowLinkDialog}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" title=\"Inserir Link\">\n              <Link2 className=\"h-4 w-4\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Inserir Link</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4 py-4\">\n              <Input\n                placeholder=\"https://exemplo.com\"\n                value={linkUrl}\n                onChange={(e) => setLinkUrl(e.target.value)}\n              />\n              <Button onClick={handleInsertLink} className=\"w-full\">\n                Inserir\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n        <Dialog open={showImageDialog} onOpenChange={setShowImageDialog}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" title=\"Inserir Imagem\">\n              <Image className=\"h-4 w-4\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Inserir Imagem</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4 py-4\">\n              <Input\n                placeholder=\"URL da imagem\"\n                value={imageUrl}\n                onChange={(e) => setImageUrl(e.target.value)}\n              />\n              <Button onClick={handleInsertImage} className=\"w-full\">\n                Inserir\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <div\n        ref={editorRef}\n        className=\"min-h-[400px] p-4 focus:outline-none\"\n        contentEditable\n        dangerouslySetInnerHTML={{ __html: initialContent }}\n        onInput={(e) => onContentChange(e.currentTarget.innerHTML)}\n      />\n    </div>\n  );\n};\n\nexport default RichTextEditor;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2 } from \"lucide-react\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport RichTextEditor from \"@/components/editor/RichTextEditor\";\n\nconst ContentManagement = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        setIsLoading(true);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setContent(\"<p>Conteúdo de exemplo para edição.</p>\");\n      } catch (error) {\n        console.error(\"Error fetching content:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchContent();\n  }, []);\n\n  const handleSaveContent = async () => {\n    try {\n      setIsLoading(true);\n      console.log(\"Saving content:\", content);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      alert(\"Conteúdo salvo com sucesso!\");\n    } catch (error) {\n      console.error(\"Error saving content:\", error);\n      alert(\"Erro ao salvar conteúdo.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <BackToAdminButton />\n      <Card>\n        <CardHeader>\n          <CardTitle>Gerenciamento de Conteúdo</CardTitle>\n          <CardDescription>\n            Gerencie os conteúdos exibidos na plataforma.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"pages\">\n            <TabsList>\n              <TabsTrigger value=\"pages\">Páginas</TabsTrigger>\n              <TabsTrigger value=\"articles\">Artigos</TabsTrigger>\n              <TabsTrigger value=\"faq\">Perguntas Frequentes</TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"pages\" className=\"pt-4\">\n              {isLoading ? (\n                <div className=\"flex justify-center py-8\">\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\n                </div>\n              ) : (\n                <React.Suspense fallback={<div className=\"flex justify-center py-8\">\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\n                </div>}>\n                  <RichTextEditor\n                    initialContent={content}\n                    onContentChange={setContent}\n                  />\n                </React.Suspense>\n              )}\n              <div className=\"flex justify-end mt-4\">\n                <Button onClick={handleSaveContent} disabled={isLoading}>\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Salvando...\n                    </>\n                  ) : (\n                    \"Salvar Alterações\"\n                  )}\n                </Button>\n              </div>\n            </TabsContent>\n            <TabsContent value=\"articles\" className=\"pt-4\">\n              <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                <p className=\"text-muted-foreground\">\n                  Gerenciamento de artigos em desenvolvimento.\n                </p>\n                <Button variant=\"outline\" className=\"mt-4\">\n                  Adicionar Novo Artigo\n                </Button>\n              </div>\n            </TabsContent>\n            <TabsContent value=\"faq\" className=\"pt-4\">\n              <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                <p className=\"text-muted-foreground\">\n                  Gerenciamento de perguntas frequentes em desenvolvimento.\n                </p>\n                <Button variant=\"outline\" className=\"mt-4\">\n                  Adicionar Nova Pergunta\n                </Button>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ContentManagement;\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import React, { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, DialogFooter } from \"@/components/ui/dialog\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { Plus, Edit, Trash2, Download, Filter, Search } from \"lucide-react\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\n\ninterface MediaContact {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  outlet: string;\n  position: string;\n  segments: string[];\n  socialMedia: {\n    twitter?: string;\n    linkedin?: string;\n    instagram?: string;\n  };\n  preferredContactTime: \"manhã\" | \"tarde\" | \"noite\";\n  notes: string;\n}\n\ninterface Outlet {\n  id: string;\n  name: string;\n  type: \"jornal\" | \"revista\" | \"portal\" | \"tv\" | \"rádio\" | \"blog\";\n  coverage: \"nacional\" | \"regional\" | \"local\";\n  segments: string[];\n  website: string;\n  address: string;\n}\n\nconst MediaContactsManagement: React.FC = () => {\n  const [contacts, setContacts] = useState<MediaContact[]>([]);\n  const [outlets, setOutlets] = useState<Outlet[]>([]);\n  const [isNewContactOpen, setIsNewContactOpen] = useState(false);\n  const [isNewOutletOpen, setIsNewOutletOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<\"contacts\" | \"outlets\">(\"contacts\");\n\n  const segmentos = [\n    \"Política\",\n    \"Economia\",\n    \"Tecnologia\",\n    \"Saúde\",\n    \"Educação\",\n    \"Meio Ambiente\",\n    \"Cultura\",\n    \"Esportes\",\n    \"Negócios\",\n    \"Ciência\"\n  ];\n\n  const handleAddContact = (data: Partial<MediaContact>) => {\n    const newContact: MediaContact = {\n      id: Date.now().toString(),\n      name: data.name || \"\",\n      email: data.email || \"\",\n      phone: data.phone || \"\",\n      outlet: data.outlet || \"\",\n      position: data.position || \"\",\n      segments: data.segments || [],\n      socialMedia: data.socialMedia || {},\n      preferredContactTime: data.preferredContactTime || \"manhã\",\n      notes: data.notes || \"\"\n    };\n\n    setContacts([...contacts, newContact]);\n    setIsNewContactOpen(false);\n    toast({\n      title: \"Contato adicionado\",\n      description: \"O contato foi adicionado com sucesso.\"\n    });\n  };\n\n  const handleAddOutlet = (data: Partial<Outlet>) => {\n    const newOutlet: Outlet = {\n      id: Date.now().toString(),\n      name: data.name || \"\",\n      type: data.type || \"portal\",\n      coverage: data.coverage || \"nacional\",\n      segments: data.segments || [],\n      website: data.website || \"\",\n      address: data.address || \"\"\n    };\n\n    setOutlets([...outlets, newOutlet]);\n    setIsNewOutletOpen(false);\n    toast({\n      title: \"Veículo adicionado\",\n      description: \"O veículo foi adicionado com sucesso.\"\n    });\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <BackToAdminButton />\n      <Card>\n        <CardHeader>\n          <CardTitle>Gerenciamento de Contatos de Mídia</CardTitle>\n          <CardDescription>\n            Gerencie contatos e veículos de comunicação para distribuição de releases.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            <div className=\"flex space-x-4\">\n              <Button\n                variant={activeTab === \"contacts\" ? \"default\" : \"outline\"}\n                onClick={() => setActiveTab(\"contacts\")}\n              >\n                Contatos\n              </Button>\n              <Button\n                variant={activeTab === \"outlets\" ? \"default\" : \"outline\"}\n                onClick={() => setActiveTab(\"outlets\")}\n              >\n                Veículos\n              </Button>\n            </div>\n\n            {activeTab === \"contacts\" && (\n              <>\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex space-x-2\">\n                    <Input placeholder=\"Buscar contatos...\" className=\"w-64\" />\n                    <Select>\n                      <SelectTrigger className=\"w-40\">\n                        <SelectValue placeholder=\"Segmento\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {segmentos.map((seg) => (\n                          <SelectItem key={seg} value={seg}>{seg}</SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\">\n                      <Download className=\"w-4 h-4 mr-2\" />\n                      Exportar\n                    </Button>\n                    <Dialog open={isNewContactOpen} onOpenChange={setIsNewContactOpen}>\n                      <DialogTrigger asChild>\n                        <Button>\n                          <Plus className=\"w-4 h-4 mr-2\" />\n                          Novo Contato\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent className=\"max-w-2xl\">\n                        <DialogHeader>\n                          <DialogTitle>Adicionar Novo Contato</DialogTitle>\n                        </DialogHeader>\n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <div className=\"space-y-2\">\n                            <Label>Nome</Label>\n                            <Input placeholder=\"Nome do contato\" />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label>Email</Label>\n                            <Input type=\"email\" placeholder=\"email@exemplo.com\" />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label>Telefone</Label>\n                            <Input placeholder=\"(00) 00000-0000\" />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label>Veículo</Label>\n                            <Select>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Selecione o veículo\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {outlets.map((outlet) => (\n                                  <SelectItem key={outlet.id} value={outlet.id}>\n                                    {outlet.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label>Cargo</Label>\n                            <Input placeholder=\"Cargo/Função\" />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label>Segmentos</Label>\n                            <Select>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Selecione os segmentos\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {segmentos.map((seg) => (\n                                  <SelectItem key={seg} value={seg}>{seg}</SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n                          <div className=\"col-span-2 space-y-2\">\n                            <Label>Observações</Label>\n                            <Textarea placeholder=\"Observações sobre o contato\" />\n                          </div>\n                        </div>\n                        <DialogFooter>\n                          <Button variant=\"outline\" onClick={() => setIsNewContactOpen(false)}>\n                            Cancelar\n                          </Button>\n                          <Button onClick={() => handleAddContact({})}>\n                            Adicionar Contato\n                          </Button>\n                        </DialogFooter>\n                      </DialogContent>\n                    </Dialog>\n                  </div>\n                </div>\n\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Nome</TableHead>\n                      <TableHead>Veículo</TableHead>\n                      <TableHead>Cargo</TableHead>\n                      <TableHead>Segmentos</TableHead>\n                      <TableHead>Email</TableHead>\n                      <TableHead>Telefone</TableHead>\n                      <TableHead className=\"text-right\">Ações</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {contacts.map((contact) => (\n                      <TableRow key={contact.id}>\n                        <TableCell>{contact.name}</TableCell>\n                        <TableCell>{contact.outlet}</TableCell>\n                        <TableCell>{contact.position}</TableCell>\n                        <TableCell>{contact.segments.join(\", \")}</TableCell>\n                        <TableCell>{contact.email}</TableCell>\n                        <TableCell>{contact.phone}</TableCell>\n                        <TableCell className=\"text-right\">\n                          <div className=\"flex justify-end space-x-2\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </>\n            )}\n\n            {activeTab === \"outlets\" && (\n              <>\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex space-x-2\">\n                    <Input placeholder=\"Buscar veículos...\" className=\"w-64\" />\n                    <Select>\n                      <SelectTrigger className=\"w-40\">\n                        <SelectValue placeholder=\"Tipo\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"jornal\">Jornal</SelectItem>\n                        <SelectItem value=\"revista\">Revista</SelectItem>\n                        <SelectItem value=\"portal\">Portal</SelectItem>\n                        <SelectItem value=\"tv\">TV</SelectItem>\n                        <SelectItem value=\"radio\">Rádio</SelectItem>\n                        <SelectItem value=\"blog\">Blog</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Dialog open={isNewOutletOpen} onOpenChange={setIsNewOutletOpen}>\n                    <DialogTrigger asChild>\n                      <Button>\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Novo Veículo\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-2xl\">\n                      <DialogHeader>\n                        <DialogTitle>Adicionar Novo Veículo</DialogTitle>\n                      </DialogHeader>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\">\n                          <Label>Nome</Label>\n                          <Input placeholder=\"Nome do veículo\" />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Tipo</Label>\n                          <Select>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Tipo de veículo\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"jornal\">Jornal</SelectItem>\n                              <SelectItem value=\"revista\">Revista</SelectItem>\n                              <SelectItem value=\"portal\">Portal</SelectItem>\n                              <SelectItem value=\"tv\">TV</SelectItem>\n                              <SelectItem value=\"radio\">Rádio</SelectItem>\n                              <SelectItem value=\"blog\">Blog</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Website</Label>\n                          <Input placeholder=\"https://\" />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Cobertura</Label>\n                          <Select>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Área de cobertura\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"nacional\">Nacional</SelectItem>\n                              <SelectItem value=\"regional\">Regional</SelectItem>\n                              <SelectItem value=\"local\">Local</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"col-span-2 space-y-2\">\n                          <Label>Endereço</Label>\n                          <Input placeholder=\"Endereço completo\" />\n                        </div>\n                      </div>\n                      <DialogFooter>\n                        <Button variant=\"outline\" onClick={() => setIsNewOutletOpen(false)}>\n                          Cancelar\n                        </Button>\n                        <Button onClick={() => handleAddOutlet({})}>\n                          Adicionar Veículo\n                        </Button>\n                      </DialogFooter>\n                    </DialogContent>\n                  </Dialog>\n                </div>\n\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Nome</TableHead>\n                      <TableHead>Tipo</TableHead>\n                      <TableHead>Cobertura</TableHead>\n                      <TableHead>Website</TableHead>\n                      <TableHead className=\"text-right\">Ações</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {outlets.map((outlet) => (\n                      <TableRow key={outlet.id}>\n                        <TableCell>{outlet.name}</TableCell>\n                        <TableCell>{outlet.type}</TableCell>\n                        <TableCell>{outlet.coverage}</TableCell>\n                        <TableCell>{outlet.website}</TableCell>\n                        <TableCell className=\"text-right\">\n                          <div className=\"flex justify-end space-x-2\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default MediaContactsManagement; ","import React, { useState } from \"react\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Play, Pause, Settings, Trash2, AlertCircle, Search } from \"lucide-react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\ninterface Monitoring {\n  id: string;\n  name: string;\n  url: string;\n  frequency: string;\n  lastCheck: string;\n  status: 'active' | 'paused' | 'error';\n  alerts: number;\n  type: string;\n}\n\nconst mockData: Monitoring[] = [\n  {\n    id: \"1\",\n    name: \"Portal da Transparência\",\n    url: \"https://www.portaltransparencia.gov.br\",\n    frequency: \"1h\",\n    lastCheck: \"2025-03-06T14:30:00\",\n    status: \"active\",\n    alerts: 3,\n    type: \"governo\"\n  },\n  {\n    id: \"2\",\n    name: \"Diário Oficial\",\n    url: \"https://www.in.gov.br\",\n    frequency: \"30min\",\n    lastCheck: \"2025-03-06T14:45:00\",\n    status: \"active\",\n    alerts: 0,\n    type: \"governo\"\n  }\n];\n\nexport const MonitoringList: React.FC = () => {\n  const [monitorings, setMonitorings] = useState<Monitoring[]>(mockData);\n  const [search, setSearch] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n\n  const filteredMonitorings = monitorings.filter(monitoring => {\n    const matchesSearch = monitoring.name.toLowerCase().includes(search.toLowerCase()) ||\n                         monitoring.url.toLowerCase().includes(search.toLowerCase());\n    const matchesFilter = filter === \"all\" || monitoring.status === filter;\n    return matchesSearch && matchesFilter;\n  });\n\n  const toggleStatus = (id: string) => {\n    setMonitorings(prev => prev.map(monitoring => {\n      if (monitoring.id === id) {\n        return {\n          ...monitoring,\n          status: monitoring.status === 'active' ? 'paused' : 'active'\n        };\n      }\n      return monitoring;\n    }));\n  };\n\n  const deleteMonitoring = (id: string) => {\n    setMonitorings(prev => prev.filter(monitoring => monitoring.id !== id));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <Search className=\"h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Buscar monitoramento...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            className=\"w-[300px]\"\n          />\n        </div>\n        <Select value={filter} onValueChange={setFilter}>\n          <SelectTrigger className=\"w-[150px]\">\n            <SelectValue placeholder=\"Filtrar por status\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">Todos</SelectItem>\n            <SelectItem value=\"active\">Ativos</SelectItem>\n            <SelectItem value=\"paused\">Pausados</SelectItem>\n            <SelectItem value=\"error\">Com Erro</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Nome</TableHead>\n            <TableHead>URL</TableHead>\n            <TableHead>Frequência</TableHead>\n            <TableHead>Última Verificação</TableHead>\n            <TableHead>Status</TableHead>\n            <TableHead>Alertas</TableHead>\n            <TableHead>Ações</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {filteredMonitorings.map((monitoring) => (\n            <TableRow key={monitoring.id}>\n              <TableCell className=\"font-medium\">{monitoring.name}</TableCell>\n              <TableCell className=\"text-muted-foreground\">{monitoring.url}</TableCell>\n              <TableCell>{monitoring.frequency}</TableCell>\n              <TableCell>{new Date(monitoring.lastCheck).toLocaleString()}</TableCell>\n              <TableCell>\n                <Badge variant={\n                  monitoring.status === 'active' ? 'default' :\n                  monitoring.status === 'paused' ? 'secondary' : 'destructive'\n                }>\n                  {monitoring.status === 'active' ? 'Ativo' :\n                   monitoring.status === 'paused' ? 'Pausado' : 'Erro'}\n                </Badge>\n              </TableCell>\n              <TableCell>\n                {monitoring.alerts > 0 ? (\n                  <Badge variant=\"destructive\" className=\"flex items-center gap-1\">\n                    <AlertCircle className=\"h-3 w-3\" />\n                    {monitoring.alerts}\n                  </Badge>\n                ) : (\n                  <Badge variant=\"secondary\">0</Badge>\n                )}\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => toggleStatus(monitoring.id)}\n                  >\n                    {monitoring.status === 'active' ? (\n                      <Pause className=\"h-4 w-4\" />\n                    ) : (\n                      <Play className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <Settings className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => deleteMonitoring(monitoring.id)}\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface MonitoringFormData {\n  name: string;\n  url: string;\n  type: string;\n  frequency: string;\n  keywords: string;\n  description: string;\n  notifications: boolean;\n}\n\nconst initialFormData: MonitoringFormData = {\n  name: \"\",\n  url: \"\",\n  type: \"\",\n  frequency: \"1h\",\n  keywords: \"\",\n  description: \"\",\n  notifications: true\n};\n\nexport const MonitoringForm: React.FC = () => {\n  const [formData, setFormData] = useState<MonitoringFormData>(initialFormData);\n  const { toast } = useToast();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validação básica\n    if (!formData.name || !formData.url) {\n      toast({\n        title: \"Erro de Validação\",\n        description: \"Por favor, preencha todos os campos obrigatórios.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    // Aqui você adicionaria a lógica para salvar o monitoramento\n    console.log(\"Dados do formulário:\", formData);\n    \n    toast({\n      title: \"Sucesso\",\n      description: \"Monitoramento criado com sucesso!\"\n    });\n\n    // Limpa o formulário\n    setFormData(initialFormData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name\">Nome do Monitoramento *</Label>\n          <Input\n            id=\"name\"\n            value={formData.name}\n            onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n            placeholder=\"Ex: Portal da Transparência\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"url\">URL para Monitorar *</Label>\n          <Input\n            id=\"url\"\n            value={formData.url}\n            onChange={(e) => setFormData(prev => ({ ...prev, url: e.target.value }))}\n            placeholder=\"https://...\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"type\">Tipo de Monitoramento</Label>\n          <Select\n            value={formData.type}\n            onValueChange={(value) => setFormData(prev => ({ ...prev, type: value }))}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Selecione o tipo\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"governo\">Governo</SelectItem>\n              <SelectItem value=\"noticias\">Notícias</SelectItem>\n              <SelectItem value=\"licitacoes\">Licitações</SelectItem>\n              <SelectItem value=\"diario\">Diário Oficial</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"frequency\">Frequência de Verificação</Label>\n          <Select\n            value={formData.frequency}\n            onValueChange={(value) => setFormData(prev => ({ ...prev, frequency: value }))}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Selecione a frequência\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"5min\">5 minutos</SelectItem>\n              <SelectItem value=\"15min\">15 minutos</SelectItem>\n              <SelectItem value=\"30min\">30 minutos</SelectItem>\n              <SelectItem value=\"1h\">1 hora</SelectItem>\n              <SelectItem value=\"6h\">6 horas</SelectItem>\n              <SelectItem value=\"12h\">12 horas</SelectItem>\n              <SelectItem value=\"24h\">24 horas</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"keywords\">Palavras-chave (separadas por vírgula)</Label>\n        <Input\n          id=\"keywords\"\n          value={formData.keywords}\n          onChange={(e) => setFormData(prev => ({ ...prev, keywords: e.target.value }))}\n          placeholder=\"termo1, termo2, termo3\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"description\">Descrição</Label>\n        <Textarea\n          id=\"description\"\n          value={formData.description}\n          onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          placeholder=\"Descreva o objetivo deste monitoramento...\"\n          rows={3}\n        />\n      </div>\n\n      <div className=\"flex justify-end space-x-2\">\n        <Button variant=\"outline\" type=\"button\" onClick={() => setFormData(initialFormData)}>\n          Limpar\n        </Button>\n        <Button type=\"submit\">\n          Criar Monitoramento\n        </Button>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Activity, AlertCircle, Clock, CheckCircle2 } from \"lucide-react\";\n\nexport const MonitoringStats: React.FC = () => {\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Monitoramentos Ativos\n          </CardTitle>\n          <Activity className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">24</div>\n          <p className=\"text-xs text-muted-foreground\">\n            +2 nas últimas 24h\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Alertas Hoje\n          </CardTitle>\n          <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">12</div>\n          <p className=\"text-xs text-muted-foreground\">\n            +4 na última hora\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Tempo Médio de Atualização\n          </CardTitle>\n          <Clock className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">15min</div>\n          <p className=\"text-xs text-muted-foreground\">\n            -2min que ontem\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Taxa de Sucesso\n          </CardTitle>\n          <CheckCircle2 className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">98.5%</div>\n          <p className=\"text-xs text-muted-foreground\">\n            +0.5% que ontem\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface Settings {\n  maxConcurrentMonitoring: number;\n  defaultCheckInterval: number;\n  retryAttempts: number;\n  enableNotifications: boolean;\n  enableErrorAlerts: boolean;\n  enableChangeTracking: boolean;\n  saveHistory: boolean;\n  historyRetentionDays: number;\n}\n\nconst defaultSettings: Settings = {\n  maxConcurrentMonitoring: 10,\n  defaultCheckInterval: 30,\n  retryAttempts: 3,\n  enableNotifications: true,\n  enableErrorAlerts: true,\n  enableChangeTracking: true,\n  saveHistory: true,\n  historyRetentionDays: 30\n};\n\nexport const MonitoringSettings: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>(defaultSettings);\n  const { toast } = useToast();\n\n  const handleSave = () => {\n    // Aqui você implementaria a lógica para salvar as configurações\n    console.log(\"Configurações salvas:\", settings);\n    \n    toast({\n      title: \"Sucesso\",\n      description: \"Configurações atualizadas com sucesso!\"\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium\">Configurações Gerais</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Configure os parâmetros gerais do sistema de monitoramento\n        </p>\n      </div>\n\n      <Separator />\n\n      <div className=\"grid gap-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"maxConcurrent\">Monitoramentos Simultâneos</Label>\n            <Input\n              id=\"maxConcurrent\"\n              type=\"number\"\n              value={settings.maxConcurrentMonitoring}\n              onChange={(e) => setSettings(prev => ({\n                ...prev,\n                maxConcurrentMonitoring: parseInt(e.target.value)\n              }))}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"defaultInterval\">Intervalo Padrão (minutos)</Label>\n            <Input\n              id=\"defaultInterval\"\n              type=\"number\"\n              value={settings.defaultCheckInterval}\n              onChange={(e) => setSettings(prev => ({\n                ...prev,\n                defaultCheckInterval: parseInt(e.target.value)\n              }))}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"retryAttempts\">Tentativas de Retry</Label>\n            <Input\n              id=\"retryAttempts\"\n              type=\"number\"\n              value={settings.retryAttempts}\n              onChange={(e) => setSettings(prev => ({\n                ...prev,\n                retryAttempts: parseInt(e.target.value)\n              }))}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"historyRetention\">Retenção de Histórico (dias)</Label>\n            <Input\n              id=\"historyRetention\"\n              type=\"number\"\n              value={settings.historyRetentionDays}\n              onChange={(e) => setSettings(prev => ({\n                ...prev,\n                historyRetentionDays: parseInt(e.target.value)\n              }))}\n            />\n          </div>\n        </div>\n\n        <Separator />\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label>Notificações</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Ativar notificações de alterações\n              </p>\n            </div>\n            <Switch\n              checked={settings.enableNotifications}\n              onCheckedChange={(checked) => setSettings(prev => ({\n                ...prev,\n                enableNotifications: checked\n              }))}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label>Alertas de Erro</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Notificar quando ocorrerem erros\n              </p>\n            </div>\n            <Switch\n              checked={settings.enableErrorAlerts}\n              onCheckedChange={(checked) => setSettings(prev => ({\n                ...prev,\n                enableErrorAlerts: checked\n              }))}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label>Rastreamento de Mudanças</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Registrar todas as alterações detectadas\n              </p>\n            </div>\n            <Switch\n              checked={settings.enableChangeTracking}\n              onCheckedChange={(checked) => setSettings(prev => ({\n                ...prev,\n                enableChangeTracking: checked\n              }))}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label>Salvar Histórico</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Manter histórico de monitoramentos\n              </p>\n            </div>\n            <Switch\n              checked={settings.saveHistory}\n              onCheckedChange={(checked) => setSettings(prev => ({\n                ...prev,\n                saveHistory: checked\n              }))}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Separator />\n\n      <div className=\"flex justify-end\">\n        <Button onClick={handleSave}>\n          Salvar Configurações\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\ninterface LineChartProps {\n  data: {\n    id: string;\n    data: Array<{\n      x: string | number;\n      y: number;\n    }>;\n  }[];\n  height?: number;\n}\n\nexport const LineChart: React.FC<LineChartProps> = ({ data, height = 400 }) => {\n  return (\n    <div style={{ height }}>\n      <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{\n          type: 'linear',\n          min: 'auto',\n          max: 'auto',\n          stacked: false,\n          reverse: false\n        }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Tempo',\n          legendOffset: 36,\n          legendPosition: 'middle'\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Valor',\n          legendOffset: -40,\n          legendPosition: 'middle'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemBackground: 'rgba(0, 0, 0, .03)',\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\ninterface BarChartProps {\n  data: Array<{\n    [key: string]: string | number;\n  }>;\n  keys: string[];\n  indexBy: string;\n  height?: number;\n}\n\nexport const BarChart: React.FC<BarChartProps> = ({ data, keys, indexBy, height = 400 }) => {\n  return (\n    <div style={{ height }}>\n      <ResponsiveBar\n        data={data}\n        keys={keys}\n        indexBy={indexBy}\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={{ scheme: 'nivo' }}\n        borderColor={{\n          from: 'color',\n          modifiers: [['darker', 1.6]]\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Categoria',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Valor',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{\n          from: 'color',\n          modifiers: [['darker', 1.6]]\n        }}\n        legends={[\n          {\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.85,\n            symbolSize: 20,\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n        role=\"application\"\n        ariaLabel=\"Gráfico de barras\"\n        barAriaLabel={e => `${e.id}: ${e.formattedValue} na categoria ${e.indexValue}`}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ResponsivePie } from '@nivo/pie';\n\ninterface PieChartProps {\n  data: Array<{\n    id: string;\n    label: string;\n    value: number;\n  }>;\n  height?: number;\n}\n\nexport const PieChart: React.FC<PieChartProps> = ({ data, height = 400 }) => {\n  return (\n    <div style={{ height }}>\n      <ResponsivePie\n        data={data}\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        borderColor={{\n          from: 'color',\n          modifiers: [['darker', 0.2]]\n        }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{\n          from: 'color',\n          modifiers: [['darker', 2]]\n        }}\n        legends={[\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 56,\n            itemsSpacing: 0,\n            itemWidth: 100,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 18,\n            symbolShape: 'circle',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemTextColor: '#000'\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  );\n};\n","export const geoData = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"São Paulo\",\n        \"id\": \"SP\"\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [[[-47.5, -23], [-47, -23.5], [-46.5, -23], [-47, -22.5], [-47.5, -23]]]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Rio de Janeiro\",\n        \"id\": \"RJ\"\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [[[-43.5, -22.5], [-43, -23], [-42.5, -22.5], [-43, -22], [-43.5, -22.5]]]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Brasília\",\n        \"id\": \"DF\"\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [[[-48, -15.5], [-47.5, -16], [-47, -15.5], [-47.5, -15], [-48, -15.5]]]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Salvador\",\n        \"id\": \"BA\"\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [[[-38.5, -13], [-38, -13.5], [-37.5, -13], [-38, -12.5], [-38.5, -13]]]\n      }\n    }\n  ]\n};\n","import React from 'react';\nimport { ResponsiveChoropleth } from '@nivo/geo';\nimport { geoData } from './geoData'; // Dados do mapa do Brasil\n\ninterface MapChartProps {\n  data: Array<{\n    region: string;\n    latency: number;\n    availability: number;\n    errorRate: number;\n    requestCount: number;\n  }>;\n  nameField: string;\n  valueField: keyof Pick<MapChartProps['data'][0], 'latency' | 'availability' | 'errorRate' | 'requestCount'>;\n  height?: number;\n}\n\nexport const MapChart: React.FC<MapChartProps> = ({\n  data,\n  nameField,\n  valueField,\n  height = 400\n}) => {\n  const chartData = data.map(item => ({\n    id: item.region,\n    value: item[valueField]\n  }));\n\n  return (\n    <div style={{ height }}>\n      <ResponsiveChoropleth\n        data={chartData}\n        features={geoData.features}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        colors=\"blues\"\n        domain={[0, Math.max(...chartData.map(d => d.value))]}\n        unknownColor=\"#666666\"\n        label=\"properties.name\"\n        valueFormat=\".2s\"\n        projectionScale={600}\n        projectionTranslation={[0.5, 0.5]}\n        projectionRotation={[0, 0, 0]}\n        enableGraticule={true}\n        graticuleLineColor=\"rgba(0, 0, 0, .2)\"\n        borderWidth={0.5}\n        borderColor=\"#152538\"\n        legends={[\n          {\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 20,\n            translateY: -20,\n            itemsSpacing: 0,\n            itemWidth: 94,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#444444',\n            itemOpacity: 0.85,\n            symbolSize: 18,\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemTextColor: '#000000',\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  );\n};\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Button } from \"@/components/ui/button\";\nimport { DatePickerWithRange } from \"@/components/ui/date-range-picker\";\nimport { LineChart, BarChart, PieChart, MapChart } from \"@/components/charts\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Bell, ArrowUp, ArrowDown, Gauge } from \"lucide-react\";\n\ninterface RegionMetric {\n  region: string;\n  latency: number;\n  availability: number;\n  errorRate: number;\n  requestCount: number;\n}\n\ninterface Alert {\n  id: string;\n  type: 'error' | 'warning' | 'info';\n  message: string;\n  timestamp: string;\n  status: 'active' | 'resolved';\n}\n\ninterface ComparisonMetric {\n  current: number;\n  previous: number;\n  percentageChange: number;\n}\n\ninterface AnalyticsData {\n  timeRange: string;\n  metrics: {\n    totalMonitorings: number;\n    activeMonitorings: number;\n    successRate: ComparisonMetric;\n    averageUpdateTime: ComparisonMetric;\n    alertsGenerated: ComparisonMetric;\n  };\n  trends: {\n    date: string;\n    updates: number;\n    alerts: number;\n  }[];\n  distribution: {\n    type: string;\n    count: number;\n  }[];\n  regionMetrics: RegionMetric[];\n  realtimeAlerts: Alert[];\n}\n\nexport const MonitoringAnalytics: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [timeRange, setTimeRange] = useState(\"7d\");\n  const [exportFormat, setExportFormat] = useState(\"csv\");\n\n  // Dados mockados para exemplo\n  const analyticsData: AnalyticsData = {\n    timeRange: \"7d\",\n    metrics: {\n      totalMonitorings: 150,\n      activeMonitorings: 120,\n      successRate: {\n        current: 98.5,\n        previous: 97.2,\n        percentageChange: 1.3\n      },\n      averageUpdateTime: {\n        current: 45,\n        previous: 50,\n        percentageChange: -10\n      },\n      alertsGenerated: {\n        current: 25,\n        previous: 30,\n        percentageChange: -16.7\n      }\n    },\n    trends: [\n      { date: \"2024-03-01\", updates: 45, alerts: 3 },\n      { date: \"2024-03-02\", updates: 52, alerts: 5 },\n      { date: \"2024-03-03\", updates: 48, alerts: 2 },\n    ],\n    distribution: [\n      { type: \"Governo\", count: 45 },\n      { type: \"Notícias\", count: 35 },\n      { type: \"Licitações\", count: 40 },\n      { type: \"Diário Oficial\", count: 30 }\n    ],\n    regionMetrics: [\n      { region: \"São Paulo\", latency: 120, availability: 99.9, errorRate: 0.1, requestCount: 15000 },\n      { region: \"Rio de Janeiro\", latency: 150, availability: 99.7, errorRate: 0.3, requestCount: 12000 },\n      { region: \"Brasília\", latency: 180, availability: 99.5, errorRate: 0.5, requestCount: 10000 },\n      { region: \"Salvador\", latency: 200, availability: 99.3, errorRate: 0.7, requestCount: 8000 }\n    ],\n    realtimeAlerts: [\n      {\n        id: \"1\",\n        type: \"error\",\n        message: \"Alto tempo de resposta detectado em São Paulo\",\n        timestamp: new Date().toISOString(),\n        status: \"active\"\n      },\n      {\n        id: \"2\",\n        type: \"warning\",\n        message: \"Aumento no número de requisições em Brasília\",\n        timestamp: new Date().toISOString(),\n        status: \"active\"\n      },\n      {\n        id: \"3\",\n        type: \"info\",\n        message: \"Manutenção programada em Rio de Janeiro\",\n        timestamp: new Date().toISOString(),\n        status: \"resolved\"\n      }\n    ]\n  };\n\n  const handleExportData = () => {\n    console.log(`Exportando dados em formato ${exportFormat}`);\n  };\n\n  const renderMetricComparison = (metric: ComparisonMetric, unit: string = '') => (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"text-2xl font-bold\">\n        {metric.current}{unit}\n      </div>\n      <div className={`flex items-center ${metric.percentageChange >= 0 ? 'text-green-500' : 'text-red-500'}`}>\n        {metric.percentageChange >= 0 ? <ArrowUp size={16} /> : <ArrowDown size={16} />}\n        <span className=\"text-sm\">{Math.abs(metric.percentageChange)}%</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Análise de Monitoramento</h2>\n          <p className=\"text-muted-foreground\">\n            Análise estatística e tendências dos monitoramentos\n          </p>\n        </div>\n        <div className=\"flex space-x-4\">\n          <Select value={timeRange} onValueChange={setTimeRange}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Período\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"24h\">Últimas 24 horas</SelectItem>\n              <SelectItem value=\"7d\">Últimos 7 dias</SelectItem>\n              <SelectItem value=\"30d\">Últimos 30 dias</SelectItem>\n              <SelectItem value=\"custom\">Personalizado</SelectItem>\n            </SelectContent>\n          </Select>\n\n          <Select value={exportFormat} onValueChange={setExportFormat}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Formato de Exportação\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"csv\">CSV</SelectItem>\n              <SelectItem value=\"json\">JSON</SelectItem>\n              <SelectItem value=\"excel\">Excel</SelectItem>\n            </SelectContent>\n          </Select>\n\n          <Button onClick={handleExportData}>\n            Exportar Dados\n          </Button>\n        </div>\n      </div>\n\n      {/* Alertas em Tempo Real */}\n      <div className=\"grid grid-cols-1 gap-4\">\n        {analyticsData.realtimeAlerts\n          .filter(alert => alert.status === 'active')\n          .map(alert => (\n            <Alert key={alert.id} className={`\n              ${alert.type === 'error' ? 'border-red-500 bg-red-50' : \n                alert.type === 'warning' ? 'border-yellow-500 bg-yellow-50' : \n                'border-blue-500 bg-blue-50'}\n            `}>\n              <Bell className=\"h-4 w-4\" />\n              <AlertTitle className=\"font-semibold\">\n                {alert.type === 'error' ? 'Erro Crítico' : \n                 alert.type === 'warning' ? 'Alerta' : \n                 'Informação'}\n              </AlertTitle>\n              <AlertDescription>\n                {alert.message}\n                <span className=\"ml-2 text-sm text-muted-foreground\">\n                  {new Date(alert.timestamp).toLocaleTimeString()}\n                </span>\n              </AlertDescription>\n            </Alert>\n          ))}\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList>\n          <TabsTrigger value=\"overview\">Visão Geral</TabsTrigger>\n          <TabsTrigger value=\"trends\">Tendências</TabsTrigger>\n          <TabsTrigger value=\"distribution\">Distribuição</TabsTrigger>\n          <TabsTrigger value=\"regions\">Performance Regional</TabsTrigger>\n          <TabsTrigger value=\"predictions\">Previsões</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\">\n          <div className=\"grid grid-cols-3 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Taxa de Sucesso</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {renderMetricComparison(analyticsData.metrics.successRate, '%')}\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Tempo Médio de Atualização</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {renderMetricComparison(analyticsData.metrics.averageUpdateTime, ' min')}\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Alertas Gerados</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {renderMetricComparison(analyticsData.metrics.alertsGenerated)}\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card className=\"mt-4\">\n            <CardHeader>\n              <CardTitle>Atividade de Monitoramento</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <LineChart\n                data={analyticsData.trends}\n                xField=\"date\"\n                yFields={[\"updates\", \"alerts\"]}\n                height={300}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"regions\">\n          <div className=\"grid gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Performance por Região</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"h-[400px]\">\n                    <MapChart\n                      data={analyticsData.regionMetrics}\n                      nameField=\"region\"\n                      valueField=\"latency\"\n                      height={400}\n                    />\n                  </div>\n                  <div className=\"space-y-4\">\n                    {analyticsData.regionMetrics.map((metric) => (\n                      <Card key={metric.region}>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">{metric.region}</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                            <div>\n                              <p className=\"text-muted-foreground\">Latência</p>\n                              <p className=\"font-medium\">{metric.latency}ms</p>\n                            </div>\n                            <div>\n                              <p className=\"text-muted-foreground\">Disponibilidade</p>\n                              <p className=\"font-medium\">{metric.availability}%</p>\n                            </div>\n                            <div>\n                              <p className=\"text-muted-foreground\">Taxa de Erro</p>\n                              <p className=\"font-medium\">{metric.errorRate}%</p>\n                            </div>\n                            <div>\n                              <p className=\"text-muted-foreground\">Requisições</p>\n                              <p className=\"font-medium\">{metric.requestCount}</p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"trends\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Análise de Tendências</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <LineChart\n                data={analyticsData.trends}\n                xField=\"date\"\n                yFields={[\"updates\"]}\n                height={400}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"distribution\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Distribuição por Tipo</CardTitle>\n            </CardHeader>\n            <CardContent className=\"flex justify-around\">\n              <div className=\"w-1/2\">\n                <PieChart\n                  data={analyticsData.distribution}\n                  nameField=\"type\"\n                  valueField=\"count\"\n                  height={300}\n                />\n              </div>\n              <div className=\"w-1/2\">\n                <BarChart\n                  data={analyticsData.distribution}\n                  xField=\"type\"\n                  yField=\"count\"\n                  height={300}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"predictions\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Previsões de Atualização</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground\">\n                Em desenvolvimento. Esta funcionalidade usará machine learning para prever\n                padrões de atualização e momentos prováveis de mudanças.\n              </p>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { LineChart, BarChart, PieChart } from \"@/components/charts\";\n\ninterface NetworkMetrics {\n  centrality: Record<string, number>;\n  pageRank: Record<string, number>;\n  hubScore: Record<string, number>;\n}\n\ninterface ContentMetrics {\n  sentiment: {\n    polarity: number;\n    subjectivity: number;\n  };\n  keyPhrases: string[];\n  wordFrequency: Record<string, number>;\n}\n\ninterface AnomalyMetrics {\n  totalAnomalies: number;\n  anomalyPercentage: number;\n  timeAnomalies: boolean[];\n  contentAnomalies: boolean[];\n}\n\ninterface Report {\n  summary: {\n    totalInsights: number;\n    timestamp: string;\n  };\n  insights: Array<{\n    type: string;\n    title: string;\n    description: string;\n    data: any;\n  }>;\n  recommendations: Array<{\n    category: string;\n    action: string;\n  }>;\n}\n\ninterface MonitoringReportProps {\n  data: {\n    network: NetworkMetrics;\n    content: ContentMetrics;\n    anomalies: AnomalyMetrics;\n    report: Report;\n  };\n}\n\nexport const MonitoringReports: React.FC<MonitoringReportProps> = ({ data }) => {\n  const { network, content, anomalies, report } = data;\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Relatório de Monitoramento</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"overview\">\n            <TabsList>\n              <TabsTrigger value=\"overview\">Visão Geral</TabsTrigger>\n              <TabsTrigger value=\"network\">Análise de Rede</TabsTrigger>\n              <TabsTrigger value=\"content\">Análise de Conteúdo</TabsTrigger>\n              <TabsTrigger value=\"anomalies\">Anomalias</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"overview\">\n              <div className=\"grid gap-4 grid-cols-2\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Resumo</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p>Total de Insights: {report.summary.totalInsights}</p>\n                    <p>Última Atualização: {new Date(report.summary.timestamp).toLocaleString()}</p>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Recomendações</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"list-disc pl-4\">\n                      {report.recommendations.map((rec, index) => (\n                        <li key={index}>\n                          <strong>{rec.category}:</strong> {rec.action}\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"network\">\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Métricas de Rede</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <BarChart\n                        data={Object.entries(network.centrality).map(([url, value]) => ({\n                          url: url.split('/').pop() || url,\n                          centrality: value\n                        }))}\n                        xField=\"url\"\n                        yField=\"centrality\"\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Hub Score</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <PieChart\n                        data={Object.entries(network.hubScore).map(([url, value]) => ({\n                          name: url.split('/').pop() || url,\n                          value\n                        }))}\n                        nameField=\"name\"\n                        valueField=\"value\"\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"content\">\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Análise de Sentimento</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <h4 className=\"font-medium\">Polaridade</h4>\n                        <p className=\"text-2xl\">{content.sentiment.polarity.toFixed(2)}</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium\">Subjetividade</h4>\n                        <p className=\"text-2xl\">{content.sentiment.subjectivity.toFixed(2)}</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Frequência de Palavras</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <BarChart\n                        data={Object.entries(content.wordFrequency).map(([word, count]) => ({\n                          word,\n                          count\n                        }))}\n                        xField=\"word\"\n                        yField=\"count\"\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Frases-Chave</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"list-disc pl-4\">\n                      {content.keyPhrases.map((phrase, index) => (\n                        <li key={index}>{phrase}</li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"anomalies\">\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Detecção de Anomalias</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <h4 className=\"font-medium\">Total de Anomalias</h4>\n                        <p className=\"text-2xl\">{anomalies.totalAnomalies}</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium\">Percentual de Anomalias</h4>\n                        <p className=\"text-2xl\">{anomalies.anomalyPercentage.toFixed(2)}%</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Anomalias Temporais</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <LineChart\n                        data={anomalies.timeAnomalies.map((isAnomaly, index) => ({\n                          index,\n                          value: isAnomaly ? 1 : 0\n                        }))}\n                        xField=\"index\"\n                        yFields={[\"value\"]}\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { MonitoringList } from \"./MonitoringList\";\nimport { MonitoringForm } from \"./MonitoringForm\";\nimport { MonitoringStats } from \"./MonitoringStats\";\nimport { MonitoringSettings } from \"./MonitoringSettings\";\nimport { MonitoringAnalytics } from \"./MonitoringAnalytics\";\nimport { MonitoringReports } from \"./MonitoringReports\";\n\n// Dados mockados para exemplo\nconst mockReportData = {\n  network: {\n    centrality: {\n      \"http://example.com/page1\": 0.8,\n      \"http://example.com/page2\": 0.6,\n      \"http://example.com/page3\": 0.4,\n    },\n    pageRank: {\n      \"http://example.com/page1\": 0.5,\n      \"http://example.com/page2\": 0.3,\n      \"http://example.com/page3\": 0.2,\n    },\n    hubScore: {\n      \"http://example.com/page1\": 0.7,\n      \"http://example.com/page2\": 0.2,\n      \"http://example.com/page3\": 0.1,\n    }\n  },\n  content: {\n    sentiment: {\n      polarity: 0.2,\n      subjectivity: 0.5\n    },\n    keyPhrases: [\n      \"Importante atualização do sistema\",\n      \"Novas funcionalidades implementadas\",\n      \"Melhorias de desempenho\",\n      \"Correções de bugs\",\n      \"Atualizações de segurança\"\n    ],\n    wordFrequency: {\n      \"sistema\": 10,\n      \"atualização\": 8,\n      \"segurança\": 6,\n      \"melhorias\": 5,\n      \"desempenho\": 4\n    }\n  },\n  anomalies: {\n    totalAnomalies: 5,\n    anomalyPercentage: 12.5,\n    timeAnomalies: [false, true, false, false, true, false, false, false],\n    contentAnomalies: [false, false, true, false, false, true, false, false]\n  },\n  report: {\n    summary: {\n      totalInsights: 8,\n      timestamp: new Date().toISOString()\n    },\n    insights: [\n      {\n        type: \"network\",\n        title: \"Alta Centralidade\",\n        description: \"Páginas com maior conectividade\",\n        data: { value: 0.8 }\n      },\n      {\n        type: \"content\",\n        title: \"Sentimento Positivo\",\n        description: \"Conteúdo com tendência positiva\",\n        data: { value: 0.2 }\n      }\n    ],\n    recommendations: [\n      {\n        category: \"Rede\",\n        action: \"Monitorar páginas centrais para mudanças\"\n      },\n      {\n        category: \"Conteúdo\",\n        action: \"Manter análise de sentimento do conteúdo\"\n      }\n    ]\n  }\n};\n\nexport const AdminMonitoringDashboard: React.FC = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const path = location.pathname.split(\"/\").pop() || \"overview\";\n  const [activeTab, setActiveTab] = useState(path);\n\n  const handleTabChange = (value: string) => {\n    setActiveTab(value);\n    navigate(`/admin/monitoring/${value === \"overview\" ? \"\" : value}`);\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">Central de Monitoramento</h2>\n        <p className=\"text-muted-foreground\">\n          Gerencie todos os monitoramentos do sistema\n        </p>\n      </div>\n\n      <MonitoringStats />\n\n      <Tabs value={activeTab} onValueChange={handleTabChange} className=\"mt-6\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"overview\">Visão Geral</TabsTrigger>\n          <TabsTrigger value=\"add\">Novo Monitoramento</TabsTrigger>\n          <TabsTrigger value=\"analytics\">Análises</TabsTrigger>\n          <TabsTrigger value=\"settings\">Configurações</TabsTrigger>\n          <TabsTrigger value=\"reports\">Relatórios</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Monitoramentos Ativos</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <MonitoringList />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"add\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Adicionar Novo Monitoramento</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <MonitoringForm />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"analytics\">\n          <MonitoringAnalytics />\n        </TabsContent>\n\n        <TabsContent value=\"settings\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Configurações de Monitoramento</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <MonitoringSettings />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"reports\">\n          <MonitoringReports data={mockReportData} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n","\nimport { Button } from \"@/components/ui/button\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { LogIn, LogOut, User, Home, ArrowLeft, Search, Leaf } from \"lucide-react\";\n\ninterface HeaderProps {\n  isAuthenticated: boolean;\n  onLoginClick: () => void;\n  onLogoutClick: () => void;\n  clientName?: string;\n  clientType?: string;\n}\n\nconst Header = ({ \n  isAuthenticated, \n  onLoginClick, \n  onLogoutClick,\n  clientName,\n  clientType\n}: HeaderProps) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Check if we're on a client page\n  const isClientPage = location.pathname.includes('/client') || \n                      location.pathname.includes('/admin/client');\n\n  const getClientTypeLabel = (type?: string) => {\n    if (!type) return \"\";\n    \n    switch (type) {\n      case \"observatory\": return \"Observatório\";\n      case \"researcher\": return \"Pesquisador\";\n      case \"politician\": return \"Político\";\n      case \"institution\": return \"Instituição\";\n      case \"journalist\": return \"Jornalista\";\n      case \"press\": return \"Assessoria de Imprensa\";\n      default: return type;\n    }\n  };\n\n  return (\n    <header className=\"py-4 mb-6\">\n      <div className=\"flex justify-between items-center\">\n        <div \n          onClick={() => navigate(\"/\")} \n          className=\"cursor-pointer flex items-center\"\n        >\n          <div className=\"flex items-center gap-2\">\n            <div className=\"bg-gradient-to-r from-green-600 to-blue-600 text-white p-2 rounded-lg flex items-center\">\n              <Search className=\"h-5 w-5 mr-1\" />\n              <Leaf className=\"h-5 w-5\" />\n            </div>\n            <span className=\"text-xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\n              Varredura\n            </span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {clientName && clientType && (\n            <div className=\"hidden md:flex items-center mr-4 bg-muted px-3 py-1 rounded-lg\">\n              <User className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm font-medium\">{clientName}</p>\n                <p className=\"text-xs text-muted-foreground\">{getClientTypeLabel(clientType)}</p>\n              </div>\n            </div>\n          )}\n\n          {isClientPage ? (\n            <>\n              <Button\n                variant=\"ghost\"\n                className=\"flex items-center gap-2\"\n                onClick={() => navigate(\"/\")}\n              >\n                <Home className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Início</span>\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"ghost\"\n                onClick={() => navigate(\"/\")}\n              >\n                Início\n              </Button>\n              \n              <Button\n                variant=\"ghost\"\n                onClick={() => navigate(\"/help\")}\n              >\n                Ajuda\n              </Button>\n            </>\n          )}\n          \n          {isAuthenticated && !isClientPage && (\n            <Button\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n              onClick={onLogoutClick}\n            >\n              <LogOut className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Sair</span>\n            </Button>\n          )}\n          \n          {!isAuthenticated && !isClientPage && (\n            <Button\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n              onClick={() => navigate(\"/client-login\")}\n            >\n              <User className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Área do Cliente</span>\n            </Button>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-8 pt-6 border-t border-border max-w-7xl mx-auto w-full\">\n      <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n        <div className=\"flex items-center text-sm text-muted-foreground\">\n          <span className=\"flex items-center\">\n            Sustentabilidade\n          </span>\n        </div>\n        <div className=\"text-sm text-muted-foreground\">\n          Desenvolvido por: Hiroshi Koga\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const observatoryDetails: ClientTypeDetail = {\n  id: \"observatory\",\n  title: \"Observatório\",\n  shortDescription: \"Plataforma completa para observatórios de políticas públicas.\",\n  description: \"Plataforma completa para observatórios de políticas públicas acompanharem indicadores, integrarem dados e gerarem relatórios automatizados com visualizações avançadas.\",\n  details: \"Nossa solução para observatórios oferece um conjunto completo de ferramentas para coleta, análise e visualização de dados relacionados a políticas públicas. Com painéis personalizáveis e relatórios automáticos, sua equipe poderá acompanhar indicadores em tempo real, identificar tendências e compartilhar insights com facilidade.\",\n  features: [\n    \"Dashboard personalizado com indicadores\",\n    \"Integração com bases de dados públicas\",\n    \"Geração automática de relatórios\",\n    \"Exportação de dados em múltiplos formatos\",\n    \"Visualizações interativas e gráficos avançados\",\n    \"Compartilhamento seguro de dados\"\n  ],\n  benefits: [\n    \"Economize tempo com automação de coleta de dados\",\n    \"Melhore a qualidade das análises com dados integrados\",\n    \"Aumente a visibilidade do seu observatório com relatórios profissionais\",\n    \"Facilite a tomada de decisões baseadas em evidências\",\n    \"Monitore tendências e padrões em tempo real\"\n  ],\n  caseStudy: {\n    title: \"Observatório de Políticas Educacionais\",\n    description: \"Um observatório educacional conseguiu reduzir em 70% o tempo gasto na coleta e processamento de dados, aumentando a frequência de publicação de relatórios de trimestral para mensal.\"\n  }\n};\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const researcherDetails: ClientTypeDetail = {\n  id: \"researcher\",\n  title: \"Pesquisador\",\n  shortDescription: \"Acesso a datasets completos e ferramentas estatísticas avançadas.\",\n  description: \"Acesso a datasets completos, APIs para integração com ferramentas estatísticas, histórico de séries temporais e capacidade de compartilhamento de dados com outros pesquisadores.\",\n  details: \"Desenvolvida especialmente para pesquisadores, nossa plataforma oferece acesso privilegiado a conjuntos de dados exclusivos e ferramentas estatísticas avançadas. Consulte séries históricas, exporte dados em formato compatível com softwares estatísticos e colabore com outros pesquisadores em um ambiente seguro.\",\n  features: [\n    \"Acesso a datasets exclusivos e atualizados\",\n    \"Ferramentas de análise estatística integradas\",\n    \"Exportação para R, Python, SPSS e outros formatos\",\n    \"Colaboração segura entre pesquisadores\",\n    \"Documentação completa das metodologias\"\n  ],\n  benefits: [\n    \"Acesse dados confiáveis e atualizados para suas pesquisas\",\n    \"Economize tempo com dados já estruturados e limpos\",\n    \"Colabore facilmente com colegas em projetos compartilhados\",\n    \"Obtenha suporte metodológico especializado\",\n    \"Publique resultados com maior rapidez e qualidade\"\n  ],\n  caseStudy: {\n    title: \"Grupo de Pesquisa em Políticas Públicas\",\n    description: \"Um grupo de pesquisa universitário conseguiu publicar 3 artigos científicos em menos de um ano usando os datasets e ferramentas disponíveis na plataforma.\"\n  }\n};\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const politicianDetails: ClientTypeDetail = {\n  id: \"politician\",\n  title: \"Político\",\n  shortDescription: \"Alertas e análises para tomada de decisão em políticas públicas.\",\n  description: \"Alertas sobre novas legislações, análise de impacto de políticas públicas, resumos executivos de dados governamentais e comparativos de indicadores por região.\",\n  details: \"Nossa plataforma para políticos e assessores parlamentares oferece informações estratégicas para a tomada de decisões. Receba alertas sobre novas legislações, acompanhe indicadores relevantes para sua base eleitoral e acesse análises de impacto de políticas públicas, tudo em um único ambiente.\",\n  features: [\n    \"Alertas personalizados sobre legislação\",\n    \"Indicadores regionalizados por base eleitoral\",\n    \"Análises comparativas entre regiões\",\n    \"Resumos executivos para tomada de decisão\",\n    \"Monitoramento de métricas de políticas públicas\"\n  ],\n  benefits: [\n    \"Tome decisões mais informadas com dados atualizados\",\n    \"Acompanhe o impacto de políticas públicas em sua região\",\n    \"Receba alertas sobre temas relevantes para sua atuação\",\n    \"Compare indicadores entre diferentes regiões\",\n    \"Fundamente propostas com dados confiáveis\"\n  ],\n  caseStudy: {\n    title: \"Secretaria Estadual de Planejamento\",\n    description: \"Uma secretaria estadual utilizou nossa plataforma para identificar áreas prioritárias para investimentos, otimizando a alocação de recursos públicos com base em evidências.\"\n  }\n};\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const institutionDetails: ClientTypeDetail = {\n  id: \"institution\",\n  title: \"Instituição\",\n  shortDescription: \"Ferramentas para gestão e análise de dados institucionais.\",\n  description: \"Ferramentas para gestão de dados institucionais, monitoramento de programas, dashboards personalizados e relatórios de acompanhamento para instituições de diversos setores.\",\n  details: \"Desenvolvemos uma solução completa para instituições públicas e privadas gerenciarem seus dados e monitorarem programas. Com dashboards personalizados, relatórios automatizados e ferramentas de análise, sua instituição poderá tomar decisões baseadas em evidências e demonstrar resultados com transparência.\",\n  features: [\n    \"Gestão centralizada de dados institucionais\",\n    \"Monitoramento de indicadores de programas\",\n    \"Dashboards personalizados por departamento\",\n    \"Relatórios de desempenho automáticos\",\n    \"Comparativos históricos e projeções\"\n  ],\n  benefits: [\n    \"Centralize informações de diferentes departamentos\",\n    \"Demonstre resultados com relatórios profissionais\",\n    \"Melhore a transparência e a prestação de contas\",\n    \"Otimize processos com base em dados concretos\",\n    \"Facilite auditorias e avaliações externas\"\n  ],\n  caseStudy: {\n    title: \"Rede de Hospitais Regionais\",\n    description: \"Uma rede de hospitais conseguiu reduzir em 25% o tempo de espera para atendimentos ao identificar gargalos nos processos através dos dashboards de monitoramento.\"\n  }\n};\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const journalistDetails: ClientTypeDetail = {\n  id: \"journalist\",\n  title: \"Jornalista\",\n  shortDescription: \"Dados verificados e visualizações para reportagens de qualidade.\",\n  description: \"Acesso a indicadores atualizados, visualizações prontas para publicação, verificação de dados e comparativos históricos para embasar reportagens investigativas e especiais.\",\n  details: \"Nossa plataforma para jornalistas fornece acesso a dados verificados e atualizados, além de visualizações prontas para publicação. Com ferramentas de checagem e comparativos históricos, você poderá produzir reportagens investigativas e especiais com embasamento sólido e visualizações de impacto.\",\n  features: [\n    \"Dados verificados de fontes confiáveis\",\n    \"Visualizações prontas para publicação\",\n    \"Ferramentas de checagem de informações\",\n    \"Séries históricas para comparativos\",\n    \"Exportação em formatos compatíveis com redações\"\n  ],\n  benefits: [\n    \"Produza reportagens baseadas em dados confiáveis\",\n    \"Economize tempo com visualizações prontas para uso\",\n    \"Verifique informações com ferramentas especializadas\",\n    \"Encontre tendências e padrões para pautas exclusivas\",\n    \"Diferencie seu trabalho com análises aprofundadas\"\n  ],\n  caseStudy: {\n    title: \"Reportagem Investigativa Premiada\",\n    description: \"Uma equipe de jornalismo de dados utilizou nossa plataforma para criar uma série investigativa sobre gastos públicos que foi premiada nacionalmente.\"\n  }\n};\n","\nimport { ClientTypeDetail } from \"@/types/clientTypes\";\n\nexport const pressDetails: ClientTypeDetail = {\n  id: \"press\",\n  title: \"Assessoria de Imprensa\",\n  shortDescription: \"Sistema completo para gestão de releases e contatos.\",\n  description: \"Sistema completo para criação, aprovação e monitoramento de releases, acompanhamento de publicações, métricas de desempenho e gestão de contatos com veículos de comunicação.\",\n  details: \"Nossa solução para assessorias de imprensa oferece um fluxo completo para criação, aprovação, distribuição e monitoramento de releases. Com ferramentas para gestão de contatos, acompanhamento de publicações e métricas de desempenho, sua equipe poderá otimizar estratégias e demonstrar resultados com precisão.\",\n  features: [\n    \"Fluxo de aprovação de releases\",\n    \"Distribuição segmentada por público\",\n    \"Monitoramento de publicações\",\n    \"Métricas de desempenho e ROI\",\n    \"Gestão avançada de contatos e veículos\"\n  ],\n  benefits: [\n    \"Aumente a taxa de aproveitamento de seus releases\",\n    \"Segmente envios para maior relevância\",\n    \"Acompanhe resultados em tempo real\",\n    \"Demonstre o valor do trabalho com métricas precisas\",\n    \"Organize contatos e histórico de relacionamento com a imprensa\"\n  ],\n  caseStudy: {\n    title: \"Assessoria de Imprensa Corporativa\",\n    description: \"Uma assessoria de imprensa conseguiu aumentar em 40% a taxa de aproveitamento de seus releases após implementar o sistema de segmentação e monitoramento.\"\n  }\n};\n","\nimport { ClientType, ClientTypeDetail } from \"@/types/clientTypes\";\nimport { observatoryDetails } from \"./observatory\";\nimport { researcherDetails } from \"./researcher\";\nimport { politicianDetails } from \"./politician\";\nimport { institutionDetails } from \"./institution\";\nimport { journalistDetails } from \"./journalist\";\nimport { pressDetails } from \"./press\";\n\nexport const clientTypeDetails: Record<ClientType, ClientTypeDetail> = {\n  observatory: observatoryDetails,\n  researcher: researcherDetails,\n  politician: politicianDetails,\n  institution: institutionDetails,\n  journalist: journalistDetails,\n  press: pressDetails\n};\n","\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\nexport interface ColorClasses {\n  bg: string;\n  light: string;\n  text: string;\n  border: string;\n}\n\nexport const getColorClasses = (type: ClientType): ColorClasses => {\n  const colorMap: Record<ClientType, ColorClasses> = {\n    observatory: { bg: \"bg-blue-600\", light: \"bg-blue-50\", text: \"text-blue-600\", border: \"border-blue-200\" },\n    researcher: { bg: \"bg-indigo-600\", light: \"bg-indigo-50\", text: \"text-indigo-600\", border: \"border-indigo-200\" },\n    politician: { bg: \"bg-green-600\", light: \"bg-green-50\", text: \"text-green-600\", border: \"border-green-200\" },\n    institution: { bg: \"bg-purple-600\", light: \"bg-purple-50\", text: \"text-purple-600\", border: \"border-purple-200\" },\n    journalist: { bg: \"bg-red-600\", light: \"bg-red-50\", text: \"text-red-600\", border: \"border-red-200\" },\n    press: { bg: \"bg-amber-600\", light: \"bg-amber-50\", text: \"text-amber-600\", border: \"border-amber-200\" }\n  };\n  return colorMap[type];\n};\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","\nimport { ClientType } from \"@/types/clientTypes\";\n\ninterface ClientTypeInfo {\n  title: string;\n  description: string;\n  alert: string | null;\n  categories: string[];\n}\n\nexport const clientTypes = [\n  {\n    type: \"observatory\" as ClientType,\n    label: \"Observatório\",\n    description: \"Acesso a dashboards e ferramentas para observatórios de dados\",\n    alert: \"Popular\"\n  },\n  {\n    type: \"researcher\" as ClientType,\n    label: \"Pesquisador\",\n    description: \"Ferramentas para análise e processamento de dados científicos\",\n    alert: \"\"\n  },\n  {\n    type: \"politician\" as ClientType,\n    label: \"Político\",\n    description: \"Monitoramento de legislação e indicadores governamentais\",\n    alert: \"\"\n  },\n  {\n    type: \"institution\" as ClientType,\n    label: \"Instituição\",\n    description: \"Soluções para gestão de dados institucionais\",\n    alert: \"\"\n  },\n  {\n    type: \"journalist\" as ClientType,\n    label: \"Jornalista\",\n    description: \"Acesso a dados verificados para produção de conteúdo\",\n    alert: \"\"\n  },\n  {\n    type: \"press\" as ClientType,\n    label: \"Assessoria de Imprensa\",\n    description: \"Ferramentas para gestão de releases e contatos\",\n    alert: \"Novo\"\n  },\n];\n\nconst clientTypeInfoMap: Record<ClientType, ClientTypeInfo> = {\n  observatory: {\n    title: \"Monitoramento do Observatório\",\n    description: \"Identifique claramente o que está sendo monitorado para facilitar a organização dos dados.\",\n    alert: null,\n    categories: [\"ambiente\", \"legislação\", \"economia\", \"sociedade\", \"governo\", \"tecnologia\"]\n  },\n  institution: {\n    title: \"Monitoramento Institucional\",\n    description: \"Insira o título do monitoramento relacionado às atividades da sua instituição.\",\n    alert: \"Como instituição, você possui acesso a ferramentas de análise avançadas.\",\n    categories: [\"economia\", \"política\", \"desenvolvimento\", \"recursos\", \"projetos\", \"orçamento\"]\n  },\n  researcher: {\n    title: \"Monitoramento de Pesquisa\",\n    description: \"Defina o título da sua pesquisa ou do conjunto de dados a ser monitorado.\",\n    alert: \"As fontes de pesquisa são verificadas automaticamente quanto à disponibilidade.\",\n    categories: [\"pesquisa\", \"dados científicos\", \"estatísticas\", \"artigos\", \"repositórios\", \"bases de dados\"]\n  },\n  journalist: {\n    title: \"Monitoramento de Mídia\",\n    description: \"Especifique o tópico de mídia ou fluxo de notícias para monitoramento.\",\n    alert: \"Você receberá alertas em tempo real para novos conteúdos publicados.\",\n    categories: [\"notícias\", \"reportagens\", \"publicações\", \"redes sociais\", \"eventos\", \"comunicados\"]\n  },\n  politician: {\n    title: \"Monitoramento Político\",\n    description: \"Monitore políticas públicas, legislação ou temas de interesse político.\",\n    alert: \"Os dados de monitoramento político são atualizados diariamente.\",\n    categories: [\"legislação\", \"políticas públicas\", \"orçamento\", \"debates\", \"propostas\", \"audiências\"]\n  },\n  press: {\n    title: \"Monitoramento de Imprensa\",\n    description: \"Monitore a cobertura de mídia e publicações relacionadas aos seus releases.\",\n    alert: \"Os releases publicados são monitorados automaticamente.\",\n    categories: [\"releases\", \"cobertura\", \"mídia\", \"publicações\", \"menções\", \"veículos\"]\n  }\n};\n\n// Use the 'export type' syntax for re-exporting types with isolatedModules enabled\nexport type { ClientTypeInfo }; \n// Re-export ClientType para resolver os erros nos demais arquivos\nexport type { ClientType };\n\nexport const getClientTypeInfo = (clientType: ClientType): ClientTypeInfo => {\n  return clientTypeInfoMap[clientType] || clientTypeInfoMap.observatory;\n};\n\nexport const getMonitoringFormTitle = (clientType?: ClientType): string => {\n  if (!clientType) return \"Adicionar Novo Monitoramento\";\n  return clientTypeInfoMap[clientType]?.title || \"Adicionar Novo Monitoramento\";\n};\n\nexport const getMonitoringFormDescription = (clientType?: ClientType): string => {\n  if (!clientType) return \"Configure uma nova fonte de dados para monitoramento contínuo\";\n  return clientTypeInfoMap[clientType]?.description || \"Configure uma nova fonte de dados para monitoramento contínuo\";\n};\n\nexport const getDefaultCategories = (clientType: ClientType): string[] => {\n  return clientTypeInfoMap[clientType]?.categories || clientTypeInfoMap.observatory.categories;\n};\n","\nimport React from \"react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { InfoIcon } from \"lucide-react\";\n\ninterface ClientAlertProps {\n  alertText: string | null;\n}\n\nconst ClientAlert: React.FC<ClientAlertProps> = ({ alertText }) => {\n  if (!alertText) return null;\n  \n  return (\n    <Alert>\n      <InfoIcon className=\"h-4 w-4\" />\n      <AlertDescription>{alertText}</AlertDescription>\n    </Alert>\n  );\n};\n\nexport default ClientAlert;\n","\nimport React, { useState } from \"react\";\nimport { FormLabel } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { PlusCircle } from \"lucide-react\";\nimport { ClientType, getDefaultCategories } from \"./utils/clientTypeUtils\";\n\ninterface CategoryManagerProps {\n  clientType?: ClientType;\n  onCategoryAdded: (newCategories: string[]) => void;\n}\n\nconst CategoryManager: React.FC<CategoryManagerProps> = ({ clientType, onCategoryAdded }) => {\n  console.log(\"CategoryManager rendering with clientType:\", clientType);\n  \n  // Use Observatory as default client type if none is provided\n  const effectiveClientType = clientType || \"observatory\";\n  \n  const [newCategory, setNewCategory] = useState(\"\");\n  const [customCategories, setCustomCategories] = useState<string[]>([]);\n  \n  const handleAddCategory = () => {\n    const defaultCategories = getDefaultCategories(effectiveClientType);\n    const allCategories = [...defaultCategories, ...customCategories];\n    \n    if (newCategory && !allCategories.includes(newCategory)) {\n      const updatedCustomCategories = [...customCategories, newCategory];\n      setCustomCategories(updatedCustomCategories);\n      setNewCategory(\"\");\n      onCategoryAdded([...defaultCategories, ...updatedCustomCategories]);\n      console.log(\"Added new category:\", newCategory);\n    }\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <FormLabel>Adicionar Nova Categoria</FormLabel>\n      <div className=\"flex items-center gap-2\">\n        <Input\n          placeholder=\"Nova categoria...\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n          className=\"flex-1\"\n        />\n        <Button \n          type=\"button\" \n          variant=\"outline\" \n          size=\"sm\"\n          onClick={handleAddCategory}\n        >\n          <PlusCircle className=\"h-4 w-4 mr-1\" />\n          Adicionar\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryManager;\n","\nimport React from \"react\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport { FormField, FormItem, FormLabel, FormControl, FormDescription } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { ClientType, getClientTypeInfo } from \"./utils/clientTypeUtils\";\n\ninterface MonitoringItem {\n  name: string;\n  url: string;\n  api_url?: string;\n  frequency: string;\n  category: string;\n  keywords?: string;\n  responsible?: string;\n  notes?: string;\n}\n\ninterface BasicFormFieldsProps {\n  form: UseFormReturn<MonitoringItem>;\n  clientType?: ClientType;\n}\n\nconst BasicFormFields: React.FC<BasicFormFieldsProps> = ({ form, clientType }) => {\n  console.log(\"BasicFormFields rendering with clientType:\", clientType);\n  \n  // Use Observatory as default client type if none is provided\n  const effectiveClientType = clientType || \"observatory\";\n  const clientInfo = getClientTypeInfo(effectiveClientType);\n  \n  return (\n    <>\n      <FormField\n        control={form.control}\n        name=\"name\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Nome do Monitoramento</FormLabel>\n            <FormControl>\n              <Input placeholder=\"Ex: Índice de Desmatamento - Amazônia Legal\" {...field} />\n            </FormControl>\n            <FormDescription>\n              {clientInfo.description}\n            </FormDescription>\n          </FormItem>\n        )}\n      />\n      \n      <FormField\n        control={form.control}\n        name=\"url\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>URL da Fonte</FormLabel>\n            <FormControl>\n              <Input placeholder=\"https://dados.gov.br/exemplo\" {...field} />\n            </FormControl>\n          </FormItem>\n        )}\n      />\n\n      <FormField\n        control={form.control}\n        name=\"api_url\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>URL da API (opcional)</FormLabel>\n            <FormControl>\n              <Input placeholder=\"https://api.exemplo.com/dados\" {...field} />\n            </FormControl>\n            <FormDescription>\n              Insira o endpoint da API para monitoramento via integração direta\n            </FormDescription>\n          </FormItem>\n        )}\n      />\n    </>\n  );\n};\n\nexport default BasicFormFields;\n","\nimport React from \"react\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport { FormField, FormItem, FormLabel, FormControl, FormDescription } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\ninterface MonitoringItem {\n  name: string;\n  url: string;\n  api_url?: string;\n  frequency: string;\n  category: string;\n  keywords?: string;\n  responsible?: string;\n  notes?: string;\n}\n\ninterface AdvancedFormFieldsProps {\n  form: UseFormReturn<MonitoringItem>;\n}\n\nconst AdvancedFormFields: React.FC<AdvancedFormFieldsProps> = ({ form }) => {\n  return (\n    <>\n      <FormField\n        control={form.control}\n        name=\"keywords\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Palavras-chave (opcional)</FormLabel>\n            <FormControl>\n              <Input placeholder=\"Desmatamento, meio ambiente, amazônia\" {...field} />\n            </FormControl>\n            <FormDescription>\n              Separe as palavras-chave por vírgula\n            </FormDescription>\n          </FormItem>\n        )}\n      />\n\n      <FormField\n        control={form.control}\n        name=\"responsible\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Responsável</FormLabel>\n            <FormControl>\n              <Input placeholder=\"Nome do pesquisador ou responsável\" {...field} />\n            </FormControl>\n            <FormDescription>\n              Informe o nome do pesquisador responsável por este monitoramento\n            </FormDescription>\n          </FormItem>\n        )}\n      />\n      \n      <FormField\n        control={form.control}\n        name=\"notes\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Anotações (opcional)</FormLabel>\n            <FormControl>\n              <Textarea\n                placeholder=\"Observações relevantes sobre este monitoramento...\"\n                className=\"min-h-[100px]\"\n                {...field}\n              />\n            </FormControl>\n          </FormItem>\n        )}\n      />\n    </>\n  );\n};\n\nexport default AdvancedFormFields;\n","\nimport React, { useState } from \"react\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport { Form, FormField, FormItem, FormLabel, FormControl } from \"@/components/ui/form\";\nimport { Button } from \"@/components/ui/button\";\nimport { ClientType, getClientTypeInfo, getDefaultCategories } from \"./utils/clientTypeUtils\";\nimport ClientAlert from \"./ClientAlert\";\nimport CategoryManager from \"./CategoryManager\";\nimport BasicFormFields from \"./BasicFormFields\";\nimport AdvancedFormFields from \"./AdvancedFormFields\";\n\ninterface MonitoringItem {\n  name: string;\n  url: string;\n  api_url?: string;\n  frequency: string;\n  category: string;\n  keywords?: string;\n  responsible?: string;\n  notes?: string;\n}\n\ninterface MonitoringFormInputsProps {\n  form: UseFormReturn<MonitoringItem>;\n  onSubmit: (data: MonitoringItem) => void;\n  clientType?: ClientType;\n}\n\nconst MonitoringFormInputs: React.FC<MonitoringFormInputsProps> = ({ form, onSubmit, clientType }) => {\n  console.log(\"MonitoringFormInputs rendering with clientType:\", clientType);\n  \n  // Use Observatory as default client type if none is provided\n  const effectiveClientType = clientType || \"observatory\";\n  \n  const [allCategories, setAllCategories] = useState<string[]>(getDefaultCategories(effectiveClientType));\n  const clientInfo = getClientTypeInfo(effectiveClientType);\n  \n  console.log(\"MonitoringFormInputs initialized with categories:\", allCategories);\n  \n  const handleCategoriesUpdated = (categories: string[]) => {\n    console.log(\"Categories updated:\", categories);\n    setAllCategories(categories);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <ClientAlert alertText={clientInfo.alert || null} />\n        \n        <BasicFormFields form={form} clientType={effectiveClientType} />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"category\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Categoria</FormLabel>\n                <FormControl>\n                  <select\n                    className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    {...field}\n                  >\n                    <option value=\"\">Selecione uma categoria</option>\n                    {allCategories.map((category) => (\n                      <option key={category} value={category}>\n                        {category.charAt(0).toUpperCase() + category.slice(1)}\n                      </option>\n                    ))}\n                  </select>\n                </FormControl>\n              </FormItem>\n            )}\n          />\n\n          <CategoryManager \n            clientType={effectiveClientType} \n            onCategoryAdded={handleCategoriesUpdated}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"frequency\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Frequência de Atualização</FormLabel>\n              <FormControl>\n                <select\n                  className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                  {...field}\n                >\n                  <option value=\"\">Selecione uma frequência</option>\n                  <option value=\"diario\">Diário</option>\n                  <option value=\"semanal\">Semanal</option>\n                  <option value=\"quinzenal\">Quinzenal</option>\n                  <option value=\"mensal\">Mensal</option>\n                </select>\n              </FormControl>\n            </FormItem>\n          )}\n        />\n\n        <AdvancedFormFields form={form} />\n\n        <Button type=\"submit\" className=\"w-full\">Adicionar Monitoramento</Button>\n      </form>\n    </Form>\n  );\n};\n\nexport default MonitoringFormInputs;\n","\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport MonitoringFormInputs from \"./MonitoringFormInputs\";\nimport { ClientType } from \"@/types/clientTypes\";\nimport { getMonitoringFormTitle, getMonitoringFormDescription } from \"./utils/clientTypeUtils\";\n\nexport interface MonitoringItem {\n  id?: string;\n  name: string;\n  url: string;\n  api_url?: string;\n  frequency: string;\n  category: string;\n  keywords?: string;\n  responsible?: string;\n  institution?: string;\n  notes?: string;\n}\n\ninterface MonitoringFormProps {\n  form: UseFormReturn<MonitoringItem>;\n  onSubmit: (data: MonitoringItem) => void;\n  clientType?: ClientType;\n}\n\nconst MonitoringForm: React.FC<MonitoringFormProps> = ({ form, onSubmit, clientType }) => {\n  console.log(\"MonitoringForm rendering with clientType:\", clientType);\n  \n  // Ensure form is valid before rendering\n  if (!form) {\n    console.error(\"MonitoringForm received undefined form\");\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Erro no Formulário</CardTitle>\n          <CardDescription>\n            Ocorreu um erro ao carregar o formulário de monitoramento. Por favor, recarregue a página.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n    );\n  }\n  \n  return (\n    <MonitoringFormInputs form={form} onSubmit={onSubmit} clientType={clientType} />\n  );\n};\n\nexport default MonitoringForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useForm } from \"react-hook-form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport MonitoringForm, { MonitoringItem } from \"@/components/monitoring/MonitoringForm\";\nimport { BarChart3, FilePieChart, LineChart, PieChart } from \"lucide-react\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\nconst ObservatoryClient: React.FC = () => {\n  const { toast } = useToast();\n  const auth = useAuth();\n  const clientType = \"observatory\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  \n  // State for monitoring items\n  const [monitoringItems, setMonitoringItems] = useState<MonitoringItem[]>([]);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [selectedChart, setSelectedChart] = useState<string>(\"category\");\n  \n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  // Create the form with correct typing\n  const form = useForm<MonitoringItem>({\n    defaultValues: {\n      name: \"\",\n      url: \"\",\n      api_url: \"\",\n      frequency: \"diario\",\n      category: \"\",\n      keywords: \"\",\n      responsible: \"\",\n      institution: \"\",\n      notes: \"\"\n    }\n  });\n\n  // Mock alerts data\n  const [alerts, setAlerts] = useState([\n    { id: \"1\", title: \"Nova atualização de dados\", description: \"Dados do IBGE atualizados hoje\", date: new Date().toISOString(), read: false },\n    { id: \"2\", title: \"Relatório pendente\", description: \"Relatório mensal aguardando geração\", date: new Date().toISOString(), read: false },\n    { id: \"3\", title: \"Fonte indisponível\", description: \"Portal de dados do governo temporariamente fora do ar\", date: new Date().toISOString(), read: true },\n  ]);\n\n  const handleMarkAsRead = (id: string) => {\n    setAlerts(alerts.map(alert => \n      alert.id === id ? { ...alert, read: true } : alert\n    ));\n    toast({\n      title: \"Alerta marcado como lido\",\n      description: \"O alerta foi marcado como lido com sucesso.\"\n    });\n  };\n\n  const handleAddMonitoring = (data: MonitoringItem) => {\n    console.log(\"Adding monitoring item:\", data);\n    const newItem = { ...data, id: Date.now().toString() };\n    setMonitoringItems([...monitoringItems, newItem]);\n    toast({\n      title: \"Monitoramento adicionado\",\n      description: `O monitoramento \"${data.name}\" foi adicionado com sucesso.`\n    });\n    form.reset();\n  };\n\n  const handleDeleteMonitoring = (id: string) => {\n    console.log(\"Deleting monitoring item:\", id);\n    const updatedItems = monitoringItems.filter(item => item.id !== id);\n    setMonitoringItems(updatedItems);\n    toast({\n      title: \"Monitoramento removido\",\n      description: \"O monitoramento foi removido com sucesso.\"\n    });\n  };\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Usuário Observatório\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title}</h1>\n            <p className=\"text-muted-foreground\">\n              {details.shortDescription}\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Clientes Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de clientes ativos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Alertas</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>{alerts.filter(a => !a.read).length}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Alertas não lidos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Integrações</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>{Math.min(monitoringItems.length, 3)}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Fontes de dados integradas</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"monitoring\">Monitoramentos</TabsTrigger>\n              <TabsTrigger value=\"add\">Novo Monitoramento</TabsTrigger>\n              <TabsTrigger value=\"alerts\">Alertas ({alerts.filter(a => !a.read).length})</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Dashboard de Monitoramentos</CardTitle>\n                  <div className=\"flex gap-2 mt-2\">\n                    <button \n                      onClick={() => setSelectedChart(\"category\")}\n                      className={`p-2 rounded-md ${selectedChart === \"category\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <PieChart className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"frequency\")}\n                      className={`p-2 rounded-md ${selectedChart === \"frequency\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <BarChart3 className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"timeline\")}\n                      className={`p-2 rounded-md ${selectedChart === \"timeline\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <LineChart className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"distribution\")}\n                      className={`p-2 rounded-md ${selectedChart === \"distribution\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <FilePieChart className=\"h-5 w-5\" />\n                    </button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  {monitoringItems.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground mb-4\">Nenhum monitoramento configurado ainda.</p>\n                      <button \n                        onClick={() => setActiveTab(\"add\")}\n                        className={`px-4 py-2 rounded-md text-white ${colorClasses.bg}`}>\n                        Novo Monitoramento\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium\">\n                        {selectedChart === \"category\" && \"Distribuição por Categoria\"}\n                        {selectedChart === \"frequency\" && \"Frequência de Atualização\"}\n                        {selectedChart === \"timeline\" && \"Linha do Tempo de Monitoramentos\"}\n                        {selectedChart === \"distribution\" && \"Distribuição por Responsável\"}\n                      </h3>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes do Observatório</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"monitoring\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Lista de Monitoramentos</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {monitoringItems.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground mb-4\">Nenhum monitoramento configurado ainda.</p>\n                      <button \n                        onClick={() => setActiveTab(\"add\")}\n                        className={`px-4 py-2 rounded-md text-white ${colorClasses.bg}`}>\n                        Novo Monitoramento\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-6\">\n                      {monitoringItems.map(item => (\n                        <div key={item.id} className=\"border rounded-md p-4\">\n                          <div className=\"flex justify-between items-start mb-2\">\n                            <h3 className=\"text-lg font-medium\">{item.name}</h3>\n                            <button \n                              onClick={() => handleDeleteMonitoring(item.id || \"\")}\n                              className=\"text-red-500 hover:text-red-700\">\n                              Excluir\n                            </button>\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">URL:</p>\n                              <p className=\"text-sm\">{item.url}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Categoria:</p>\n                              <p className=\"text-sm\">{item.category}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Frequência:</p>\n                              <p className=\"text-sm\">{item.frequency}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Responsável:</p>\n                              <p className=\"text-sm\">{item.responsible || \"Não definido\"}</p>\n                            </div>\n                            {item.keywords && (\n                              <div className=\"col-span-2\">\n                                <p className=\"text-sm text-muted-foreground\">Palavras-chave:</p>\n                                <p className=\"text-sm\">{item.keywords}</p>\n                              </div>\n                            )}\n                            {item.notes && (\n                              <div className=\"col-span-2\">\n                                <p className=\"text-sm text-muted-foreground\">Anotações:</p>\n                                <p className=\"text-sm\">{item.notes}</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"add\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Novo Monitoramento</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <MonitoringForm \n                    form={form} \n                    onSubmit={handleAddMonitoring} \n                    clientType={clientType} \n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"alerts\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Alertas de Monitoramento</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {alerts.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground\">Nenhum alerta disponível no momento.</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {alerts.map(alert => (\n                        <div key={alert.id} className={`border rounded-md p-4 ${!alert.read ? 'border-l-4 border-l-amber-500' : ''}`}>\n                          <div className=\"flex justify-between items-start mb-2\">\n                            <h3 className=\"text-lg font-medium\">{alert.title}</h3>\n                            {!alert.read && (\n                              <button \n                                onClick={() => handleMarkAsRead(alert.id)}\n                                className={`px-2 py-1 rounded-md text-xs text-white ${colorClasses.bg}`}>\n                                Marcar como lido\n                              </button>\n                            )}\n                          </div>\n                          <p className=\"text-sm mb-2\">{alert.description}</p>\n                          <p className=\"text-xs text-muted-foreground\">\n                            {new Date(alert.date).toLocaleDateString('pt-BR', {\n                              day: '2-digit',\n                              month: '2-digit',\n                              year: 'numeric',\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ObservatoryClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\nconst ResearcherClient: React.FC = () => {\n  const auth = useAuth();\n  const clientType = \"researcher\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  \n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Usuário Pesquisador\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title}</h1>\n            <p className=\"text-muted-foreground\">\n              {details.shortDescription}\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Clientes Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de pesquisadores ativos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Pesquisas</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.length * 2} {/* Mock: cada cliente tem em média 2 pesquisas */}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de pesquisas em andamento</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Premium</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.plan === 'premium').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Clientes com plano premium</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"research\">Pesquisas</TabsTrigger>\n              <TabsTrigger value=\"datasets\">Datasets</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Visão Geral</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Resumo de Atividades</h3>\n                    <p>Visualize as principais métricas e atividades dos pesquisadores.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes Pesquisadores</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            {/* Outras tabs... */}\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ResearcherClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\nconst PoliticianClient: React.FC = () => {\n  const auth = useAuth();\n  const clientType = \"politician\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  \n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Usuário Político\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title}</h1>\n            <p className=\"text-muted-foreground\">\n              {details.shortDescription}\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Clientes Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de políticos ativos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Projetos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.length * 3} {/* Mock: cada cliente tem em média 3 projetos */}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de projetos monitorados</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Premium</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.plan === 'premium').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Clientes com plano premium</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"projects\">Projetos</TabsTrigger>\n              <TabsTrigger value=\"legislation\">Legislação</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Visão Geral</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Resumo de Atividades</h3>\n                    <p>Visualize as principais métricas e atividades dos políticos.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes Políticos</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            {/* Outras tabs... */}\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PoliticianClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\nimport { useForm } from \"react-hook-form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport MonitoringForm, { MonitoringItem } from \"@/components/monitoring/MonitoringForm\";\nimport { BarChart3, FilePieChart, LineChart, PieChart } from \"lucide-react\";\n\nconst InstitutionClient: React.FC = () => {\n  const { toast } = useToast();\n  const auth = useAuth();\n  const clientType = \"institution\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [monitoringItems, setMonitoringItems] = useState<MonitoringItem[]>([]);\n  const [selectedChart, setSelectedChart] = useState<string>(\"category\");\n  \n  // Create the form with correct typing\n  const form = useForm<MonitoringItem>({\n    defaultValues: {\n      name: \"\",\n      url: \"\",\n      api_url: \"\",\n      frequency: \"diario\",\n      category: \"\",\n      keywords: \"\",\n      responsible: \"\",\n      institution: \"\",\n      notes: \"\"\n    }\n  });\n\n  // Mock alerts data\n  const [alerts, setAlerts] = useState([\n    { id: \"1\", title: \"Atualização de indicadores\", description: \"Novos indicadores econômicos disponíveis\", date: new Date().toISOString(), read: false },\n    { id: \"2\", title: \"Prazo de relatório\", description: \"Prazo para relatório trimestral se aproximando\", date: new Date().toISOString(), read: false },\n    { id: \"3\", title: \"Novo programa disponível\", description: \"Programa de desenvolvimento social adicionado\", date: new Date().toISOString(), read: true },\n  ]);\n\n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  const handleMarkAsRead = (id: string) => {\n    setAlerts(alerts.map(alert => \n      alert.id === id ? { ...alert, read: true } : alert\n    ));\n    toast({\n      title: \"Alerta marcado como lido\",\n      description: \"O alerta foi marcado como lido com sucesso.\"\n    });\n  };\n\n  const handleAddMonitoring = (data: MonitoringItem) => {\n    console.log(\"Adding monitoring item:\", data);\n    // Add an ID (in a real app this would come from the backend)\n    const newItem = { ...data, id: Date.now().toString() };\n    // Add to the list of monitoring items\n    setMonitoringItems([...monitoringItems, newItem]);\n    // Show success message\n    toast({\n      title: \"Monitoramento adicionado\",\n      description: `O monitoramento \"${data.name}\" foi adicionado com sucesso.`\n    });\n    form.reset();\n  };\n\n  const handleDeleteMonitoring = (id: string) => {\n    console.log(\"Deleting monitoring item:\", id);\n    // Filter out the item to delete\n    const updatedItems = monitoringItems.filter(item => item.id !== id);\n    setMonitoringItems(updatedItems);\n    // Show success message\n    toast({\n      title: \"Monitoramento removido\",\n      description: \"O monitoramento foi removido com sucesso.\"\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Usuário Instituição\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title}</h1>\n            <p className=\"text-muted-foreground\">\n              {details.shortDescription}\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Clientes Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de instituições ativas</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Departamentos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.length * 4} {/* Mock: cada cliente tem em média 4 departamentos */}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de departamentos monitorados</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Premium</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.plan === 'premium').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Clientes com plano premium</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Programas Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>{monitoringItems.length}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de programas monitorados</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Alertas</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>{alerts.filter(a => !a.read).length}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Alertas não lidos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Relatórios</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>{Math.min(monitoringItems.length * 2, 12)}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Relatórios gerados este mês</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"monitoring\">Monitoramentos</TabsTrigger>\n              <TabsTrigger value=\"add\">Novo Monitoramento</TabsTrigger>\n              <TabsTrigger value=\"alerts\">Alertas ({alerts.filter(a => !a.read).length})</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Visão Geral</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Resumo de Atividades</h3>\n                    <p>Visualize as principais métricas e atividades das instituições.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes Institucionais</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"monitoring\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Lista de Monitoramentos</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {monitoringItems.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground mb-4\">Nenhum monitoramento configurado ainda.</p>\n                      <button \n                        onClick={() => setActiveTab(\"add\")}\n                        className={`px-4 py-2 rounded-md text-white ${colorClasses.bg}`}>\n                        Novo Monitoramento\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-6\">\n                      {monitoringItems.map(item => (\n                        <div key={item.id} className=\"border rounded-md p-4\">\n                          <div className=\"flex justify-between items-start mb-2\">\n                            <h3 className=\"text-lg font-medium\">{item.name}</h3>\n                            <button \n                              onClick={() => handleDeleteMonitoring(item.id || \"\")}\n                              className=\"text-red-500 hover:text-red-700\">\n                              Excluir\n                            </button>\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">URL:</p>\n                              <p className=\"text-sm\">{item.url}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Categoria:</p>\n                              <p className=\"text-sm\">{item.category}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Frequência:</p>\n                              <p className=\"text-sm\">{item.frequency}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Responsável:</p>\n                              <p className=\"text-sm\">{item.responsible || \"Não definido\"}</p>\n                            </div>\n                            {item.keywords && (\n                              <div className=\"col-span-2\">\n                                <p className=\"text-sm text-muted-foreground\">Palavras-chave:</p>\n                                <p className=\"text-sm\">{item.keywords}</p>\n                              </div>\n                            )}\n                            {item.notes && (\n                              <div className=\"col-span-2\">\n                                <p className=\"text-sm text-muted-foreground\">Anotações:</p>\n                                <p className=\"text-sm\">{item.notes}</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"add\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Novo Monitoramento</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <MonitoringForm \n                    form={form} \n                    onSubmit={handleAddMonitoring} \n                    clientType={clientType} \n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"alerts\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Alertas de Monitoramento</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {alerts.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground\">Nenhum alerta disponível no momento.</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {alerts.map(alert => (\n                        <div key={alert.id} className={`border rounded-md p-4 ${!alert.read ? 'border-l-4 border-l-amber-500' : ''}`}>\n                          <div className=\"flex justify-between items-start mb-2\">\n                            <h3 className=\"text-lg font-medium\">{alert.title}</h3>\n                            {!alert.read && (\n                              <button \n                                onClick={() => handleMarkAsRead(alert.id)}\n                                className={`px-2 py-1 rounded-md text-xs text-white ${colorClasses.bg}`}>\n                                Marcar como lido\n                              </button>\n                            )}\n                          </div>\n                          <p className=\"text-sm mb-2\">{alert.description}</p>\n                          <p className=\"text-xs text-muted-foreground\">\n                            {new Date(alert.date).toLocaleDateString('pt-BR', {\n                              day: '2-digit',\n                              month: '2-digit',\n                              year: 'numeric',\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Dashboard de Monitoramentos</CardTitle>\n                  <div className=\"flex gap-2 mt-2\">\n                    <button \n                      onClick={() => setSelectedChart(\"category\")}\n                      className={`p-2 rounded-md ${selectedChart === \"category\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <PieChart className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"frequency\")}\n                      className={`p-2 rounded-md ${selectedChart === \"frequency\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <BarChart3 className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"timeline\")}\n                      className={`p-2 rounded-md ${selectedChart === \"timeline\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <LineChart className=\"h-5 w-5\" />\n                    </button>\n                    <button \n                      onClick={() => setSelectedChart(\"distribution\")}\n                      className={`p-2 rounded-md ${selectedChart === \"distribution\" ? colorClasses.bg + \" text-white\" : \"bg-gray-100\"}`}\n                    >\n                      <FilePieChart className=\"h-5 w-5\" />\n                    </button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  {monitoringItems.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-muted-foreground mb-4\">Nenhum monitoramento configurado ainda.</p>\n                      <button \n                        onClick={() => setActiveTab(\"add\")}\n                        className={`px-4 py-2 rounded-md text-white ${colorClasses.bg}`}>\n                        Novo Monitoramento\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium\">\n                        {selectedChart === \"category\" && \"Distribuição por Categoria\"}\n                        {selectedChart === \"frequency\" && \"Frequência de Atualização\"}\n                        {selectedChart === \"timeline\" && \"Linha do Tempo de Monitoramentos\"}\n                        {selectedChart === \"distribution\" && \"Distribuição por Responsável\"}\n                      </h3>\n                      \n                      <div className=\"border rounded-md p-4 min-h-[300px] flex items-center justify-center\">\n                        {selectedChart === \"category\" && (\n                          <div className=\"text-center w-full\">\n                            <p className=\"text-muted-foreground mb-2\">Visualização de gráfico em pizza das categorias</p>\n                            <div className=\"h-64 w-full bg-muted/20 rounded-md flex items-center justify-center\">\n                              <PieChart className=\"h-16 w-16 text-muted\" />\n                            </div>\n                          </div>\n                        )}\n                        \n                        {selectedChart === \"frequency\" && (\n                          <div className=\"text-center w-full\">\n                            <p className=\"text-muted-foreground mb-2\">Visualização de gráfico de barras das frequências</p>\n                            <div className=\"h-64 w-full bg-muted/20 rounded-md flex items-center justify-center\">\n                              <BarChart3 className=\"h-16 w-16 text-muted\" />\n                            </div>\n                          </div>\n                        )}\n                        \n                        {selectedChart === \"timeline\" && (\n                          <div className=\"text-center w-full\">\n                            <p className=\"text-muted-foreground mb-2\">Visualização de linha do tempo</p>\n                            <div className=\"h-64 w-full bg-muted/20 rounded-md flex items-center justify-center\">\n                              <LineChart className=\"h-16 w-16 text-muted\" />\n                            </div>\n                          </div>\n                        )}\n                        \n                        {selectedChart === \"distribution\" && (\n                          <div className=\"text-center w-full\">\n                            <p className=\"text-muted-foreground mb-2\">Visualização de gráfico de distribuição</p>\n                            <div className=\"h-64 w-full bg-muted/20 rounded-md flex items-center justify-center\">\n                              <FilePieChart className=\"h-16 w-16 text-muted\" />\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                      \n                      <h3 className=\"text-lg font-medium mt-6\">Resumo de Monitoramentos</h3>\n                      <div className=\"border rounded-md p-4\">\n                        <table className=\"w-full\">\n                          <thead className=\"border-b\">\n                            <tr>\n                              <th className=\"text-left pb-2\">Nome</th>\n                              <th className=\"text-left pb-2\">Categoria</th>\n                              <th className=\"text-left pb-2\">Frequência</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {monitoringItems.map(item => (\n                              <tr key={item.id} className=\"border-b last:border-0\">\n                                <td className=\"py-2\">{item.name}</td>\n                                <td className=\"py-2\">{item.category}</td>\n                                <td className=\"py-2\">{item.frequency}</td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default InstitutionClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\nconst JournalistClient: React.FC = () => {\n  const auth = useAuth();\n  const clientType = \"journalist\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  \n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Usuário Jornalista\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title}</h1>\n            <p className=\"text-muted-foreground\">\n              {details.shortDescription}\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Clientes Ativos</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de jornalistas ativos</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Matérias</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.length * 5} {/* Mock: cada cliente tem em média 5 matérias */}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de matérias monitoradas</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Premium</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.plan === 'premium').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Clientes com plano premium</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"articles\">Matérias</TabsTrigger>\n              <TabsTrigger value=\"sources\">Fontes</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Visão Geral</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Resumo de Atividades</h3>\n                    <p>Visualize as principais métricas e atividades dos jornalistas.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes Jornalistas</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            {/* Outras tabs... */}\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default JournalistClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport BackToAdminButton from \"@/components/admin/BackToAdminButton\";\nimport ClientList from \"@/components/admin/clients/ClientList\";\nimport { useClientManagement } from \"@/components/admin/clients/hooks/useClientManagement\";\n\nconst PressClient: React.FC = () => {\n  const auth = useAuth();\n  const clientType = \"press\";\n  const colorClasses = getColorClasses(clientType);\n  const details = clientTypeDetails[clientType];\n  const { clients, isLoading, loadClients } = useClientManagement(clientType);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  \n  useEffect(() => {\n    loadClients();\n  }, [loadClients]);\n\n  const handleAddClient = () => {\n    // Implementar lógica de adicionar cliente\n  };\n\n  const handleEditClient = (client: any) => {\n    // Implementar lógica de editar cliente\n  };\n\n  const handleDeleteClient = (clientId: string) => {\n    // Implementar lógica de deletar cliente\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6 flex-grow\">\n        <div className=\"max-w-7xl mx-auto\">\n          <BackToAdminButton />\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n            clientName=\"Assessoria Exemplo\"\n            clientType={clientType}\n          />\n          \n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">{details.title} - Área do Cliente</h1>\n            <p className=\"text-muted-foreground\">\n              Gerencie seus releases, contatos e monitore a cobertura de mídia\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Releases Publicados</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>\n                    {clients.filter(c => c.status === 'active').length}\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Total de releases publicados este mês</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Taxa de Conversão</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>42%</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Média de aproveitamento dos releases</p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader className={`${colorClasses.light} rounded-t-lg`}>\n                <CardTitle className=\"flex justify-between items-center\">\n                  <span>Visualizações</span>\n                  <span className={`${colorClasses.text} font-bold text-2xl`}>8.4k</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-4\">\n                <p>Visualizações totais dos seus conteúdos</p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-6\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"clients\">Clientes</TabsTrigger>\n              <TabsTrigger value=\"publications\">Publicações</TabsTrigger>\n              <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Visão Geral</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Resumo de Atividades</h3>\n                    <p>Visualize as principais métricas e atividades dos veículos de imprensa.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"clients\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Clientes Imprensa</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ClientList\n                    clients={clients}\n                    onAddClient={handleAddClient}\n                    onEditClient={handleEditClient}\n                    onDeleteClient={handleDeleteClient}\n                    currentClientType={clientType}\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            {/* Outras tabs... */}\n          </Tabs>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PressClient;\n","import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Search, BarChart2, Leaf } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HeroSection: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <section className=\"py-12 px-6 bg-gradient-to-r from-green-50 to-blue-50\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row items-center gap-12\">\n          <div className=\"md:w-1/2\">\n            <div className=\"flex items-center mb-6\">\n              <div className=\"bg-gradient-to-r from-green-600 to-blue-600 text-white p-3 rounded-lg mr-3 flex items-center\">\n                <Search className=\"h-8 w-8 mr-2\" />\n                <Leaf className=\"h-8 w-8\" />\n              </div>\n              <h1 className=\"text-4xl md:text-5xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\n                Varredura\n              </h1>\n            </div>\n            \n            <div className=\"md:w-1/2 space-y-4\">\n              <h1 className=\"text-4xl font-bold tracking-tight\">\n                Análise Inteligente de Dados\n              </h1>\n              <p className=\"text-xl text-muted-foreground\">\n                Transformando dados em soluções sustentáveis para pesquisadores, instituições e gestores públicos.\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button \n                variant=\"outline\" \n                size=\"lg\"\n                onClick={() => navigate(\"/help\")}\n              >\n                Saiba Mais\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"md:w-1/2 flex justify-center\">\n            <div className=\"relative\">\n              <div className=\"absolute -top-6 -left-6 w-24 h-24 bg-blue-400 rounded-full opacity-20\"></div>\n              <div className=\"absolute -bottom-6 -right-6 w-32 h-32 bg-green-400 rounded-full opacity-20\"></div>\n              <div className=\"bg-white p-4 rounded-xl shadow-xl relative z-10\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <BarChart2 className=\"h-6 w-6 text-green-600 mb-2\" />\n                    <h3 className=\"font-semibold text-gray-800\">Análise de Dados</h3>\n                  </div>\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <Search className=\"h-6 w-6 text-blue-600 mb-2\" />\n                    <h3 className=\"font-semibold text-gray-800\">Análise de Dados</h3>\n                  </div>\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <Leaf className=\"h-6 w-6 text-green-600 mb-2\" />\n                    <h3 className=\"font-semibold text-gray-800\">Sustentabilidade</h3>\n                  </div>\n                  <div className=\"bg-gray-50 p-4 rounded-lg flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <p className=\"text-2xl font-bold text-blue-600\">Análise</p>\n                      <p className=\"text-xs text-gray-600\">Dados</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroSection;\n","\nimport React from \"react\";\nimport { BarChart2, Clock, Users } from \"lucide-react\";\nimport { FeatureCard } from \"@/components/ui/card\";\n\ninterface FeatureItemProps {\n  icon: React.ReactNode;\n  title: string;\n  description: string;\n}\n\nconst FeatureItem: React.FC<FeatureItemProps> = ({ icon, title, description }) => {\n  return (\n    <FeatureCard>\n      <div className=\"rounded-full bg-blue-100 h-16 w-16 flex items-center justify-center mb-4 mx-auto\">\n        {icon}\n      </div>\n      <h3 className=\"text-xl font-semibold text-center mb-2\">{title}</h3>\n      <p className=\"text-gray-600 text-center\">\n        {description}\n      </p>\n    </FeatureCard>\n  );\n};\n\nconst features = [\n  {\n    icon: <BarChart2 className=\"h-8 w-8 text-blue-600\" />,\n    title: \"Dados Confiáveis\",\n    description: \"Informações atualizadas e verificadas para fundamentar suas análises e decisões.\"\n  },\n  {\n    icon: <Clock className=\"h-8 w-8 text-green-600\" />,\n    title: \"Atualizações em Tempo Real\",\n    description: \"Monitore dados e indicadores com atualizações em tempo real e alertas personalizados.\"\n  },\n  {\n    icon: <BarChart2 className=\"h-8 w-8 text-purple-600\" />,\n    title: \"Visualizações Avançadas\",\n    description: \"Gráficos e visualizações interativas que facilitam a compreensão e apresentação dos dados.\"\n  },\n  {\n    icon: <Users className=\"h-8 w-8 text-red-600\" />,\n    title: \"Suporte Especializado\",\n    description: \"Equipe de especialistas disponível para auxiliar na interpretação e uso das ferramentas.\"\n  }\n];\n\nconst FeaturesSection: React.FC = () => {\n  return (\n    <section className=\"bg-gray-50 py-16 px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4\">Por que escolher nossos serviços?</h2>\n          <p className=\"text-gray-600 max-w-2xl mx-auto\">\n            Nossa plataforma oferece soluções completas e personalizadas para diferentes perfis,\n            garantindo acesso a dados confiáveis e análises precisas.\n          </p>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {features.map((feature, index) => (\n            <FeatureItem \n              key={index}\n              icon={feature.icon}\n              title={feature.title}\n              description={feature.description}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturesSection;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { \n  BookOpen, \n  BarChart2, \n  FileText, \n  Users, \n  MessageSquare \n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ServiceCard, ServiceIconWrapper } from \"@/components/ui/card\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\ninterface ServiceItemProps {\n  id: ClientType;\n  title: string;\n  icon: React.ReactNode;\n  color: \"blue\" | \"indigo\" | \"green\" | \"purple\" | \"red\" | \"amber\";\n  description: string;\n  onServiceClick: (serviceId: ClientType) => void;\n}\n\nconst ServiceItem: React.FC<ServiceItemProps> = ({\n  id,\n  title,\n  icon,\n  color,\n  description,\n  onServiceClick\n}) => {\n  const getButtonColorClass = (color: string) => {\n    const colorMap: Record<string, string> = {\n      blue: \"bg-blue-600 hover:bg-blue-700\",\n      indigo: \"bg-indigo-600 hover:bg-indigo-700\",\n      green: \"bg-green-600 hover:bg-green-700\",\n      purple: \"bg-purple-600 hover:bg-purple-700\",\n      red: \"bg-red-600 hover:bg-red-700\",\n      amber: \"bg-amber-600 hover:bg-amber-700\"\n    };\n    return colorMap[color] || \"bg-blue-600 hover:bg-blue-700\";\n  };\n\n  return (\n    <ServiceCard color={color}>\n      <ServiceIconWrapper color={color}>\n        {icon}\n      </ServiceIconWrapper>\n      <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\n      <p className=\"text-gray-600 mb-4\">\n        {description}\n      </p>\n      <Button \n        className={`mt-2 ${getButtonColorClass(color)} flex items-center`} \n        onClick={() => onServiceClick(id)}\n      >\n        Saiba mais\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 ml-2\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n      </Button>\n    </ServiceCard>\n  );\n};\n\nexport const clientTypes = [\n  {\n    id: \"observatory\" as ClientType,\n    title: \"Observatório\",\n    icon: <BookOpen className=\"h-8 w-8 text-blue-600\" />,\n    color: \"blue\" as const,\n    description: \"Plataforma completa para observatórios de políticas públicas acompanharem indicadores, integrarem dados e gerarem relatórios automatizados com visualizações avançadas.\",\n  },\n  {\n    id: \"researcher\" as ClientType,\n    title: \"Pesquisador\",\n    icon: <BarChart2 className=\"h-8 w-8 text-indigo-600\" />,\n    color: \"indigo\" as const,\n    description: \"Acesso a datasets completos, APIs para integração com ferramentas estatísticas, histórico de séries temporais e capacidade de compartilhamento de dados com outros pesquisadores.\",\n  },\n  {\n    id: \"politician\" as ClientType,\n    title: \"Político\",\n    icon: <FileText className=\"h-8 w-8 text-green-600\" />,\n    color: \"green\" as const,\n    description: \"Alertas sobre novas legislações, análise de impacto de políticas públicas, resumos executivos de dados governamentais e comparativos de indicadores por região.\",\n  },\n  {\n    id: \"institution\" as ClientType,\n    title: \"Instituição\",\n    icon: <Users className=\"h-8 w-8 text-purple-600\" />,\n    color: \"purple\" as const,\n    description: \"Ferramentas para gestão de dados institucionais, monitoramento de programas, dashboards personalizados e relatórios de acompanhamento para instituições de diversos setores.\",\n  },\n  {\n    id: \"journalist\" as ClientType,\n    title: \"Jornalista\",\n    icon: <FileText className=\"h-8 w-8 text-red-600\" />,\n    color: \"red\" as const,\n    description: \"Acesso a indicadores atualizados, visualizações prontas para publicação, verificação de dados e comparativos históricos para embasar reportagens investigativas e especiais.\",\n  },\n  {\n    id: \"press\" as ClientType,\n    title: \"Assessoria de Imprensa\",\n    icon: <MessageSquare className=\"h-8 w-8 text-amber-600\" />,\n    color: \"amber\" as const,\n    description: \"Sistema completo para criação, aprovação e monitoramento de releases, acompanhamento de publicações, métricas de desempenho e gestão de contatos com veículos de comunicação.\",\n  }\n];\n\nconst ServicesSection: React.FC = () => {\n  const navigate = useNavigate();\n\n  const handleServiceClick = (serviceId: ClientType) => {\n    // Redirecionar para a página de detalhes do serviço\n    navigate(`/service/${serviceId}`);\n  };\n\n  return (\n    <section className=\"py-12 px-6 max-w-6xl mx-auto w-full\">\n      <h2 className=\"text-3xl font-bold text-center mb-12\">Nossos Serviços</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n        {clientTypes.map((client) => (\n          <ServiceItem \n            key={client.id}\n            id={client.id}\n            title={client.title}\n            icon={client.icon}\n            color={client.color}\n            description={client.description}\n            onServiceClick={handleServiceClick}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ServicesSection;\n","\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CheckCircle, Monitor, Shield, Smile } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface CTACardProps {\n  icon: React.ReactNode;\n  title: string;\n  description: string;\n  iconColor: string;\n}\n\nconst CTACard: React.FC<CTACardProps> = ({ icon, title, description, iconColor }) => {\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 transform hover:scale-105\">\n      <div className=\"flex items-center mb-3\">\n        {icon}\n        <h3 className=\"font-semibold\">{title}</h3>\n      </div>\n      <p className=\"text-gray-600 text-sm\">\n        {description}\n      </p>\n    </div>\n  );\n};\n\nconst ctaFeatures = [\n  {\n    icon: <CheckCircle className=\"h-6 w-6 text-blue-600 mr-2\" />,\n    title: \"Fácil integração\",\n    description: \"APIs e ferramentas para integração com seus sistemas existentes.\",\n    iconColor: \"text-blue-600\"\n  },\n  {\n    icon: <Monitor className=\"h-6 w-6 text-green-600 mr-2\" />,\n    title: \"Multiplataforma\",\n    description: \"Acesse seus dados de qualquer dispositivo, em qualquer lugar.\",\n    iconColor: \"text-green-600\"\n  },\n  {\n    icon: <Shield className=\"h-6 w-6 text-purple-600 mr-2\" />,\n    title: \"Segurança\",\n    description: \"Dados protegidos com os mais altos padrões de segurança.\",\n    iconColor: \"text-purple-600\"\n  },\n  {\n    icon: <Smile className=\"h-6 w-6 text-amber-600 mr-2\" />,\n    title: \"Experiência\",\n    description: \"Interface intuitiva e amigável para facilitar sua experiência.\",\n    iconColor: \"text-amber-600\"\n  }\n];\n\nconst CTASection: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <section className=\"py-16 px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-blue-50 rounded-2xl p-8 shadow-lg\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n            <div>\n              <h2 className=\"text-3xl font-bold mb-4\">Pronto para começar?</h2>\n              <p className=\"text-gray-600 mb-6\">\n                Solicite uma demonstração personalizada para conhecer como nossas soluções podem\n                atender às suas necessidades específicas.\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-blue-600 hover:bg-blue-700 flex items-center shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all\"\n                onClick={() => navigate('/service/observatory')}\n              >\n                Solicitar demonstração\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5 ml-2\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n              </Button>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              {ctaFeatures.map((feature, index) => (\n                <CTACard \n                  key={index}\n                  icon={feature.icon}\n                  title={feature.title}\n                  description={feature.description}\n                  iconColor={feature.iconColor}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTASection;\n","\nimport React from \"react\";\nimport HeroSection from \"@/components/dashboard/HeroSection\";\nimport FeaturesSection from \"@/components/dashboard/FeaturesSection\";\nimport ServicesSection from \"@/components/dashboard/ServicesSection\";\nimport CTASection from \"@/components/dashboard/CTASection\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\n\nconst Index: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header isAuthenticated={false} onLoginClick={() => {}} onLogoutClick={() => {}} />\n      <main>\n        <HeroSection />\n        <FeaturesSection />\n        <ServicesSection />\n        <CTASection />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Form, FormControl, FormField, FormItem, FormLabel } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Eye, EyeOff, LogIn, Loader2 } from \"lucide-react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { toast } from \"@/components/ui/use-toast\";\n\nconst Login: React.FC = () => {\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberPassword, setRememberPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (data: { email: string; password: string }) => {\n    try {\n      await auth.handleLogin(data);\n      toast({\n        title: \"Login realizado com sucesso!\",\n        description: \"Redirecionando para o painel administrativo...\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Erro ao fazer login\",\n        description: \"Email ou senha incorretos\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background p-6 flex flex-col\">\n      <div className=\"max-w-7xl mx-auto space-y-6 flex-1\">\n        <Header \n          isAuthenticated={false} \n          onLoginClick={() => {}} \n          onLogoutClick={() => {}} \n        />\n\n        <div className=\"flex items-center justify-center py-12\">\n          <Card className=\"w-full max-w-md\">\n            <CardHeader>\n              <CardTitle>Acesso Administrativo</CardTitle>\n              <CardDescription>\n                Entre com suas credenciais para acessar o painel administrativo.\n              </CardDescription>\n            </CardHeader>\n            \n            <CardContent>\n              <Form {...auth.form}>\n                <form onSubmit={auth.form.handleSubmit(handleSubmit)} className=\"space-y-4\">\n                  <FormField\n                    control={auth.form.control}\n                    name=\"email\"\n                    rules={{ required: \"Email é obrigatório\" }}\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email</FormLabel>\n                        <FormControl>\n                          <Input type=\"email\" placeholder=\"admin@koga.com\" {...field} />\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={auth.form.control}\n                    name=\"password\"\n                    rules={{ required: \"Senha é obrigatória\" }}\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Senha</FormLabel>\n                        <FormControl>\n                          <div className=\"relative\">\n                            <Input \n                              type={showPassword ? \"text\" : \"password\"} \n                              placeholder=\"••••••••\"\n                              {...field} \n                            />\n                            <div \n                              className=\"absolute right-0 top-0 h-full flex items-center pr-3\"\n                              onClick={togglePasswordVisibility}\n                            >\n                              {showPassword ? <EyeOff size={18} className=\"cursor-pointer\" /> : <Eye size={18} className=\"cursor-pointer\" />}\n                            </div>\n                          </div>\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id=\"remember\" \n                      checked={rememberPassword}\n                      onCheckedChange={(checked) => setRememberPassword(checked as boolean)}\n                    />\n                    <label\n                      htmlFor=\"remember\"\n                      className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                    >\n                      Lembrar meu email\n                    </label>\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full mt-4\" \n                    disabled={auth.isLoggingIn}\n                  >\n                    {auth.isLoggingIn ? (\n                      <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        Entrando...\n                      </>\n                    ) : (\n                      <>\n                        <LogIn className=\"mr-2 h-4 w-4\" />\n                        Entrar\n                      </>\n                    )}\n                  </Button>\n                </form>\n              </Form>\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-between\">\n              <Button variant=\"outline\" onClick={() => navigate(\"/\")} disabled={auth.isLoggingIn}>\n                Voltar para o Início\n              </Button>\n            </CardFooter>\n          </Card>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n","\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, EyeOff, LogIn, Loader2 } from \"lucide-react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ClientLoginFormValues } from \"./types\";\n\ninterface ClientLoginFormProps {\n  onSubmit: (data: ClientLoginFormValues) => void;\n  isLoggingIn: boolean;\n}\n\nconst ClientLoginForm: React.FC<ClientLoginFormProps> = ({ onSubmit, isLoggingIn }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const form = useForm<ClientLoginFormValues>({\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      clientType: \"\"\n    }\n  });\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          rules={{ required: \"Email é obrigatório\" }}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  type=\"email\" \n                  placeholder=\"seu.email@exemplo.com\" \n                  {...field} \n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"password\"\n          rules={{ required: \"Senha é obrigatória\" }}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Senha</FormLabel>\n              <FormControl>\n                <div className=\"relative\">\n                  <Input \n                    type={showPassword ? \"text\" : \"password\"} \n                    {...field} \n                  />\n                  <div \n                    className=\"absolute right-0 top-0 h-full flex items-center pr-3 cursor-pointer\"\n                    onClick={togglePasswordVisibility}\n                  >\n                    {showPassword ? \n                      <EyeOff size={18} className=\"text-muted-foreground\" /> : \n                      <Eye size={18} className=\"text-muted-foreground\" />\n                    }\n                  </div>\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"flex items-center space-x-2\">\n          <Checkbox \n            id=\"rememberMe\" \n            checked={rememberMe}\n            onCheckedChange={(checked) => setRememberMe(checked as boolean)}\n          />\n          <label\n            htmlFor=\"rememberMe\"\n            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n          >\n            Lembrar meus dados\n          </label>\n        </div>\n\n        <Button \n          type=\"submit\" \n          className=\"w-full\" \n          disabled={isLoggingIn}\n        >\n          {isLoggingIn ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Entrando...\n            </>\n          ) : (\n            <>\n              <LogIn className=\"mr-2 h-4 w-4\" />\n              Entrar\n            </>\n          )}\n        </Button>\n      </form>\n    </Form>\n  );\n};\n\nexport default ClientLoginForm;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport ClientLoginForm from \"./ClientLoginForm\";\nimport { ClientLoginFormValues } from \"./types\";\n\ninterface LoginCardProps {\n  onLogin: (data: ClientLoginFormValues) => Promise<void>;\n  isLoggingIn: boolean;\n}\n\nconst LoginCard: React.FC<LoginCardProps> = ({ onLogin, isLoggingIn }) => {\n  const navigate = useNavigate();\n\n  return (\n    <Card className=\"w-full max-w-md\">\n      <CardHeader>\n        <CardTitle>Acesso ao Portal do Cliente</CardTitle>\n        <CardDescription>\n          Entre com suas credenciais para acessar o portal do cliente e gerenciar suas interações de imprensa.\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent>\n        <ClientLoginForm onSubmit={onLogin} isLoggingIn={isLoggingIn} />\n      </CardContent>\n      \n      <CardFooter className=\"flex flex-col space-y-4\">\n        <div className=\"text-sm text-center w-full text-muted-foreground\">\n          <a href=\"#\" className=\"text-primary hover:underline\">\n            Esqueceu sua senha?\n          </a>\n        </div>\n        <Button \n          variant=\"outline\" \n          className=\"w-full\" \n          onClick={() => navigate(-1)}\n        >\n          Voltar\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default LoginCard;\n","import { ClientInfo, ClientLoginFormValues } from \"./types\";\nimport { ClientType } from \"@/types/clientTypes\";\n\n// Lista de clientes válidos - em uma aplicação real isso seria buscado de uma API\nexport const validClients: { email: string; password: string; type: string; }[] = [];\n\n/**\n * Type assertion helper for ClientType\n * This helps with TypeScript errors when passing string values to ClientType parameters\n */\nexport const asClientType = (type: string): ClientType => {\n  // This ensures type safety while allowing string values to be converted to ClientType\n  return type as ClientType;\n};\n\n/**\n * Validates client credentials against mock data\n * @param data The login form values\n * @returns The valid client or null if not found\n */\nexport const validateClient = (data: ClientLoginFormValues) => {\n  console.log(\"Validating client credentials for:\", data.email);\n  \n  const client = validClients.find(\n    c => c.email === data.email && c.password === data.password\n  );\n  \n  console.log(\"Client login validation:\", data.email, client ? \"found\" : \"not found\", client?.type);\n  return client;\n};\n\n/**\n * Creates a client info object from login data\n * @param email The client email\n * @param clientType The client type\n * @returns ClientInfo object\n */\nexport const createClientInfo = (email: string, clientType: string): ClientInfo => {\n  const clientInfo = {\n    email,\n    clientType,\n    name: email.split('@')[0],\n    isLoggedIn: true,\n    loginTime: new Date().toISOString()\n  };\n  \n  console.log(\"Created client info:\", clientInfo);\n  return clientInfo;\n};\n\n/**\n * Saves client info to localStorage\n * @param clientInfo The client info to save\n */\nexport const saveClientInfo = (clientInfo: ClientInfo) => {\n  localStorage.setItem('clientInfo', JSON.stringify(clientInfo));\n  console.log(\"Saved client info to localStorage:\", clientInfo);\n};\n\n/**\n * Gets client info from localStorage\n * @returns The client info or null if not found\n */\nexport const getClientInfo = (): ClientInfo | null => {\n  const clientInfoString = localStorage.getItem('clientInfo');\n  const clientInfo = clientInfoString ? JSON.parse(clientInfoString) : null;\n  console.log(\"Retrieved client info from localStorage:\", clientInfo);\n  return clientInfo;\n};\n\n/**\n * Checks if a client is logged in\n * @returns True if a client is logged in, false otherwise\n */\nexport const isClientLoggedIn = (): boolean => {\n  const clientInfo = getClientInfo();\n  return clientInfo !== null && clientInfo.isLoggedIn === true;\n};\n\n/**\n * Logs a client out\n */\nexport const logoutClient = () => {\n  localStorage.removeItem('clientInfo');\n  console.log(\"Client logged out, removed client info from localStorage\");\n};\n","\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { ClientLoginFormValues } from \"./types\";\nimport { validateClient, createClientInfo, saveClientInfo } from \"./ClientUtils\";\n\nexport const useClientLogin = () => {\n  const navigate = useNavigate();\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  const handleLogin = async (data: ClientLoginFormValues) => {\n    setIsLoggingIn(true);\n    console.log(\"Attempting client login with:\", data.email);\n    \n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      const client = validateClient(data);\n      \n      if (client) {\n        console.log(\"Client validated successfully:\", client);\n        \n        // Store client info in localStorage\n        const clientInfo = createClientInfo(data.email, client.type);\n        saveClientInfo(clientInfo);\n        \n        toast({\n          title: \"Login realizado com sucesso\",\n          description: `Bem-vindo ao portal do cliente.`\n        });\n        \n        // Navigate directly to the client dashboard with the correct client type\n        navigate(`/client/${client.type}`);\n        console.log(`Redirecting to client/${client.type}`);\n      } else {\n        console.error(\"Client validation failed for:\", data.email);\n        toast({\n          title: \"Erro de autenticação\",\n          description: \"Email ou senha incorretos.\",\n          variant: \"destructive\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast({\n        title: \"Erro no login\",\n        description: \"Ocorreu um erro durante o login. Tente novamente.\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  return {\n    isLoggingIn,\n    handleLogin\n  };\n};\n","\nimport React from \"react\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport LoginCard from \"@/components/client-login/LoginCard\";\nimport { useClientLogin } from \"@/components/client-login/useClientLogin\";\n\nconst ClientLogin: React.FC = () => {\n  const { isLoggingIn, handleLogin } = useClientLogin();\n\n  return (\n    <div className=\"min-h-screen bg-background p-6 flex flex-col\">\n      <div className=\"max-w-7xl mx-auto space-y-6 flex-1\">\n        <Header \n          isAuthenticated={false}\n          onLoginClick={() => {}}\n          onLogoutClick={() => {}}\n        />\n\n        <div className=\"flex items-center justify-center py-12\">\n          <LoginCard \n            onLogin={handleLogin} \n            isLoggingIn={isLoggingIn} \n          />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default ClientLogin;\n","\nimport React from \"react\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface ServiceHeroProps {\n  serviceId: ClientType;\n  title: string;\n  description: string;\n  colorClasses: {\n    bg: string;\n    light: string;\n    text: string;\n    border: string;\n  };\n  onBackClick: () => void;\n  onContractServiceClick: () => void;\n  onExampleClientClick: () => void;\n}\n\nconst ServiceHero: React.FC<ServiceHeroProps> = ({\n  title,\n  description,\n  colorClasses,\n  onBackClick,\n  onContractServiceClick,\n  onExampleClientClick,\n}) => {\n  return (\n    <header className={`py-12 px-6 ${colorClasses.light} relative overflow-hidden`}>\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        <button \n          onClick={onBackClick}\n          className=\"flex items-center mb-6 text-gray-600 hover:text-gray-900 transition-colors\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Voltar para página inicial\n        </button>\n        \n        <h1 className={`text-4xl md:text-5xl font-bold mb-4 ${colorClasses.text}`}>\n          {title}\n        </h1>\n        \n        <p className=\"text-xl max-w-3xl text-gray-700 mb-8\">\n          {description}\n        </p>\n        \n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <Button \n            onClick={onContractServiceClick}\n            size=\"lg\"\n            className={`${colorClasses.bg} hover:opacity-90 shadow-lg`}\n          >\n            Contratar agora\n          </Button>\n          \n          <Button \n            onClick={onExampleClientClick}\n            variant=\"outline\"\n            size=\"lg\"\n            className=\"border-gray-300\"\n          >\n            Ver exemplo da área do cliente\n          </Button>\n        </div>\n      </div>\n      \n      {/* Background abstract shape */}\n      <div className=\"absolute right-0 top-0 w-1/2 h-full opacity-10\">\n        <div className={`${colorClasses.bg} transform rotate-45 scale-150 absolute -right-24 -top-24 w-96 h-96 rounded-full`}></div>\n      </div>\n    </header>\n  );\n};\n\nexport default ServiceHero;\n","\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\ninterface ServiceDetailsProps {\n  serviceId: ClientType;\n  details: string;\n  caseStudy?: {\n    title: string;\n    description: string;\n  };\n  colorClasses: {\n    bg: string;\n    light: string;\n    text: string;\n    border: string;\n  };\n  onContractServiceClick: () => void;\n}\n\nconst ServiceDetails: React.FC<ServiceDetailsProps> = ({\n  details,\n  caseStudy,\n  colorClasses,\n  onContractServiceClick,\n}) => {\n  const navigate = useNavigate();\n\n  return (\n    <section className=\"py-16 px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          <div>\n            <h2 className=\"text-3xl font-bold mb-6\">Sobre este serviço</h2>\n            <p className=\"text-gray-700 mb-8 leading-relaxed\">\n              {details}\n            </p>\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <Button \n                onClick={onContractServiceClick}\n                size=\"lg\"\n                className={`${colorClasses.bg} hover:opacity-90`}\n              >\n                Contratar serviço\n              </Button>\n              <Button \n                onClick={() => navigate('/help')}\n                variant=\"outline\" \n                size=\"lg\"\n                className=\"border-gray-300\"\n              >\n                Saiba mais\n              </Button>\n            </div>\n          </div>\n          \n          <div className={`${colorClasses.light} p-8 rounded-xl border ${colorClasses.border}`}>\n            {caseStudy && (\n              <div>\n                <h3 className=\"text-xl font-bold mb-4\">Caso de Sucesso</h3>\n                <h4 className={`${colorClasses.text} font-semibold mb-2`}>\n                  {caseStudy.title}\n                </h4>\n                <p className=\"text-gray-700\">\n                  {caseStudy.description}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ServiceDetails;\n","\nimport React from \"react\";\nimport { Check } from \"lucide-react\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\ninterface ServiceFeaturesProps {\n  serviceId: ClientType;\n  features: string[];\n  colorClasses: {\n    bg: string;\n    light: string;\n    text: string;\n    border: string;\n  };\n}\n\nconst ServiceFeatures: React.FC<ServiceFeaturesProps> = ({\n  features,\n  colorClasses,\n}) => {\n  return (\n    <section className=\"py-16 px-6 bg-gray-50\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-12 text-center\">Recursos principais</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <div \n              key={index} \n              className=\"bg-white p-6 rounded-xl shadow-md hover:shadow-lg transition-shadow\"\n            >\n              <div className={`rounded-full w-12 h-12 ${colorClasses.light} flex items-center justify-center mb-4`}>\n                <Check className={`h-6 w-6 ${colorClasses.text}`} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">{feature}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ServiceFeatures;\n","\nimport React from \"react\";\nimport { Check, BarChart2, Users, Zap } from \"lucide-react\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\ninterface ServiceBenefitsProps {\n  serviceId: ClientType;\n  benefits: string[];\n  colorClasses: {\n    bg: string;\n    light: string;\n    text: string;\n    border: string;\n  };\n}\n\nconst ServiceBenefits: React.FC<ServiceBenefitsProps> = ({\n  serviceId,\n  benefits,\n  colorClasses,\n}) => {\n  return (\n    <section className=\"py-16 px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-12 text-center\">Benefícios</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12 items-center\">\n          <div className={`${colorClasses.light} p-8 rounded-xl border ${colorClasses.border} flex items-center justify-center`}>\n            <div className={`rounded-full w-32 h-32 ${colorClasses.bg} flex items-center justify-center`}>\n              {serviceId === \"observatory\" && <BarChart2 className=\"h-16 w-16 text-white\" />}\n              {serviceId === \"researcher\" && <BarChart2 className=\"h-16 w-16 text-white\" />}\n              {serviceId === \"politician\" && <BarChart2 className=\"h-16 w-16 text-white\" />}\n              {serviceId === \"institution\" && <Users className=\"h-16 w-16 text-white\" />}\n              {serviceId === \"journalist\" && <BarChart2 className=\"h-16 w-16 text-white\" />}\n              {serviceId === \"press\" && <Zap className=\"h-16 w-16 text-white\" />}\n            </div>\n          </div>\n          \n          <div>\n            <ul className=\"space-y-4\">\n              {benefits.map((benefit, index) => (\n                <li key={index} className=\"flex items-start\">\n                  <div className={`rounded-full p-1 ${colorClasses.light} mr-3 mt-1`}>\n                    <Check className={`h-4 w-4 ${colorClasses.text}`} />\n                  </div>\n                  <span className=\"text-gray-700\">{benefit}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ServiceBenefits;\n","\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ClientType } from \"@/components/client/ClientTypes\";\n\ninterface ServiceCTAProps {\n  serviceId: ClientType;\n  colorClasses: {\n    bg: string;\n    light: string;\n    text: string;\n    border: string;\n  };\n  onContractServiceClick: () => void;\n}\n\nconst ServiceCTA: React.FC<ServiceCTAProps> = ({\n  colorClasses,\n  onContractServiceClick,\n}) => {\n  return (\n    <section className=\"py-16 px-6 bg-gray-900 text-white\">\n      <div className=\"max-w-6xl mx-auto text-center\">\n        <h2 className=\"text-3xl font-bold mb-4\">Pronto para começar?</h2>\n        <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\n          Contrate hoje mesmo e descubra como podemos ajudar sua organização com soluções de dados eficientes.\n        </p>\n        <Button \n          onClick={onContractServiceClick}\n          size=\"lg\"\n          className={`${colorClasses.bg} hover:opacity-90 shadow-lg px-8`}\n        >\n          Contratar agora\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default ServiceCTA;\n","import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { ClientType, clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport ServiceHero from \"@/components/service/ServiceHero\";\nimport ServiceDetails from \"@/components/service/ServiceDetails\";\nimport ServiceFeatures from \"@/components/service/ServiceFeatures\";\nimport ServiceBenefits from \"@/components/service/ServiceBenefits\";\nimport ServiceCTA from \"@/components/service/ServiceCTA\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\n\nconst ServiceLanding: React.FC = () => {\n  const { serviceId } = useParams<{ serviceId: string }>();\n  const navigate = useNavigate();\n  const auth = useAuth();\n\n  // Ensure serviceId is a valid ClientType\n  const validServiceId = (serviceId as ClientType) || \"observatory\";\n  \n  // Get service details based on the URL parameter\n  const serviceDetails = clientTypeDetails[validServiceId];\n\n  if (!serviceDetails) {\n    return <div>Serviço não encontrado</div>;\n  }\n\n  const handleBackClick = () => {\n    navigate(\"/\");\n  };\n\n  const handleContractServiceClick = () => {\n    // Navigate to client page that shows all services\n    navigate(`/client`);\n  };\n\n  const handleExampleClientClick = () => {\n    // Navigate to the example client page\n    navigate(\"/example-client\");\n  };\n\n  // Get color classes based on service type\n  const colorClasses = getColorClasses(validServiceId);\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header \n        isAuthenticated={auth.isAuthenticated}\n        onLoginClick={() => navigate('/login')}\n        onLogoutClick={auth.handleLogout}\n      />\n\n      <ServiceHero \n        serviceId={validServiceId}\n        title={serviceDetails.title}\n        description={serviceDetails.description}\n        colorClasses={colorClasses}\n        onBackClick={handleBackClick}\n        onContractServiceClick={handleContractServiceClick}\n        onExampleClientClick={handleExampleClientClick}\n      />\n\n      <main className=\"flex-grow\">\n        <ServiceDetails \n          serviceId={validServiceId}\n          details={serviceDetails.details}\n          caseStudy={serviceDetails.caseStudy}\n          colorClasses={colorClasses}\n          onContractServiceClick={handleContractServiceClick}\n        />\n\n        <ServiceFeatures \n          serviceId={validServiceId}\n          features={serviceDetails.features}\n          colorClasses={colorClasses}\n        />\n\n        <ServiceBenefits \n          serviceId={validServiceId}\n          benefits={serviceDetails.benefits}\n          colorClasses={colorClasses}\n        />\n\n        <ServiceCTA \n          serviceId={validServiceId}\n          colorClasses={colorClasses}\n          onContractServiceClick={handleContractServiceClick}\n        />\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default ServiceLanding;\n","\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClientType, clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\n\ninterface ClientHeaderProps {\n  clientType: ClientType;\n  getClientIcon: (type: ClientType) => React.ReactNode;\n}\n\nconst ClientHeader: React.FC<ClientHeaderProps> = ({ clientType, getClientIcon }) => {\n  const navigate = useNavigate();\n  const colorClasses = getColorClasses(clientType);\n\n  return (\n    <div className=\"flex items-center justify-between\">\n      <div className=\"flex items-center space-x-4\">\n        <div className={`p-3 rounded-lg ${colorClasses.light}`}>\n          {getClientIcon(clientType)}\n        </div>\n        <div>\n          <h1 className=\"text-2xl font-bold\">Área do Cliente: {clientTypeDetails[clientType].title}</h1>\n          <p className=\"text-muted-foreground\">Modelo de exemplo para demonstração</p>\n        </div>\n      </div>\n      <Button \n        onClick={() => navigate('/')} \n        variant=\"outline\"\n      >\n        Voltar ao site\n      </Button>\n    </div>\n  );\n};\n\nexport default ClientHeader;\n","\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Check } from \"lucide-react\";\nimport { ClientType, clientTypeDetails } from \"@/components/client/ClientTypes\";\nimport { getColorClasses } from \"@/components/service/utils/colorUtils\";\n\ninterface ClientInfoProps {\n  clientType: ClientType;\n}\n\nconst ClientInfo: React.FC<ClientInfoProps> = ({ clientType }) => {\n  const colorClasses = getColorClasses(clientType);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Informações do Cliente</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ul className=\"space-y-2\">\n            <li className=\"flex justify-between\">\n              <span className=\"text-muted-foreground\">Plano:</span>\n              <span className=\"font-medium\">{clientTypeDetails[clientType].title}</span>\n            </li>\n            <li className=\"flex justify-between\">\n              <span className=\"text-muted-foreground\">Status:</span>\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                Ativo\n              </span>\n            </li>\n            <li className=\"flex justify-between\">\n              <span className=\"text-muted-foreground\">Próxima cobrança:</span>\n              <span className=\"font-medium\">15/06/2024</span>\n            </li>\n          </ul>\n        </CardContent>\n      </Card>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Recursos Disponíveis</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ul className=\"space-y-2\">\n            {clientTypeDetails[clientType].features.slice(0, 4).map((feature, index) => (\n              <li key={index} className=\"flex items-start gap-2\">\n                <Check className={`h-4 w-4 ${colorClasses.text} mt-1`} />\n                <span className=\"text-sm\">{feature}</span>\n              </li>\n            ))}\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ClientInfo;\n","import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport RichTextEditor from '@/components/editor/RichTextEditor';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { toast } from '@/components/ui/use-toast';\n\ninterface ContentCreatorProps {\n  onSubmit: (content: ContentData) => void;\n}\n\nexport interface ContentData {\n  type: 'release' | 'reportagem';\n  title: string;\n  subtitle?: string;\n  category: string;\n  content: string;\n  status: 'draft' | 'pending' | 'approved' | 'rejected';\n  tags: string[];\n}\n\nconst ContentCreator: React.FC<ContentCreatorProps> = ({ onSubmit }) => {\n  const [contentType, setContentType] = useState<'release' | 'reportagem'>('release');\n  const [title, setTitle] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [content, setContent] = useState('');\n  const [tags, setTags] = useState('');\n\n  const categories = [\n    'Política',\n    'Economia',\n    'Educação',\n    'Saúde',\n    'Tecnologia',\n    'Meio Ambiente',\n    'Cultura',\n    'Esportes'\n  ];\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!title || !category || !content) {\n      toast({\n        title: \"Campos obrigatórios\",\n        description: \"Por favor, preencha todos os campos obrigatórios.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const contentData: ContentData = {\n      type: contentType,\n      title,\n      subtitle,\n      category,\n      content,\n      status: 'pending',\n      tags: tags.split(',').map(tag => tag.trim()).filter(tag => tag !== '')\n    };\n\n    onSubmit(contentData);\n\n    // Limpar formulário\n    setTitle('');\n    setSubtitle('');\n    setCategory('');\n    setContent('');\n    setTags('');\n\n    toast({\n      title: \"Conteúdo enviado\",\n      description: \"Seu conteúdo foi enviado para moderação.\",\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"space-y-4\">\n        <RadioGroup\n          defaultValue={contentType}\n          onValueChange={(value) => setContentType(value as 'release' | 'reportagem')}\n          className=\"flex space-x-4\"\n        >\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"release\" id=\"release\" />\n            <Label htmlFor=\"release\">Release</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"reportagem\" id=\"reportagem\" />\n            <Label htmlFor=\"reportagem\">Reportagem</Label>\n          </div>\n        </RadioGroup>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"title\">Título *</Label>\n          <Input\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Digite o título\"\n            required\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"subtitle\">Subtítulo</Label>\n          <Input\n            id=\"subtitle\"\n            value={subtitle}\n            onChange={(e) => setSubtitle(e.target.value)}\n            placeholder=\"Digite o subtítulo (opcional)\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"category\">Categoria *</Label>\n          <Select value={category} onValueChange={setCategory}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Selecione uma categoria\" />\n            </SelectTrigger>\n            <SelectContent>\n              {categories.map((cat) => (\n                <SelectItem key={cat} value={cat.toLowerCase()}>\n                  {cat}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label>Conteúdo *</Label>\n          <RichTextEditor\n            initialContent={content}\n            onContentChange={setContent}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"tags\">Tags</Label>\n          <Input\n            id=\"tags\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n            placeholder=\"Digite as tags separadas por vírgula\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end space-x-4\">\n        <Button type=\"button\" variant=\"outline\">\n          Salvar como rascunho\n        </Button>\n        <Button type=\"submit\">\n          Enviar para aprovação\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContentCreator;\n","import React, { useState } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { FileText, Send, Clock, CheckCircle, XCircle } from 'lucide-react';\nimport ContentCreator, { ContentData } from './ContentCreator';\nimport { pressMonitoringService } from '@/services/pressMonitoring';\n\ninterface Content {\n  id: string;\n  type: 'release' | 'reportagem';\n  title: string;\n  subtitle: string;\n  category: string;\n  status: string;\n  date: string;\n  tags: string[];\n  monitoringStatus?: {\n    lastCheck: string;\n    publications: number;\n  };\n}\n\ninterface PressContentProps {\n  clientType: string;\n}\n\nconst PressContent: React.FC<PressContentProps> = ({ clientType }) => {\n  const [contents, setContents] = useState<Content[]>([\n    {\n      id: '1',\n      type: 'release',\n      title: 'Nova Política de Sustentabilidade',\n      subtitle: 'Empresa anuncia metas ambiciosas para 2026',\n      category: 'sustentabilidade',\n      status: 'approved',\n      date: '2025-03-01',\n      tags: ['sustentabilidade', 'meio ambiente', 'ESG'],\n      monitoringStatus: {\n        lastCheck: '2025-03-05T12:00:00',\n        publications: 3\n      }\n    },\n    {\n      id: '2',\n      type: 'reportagem',\n      title: 'Impacto da IA no Mercado de Trabalho',\n      subtitle: 'Como a inteligência artificial está mudando as profissões',\n      category: 'tecnologia',\n      status: 'pending',\n      date: '2025-03-04',\n      tags: ['tecnologia', 'ia', 'mercado de trabalho']\n    },\n    {\n      id: '3',\n      type: 'release',\n      title: 'Resultados do Primeiro Trimestre',\n      subtitle: 'Empresa supera expectativas do mercado',\n      category: 'financeiro',\n      status: 'draft',\n      date: '2025-03-05',\n      tags: ['resultados', 'financeiro', 'mercado']\n    }\n  ]);\n\n  const handleContentSubmit = (content: ContentData) => {\n    const newContent: Content = {\n      id: Date.now().toString(),\n      type: content.type,\n      title: content.title,\n      subtitle: content.subtitle,\n      category: content.category,\n      status: 'pending',\n      date: new Date().toISOString().split('T')[0],\n      tags: content.tags\n    };\n\n    setContents(prev => [newContent, ...prev]);\n  };\n\n  const handleSendContent = (id: string) => {\n    setContents(prev => \n      prev.map(content => \n        content.id === id \n          ? { ...content, status: 'pending' } \n          : content\n      )\n    );\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      case 'rejected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <FileText className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    const statusMap = {\n      approved: 'Aprovado',\n      pending: 'Em análise',\n      rejected: 'Rejeitado',\n      draft: 'Rascunho',\n      distributed: 'Distribuído',\n      published: 'Publicado'\n    };\n    return statusMap[status] || status;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"new\" className=\"w-full\">\n        <TabsList>\n          <TabsTrigger value=\"new\">Criar Conteúdo</TabsTrigger>\n          <TabsTrigger value=\"my\">Meus Conteúdos</TabsTrigger>\n          <TabsTrigger value=\"published\">Publicados</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"new\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Criar Novo Conteúdo</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ContentCreator onSubmit={handleContentSubmit} />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"my\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {contents.map((content) => (\n              <Card key={content.id}>\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-1\">\n                      <CardTitle className=\"text-lg\">{content.title}</CardTitle>\n                      <p className=\"text-sm text-muted-foreground\">{content.subtitle}</p>\n                    </div>\n                    <Badge \n                      variant={content.status === 'approved' ? 'default' : 'secondary'}\n                      className=\"flex items-center gap-1\"\n                    >\n                      {getStatusIcon(content.status)}\n                      <span>{getStatusText(content.status)}</span>\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                      <Badge variant=\"outline\">{content.type}</Badge>\n                      <span>•</span>\n                      <span>{content.category}</span>\n                      <span>•</span>\n                      <span>{new Date(content.date).toLocaleDateString()}</span>\n                    </div>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {content.tags.map(tag => (\n                        <Badge key={tag} variant=\"outline\">\n                          {tag}\n                        </Badge>\n                      ))}\n                    </div>\n                    {content.monitoringStatus && (\n                      <div className=\"text-sm text-muted-foreground\">\n                        <p>Última verificação: {new Date(content.monitoringStatus.lastCheck).toLocaleString()}</p>\n                        <p>Publicações encontradas: {content.monitoringStatus.publications}</p>\n                      </div>\n                    )}\n                    <div className=\"flex justify-end gap-2\">\n                      <Button variant=\"outline\" size=\"sm\">\n                        Editar\n                      </Button>\n                      {content.status === 'draft' && (\n                        <Button size=\"sm\" onClick={() => handleSendContent(content.id)}>\n                          <Send className=\"h-4 w-4 mr-2\" />\n                          Enviar\n                        </Button>\n                      )}\n                      {(content.status === 'distributed' || content.status === 'published') && (\n                        <Button variant=\"outline\" size=\"sm\">\n                          Ver publicações\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"published\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {contents\n              .filter(content => content.status === 'published' || content.status === 'distributed')\n              .map((content) => (\n                <Card key={content.id}>\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"space-y-1\">\n                      <CardTitle className=\"text-lg\">{content.title}</CardTitle>\n                      <p className=\"text-sm text-muted-foreground\">{content.subtitle}</p>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                        <Badge variant=\"outline\">{content.type}</Badge>\n                        <span>•</span>\n                        <span>{content.category}</span>\n                        <span>•</span>\n                        <span>{new Date(content.date).toLocaleDateString()}</span>\n                      </div>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {content.tags.map(tag => (\n                          <Badge key={tag} variant=\"outline\">\n                            {tag}\n                          </Badge>\n                        ))}\n                      </div>\n                      {content.monitoringStatus && (\n                        <div className=\"text-sm text-muted-foreground\">\n                          <p>Última verificação: {new Date(content.monitoringStatus.lastCheck).toLocaleString()}</p>\n                          <p>Publicações encontradas: {content.monitoringStatus.publications}</p>\n                        </div>\n                      )}\n                      <div className=\"flex justify-end\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          Ver publicações\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default PressContent;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { FileText, Database, Plus, Play, Pause, RefreshCw, Trash2, Filter as FilterIcon } from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { toast } from \"@/components/ui/use-toast\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\n\ninterface Monitoring {\n  id: string;\n  name: string;\n  url: string;\n  apiUrl?: string;\n  keywords: string[];\n  category: string;\n  frequency: 'hourly' | 'daily' | 'weekly' | 'monthly';\n  responsible: string;\n  status: 'active' | 'paused';\n  lastUpdate: string;\n  createdAt: string;\n}\n\n// Dados de exemplo para monitoramentos\nconst exampleMonitorings: Monitoring[] = [\n  {\n    id: '1',\n    name: 'Portal da Transparência - Licitações',\n    url: 'https://www.portaltransparencia.gov.br/licitacoes',\n    keywords: ['licitação', 'pregão', 'contrato'],\n    category: 'Licitações',\n    frequency: 'daily',\n    responsible: 'João Silva',\n    status: 'active',\n    lastUpdate: new Date().toISOString(),\n    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '2',\n    name: 'Diário Oficial - Nomeações',\n    url: 'https://www.in.gov.br',\n    keywords: ['nomeação', 'exoneração', 'cargo'],\n    category: 'Diário Oficial',\n    frequency: 'daily',\n    responsible: 'Maria Santos',\n    status: 'active',\n    lastUpdate: new Date().toISOString(),\n    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '3',\n    name: 'IBGE - Indicadores Econômicos',\n    url: 'https://www.ibge.gov.br/indicadores',\n    keywords: ['inflação', 'PIB', 'desemprego'],\n    category: 'Indicadores',\n    frequency: 'monthly',\n    responsible: 'Pedro Costa',\n    status: 'paused',\n    lastUpdate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()\n  }\n];\n\nconst MonitoringContent: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'add' | 'manage'>('add');\n  const [monitorings, setMonitorings] = useState<Monitoring[]>(exampleMonitorings);\n  const [filter, setFilter] = useState('');\n  const [categories, setCategories] = useState<string[]>(['Licitações', 'Diário Oficial', 'Indicadores', 'Legislação']);\n  const [newCategory, setNewCategory] = useState('');\n  const [newMonitoring, setNewMonitoring] = useState<Partial<Monitoring>>({\n    frequency: 'daily',\n    status: 'active'\n  });\n\n  const handleAddCategory = () => {\n    if (newCategory.trim() && !categories.includes(newCategory.trim())) {\n      setCategories(prev => [...prev, newCategory.trim()]);\n      setNewCategory('');\n      toast({\n        title: \"Categoria Adicionada\",\n        description: `A categoria \"${newCategory}\" foi adicionada com sucesso.`\n      });\n    }\n  };\n\n  const handleAddMonitoring = () => {\n    if (!newMonitoring.name || !newMonitoring.url || !newMonitoring.responsible || !newMonitoring.category) {\n      toast({\n        title: \"Erro\",\n        description: \"Por favor, preencha todos os campos obrigatórios.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const monitoring: Monitoring = {\n      id: Date.now().toString(),\n      name: newMonitoring.name!,\n      url: newMonitoring.url!,\n      apiUrl: newMonitoring.apiUrl,\n      keywords: newMonitoring.keywords?.split(',').map(k => k.trim()) || [],\n      category: newMonitoring.category!,\n      frequency: newMonitoring.frequency!,\n      responsible: newMonitoring.responsible!,\n      status: 'active',\n      lastUpdate: new Date().toISOString(),\n      createdAt: new Date().toISOString()\n    };\n\n    setMonitorings(prev => [...prev, monitoring]);\n    setNewMonitoring({\n      frequency: 'daily',\n      status: 'active'\n    });\n\n    toast({\n      title: \"Sucesso\",\n      description: \"Monitoramento adicionado com sucesso!\"\n    });\n  };\n\n  const handleDeleteMonitoring = (id: string) => {\n    setMonitorings(prev => prev.filter(m => m.id !== id));\n    toast({\n      title: \"Monitoramento Removido\",\n      description: \"O monitoramento foi removido com sucesso.\"\n    });\n  };\n\n  const filteredMonitorings = monitorings.filter(m => \n    filter ? m.responsible.toLowerCase().includes(filter.toLowerCase()) : true\n  );\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">Sistema de Monitoramento</h2>\n        <p className=\"text-muted-foreground\">\n          Configure e gerencie seus monitoramentos\n        </p>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={(value: any) => setActiveTab(value)} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"add\" className=\"flex items-center gap-2\">\n            <FileText className=\"h-4 w-4\" />\n            Adicionar Monitoramento\n          </TabsTrigger>\n          <TabsTrigger value=\"manage\" className=\"flex items-center gap-2\">\n            <Database className=\"h-4 w-4\" />\n            Gerenciar Monitoramentos\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"add\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Novo Monitoramento</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">Nome do Monitoramento *</Label>\n                  <Input\n                    id=\"name\"\n                    placeholder=\"Ex: Portal da Transparência - Licitações\"\n                    value={newMonitoring.name || ''}\n                    onChange={e => setNewMonitoring(prev => ({ ...prev, name: e.target.value }))}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"url\">URL da Fonte *</Label>\n                  <Input\n                    id=\"url\"\n                    placeholder=\"https://...\"\n                    value={newMonitoring.url || ''}\n                    onChange={e => setNewMonitoring(prev => ({ ...prev, url: e.target.value }))}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"apiUrl\">URL da API (opcional)</Label>\n                  <Input\n                    id=\"apiUrl\"\n                    placeholder=\"https://api...\"\n                    value={newMonitoring.apiUrl || ''}\n                    onChange={e => setNewMonitoring(prev => ({ ...prev, apiUrl: e.target.value }))}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"keywords\">Palavras-chave (separadas por vírgula)</Label>\n                  <Textarea\n                    id=\"keywords\"\n                    placeholder=\"licitação, contrato, edital...\"\n                    value={newMonitoring.keywords || ''}\n                    onChange={e => setNewMonitoring(prev => ({ ...prev, keywords: e.target.value }))}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"grid gap-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"category\">Categoria *</Label>\n                      <Dialog>\n                        <DialogTrigger asChild>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Plus className=\"h-4 w-4 mr-2\" />\n                            Nova Categoria\n                          </Button>\n                        </DialogTrigger>\n                        <DialogContent>\n                          <DialogHeader>\n                            <DialogTitle>Adicionar Nova Categoria</DialogTitle>\n                          </DialogHeader>\n                          <div className=\"grid gap-4 py-4\">\n                            <div className=\"grid gap-2\">\n                              <Label htmlFor=\"newCategory\">Nome da Categoria</Label>\n                              <div className=\"flex gap-2\">\n                                <Input\n                                  id=\"newCategory\"\n                                  value={newCategory}\n                                  onChange={e => setNewCategory(e.target.value)}\n                                  placeholder=\"Ex: Contratos\"\n                                />\n                                <Button onClick={handleAddCategory}>\n                                  Adicionar\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        </DialogContent>\n                      </Dialog>\n                    </div>\n                    <Select\n                      value={newMonitoring.category}\n                      onValueChange={value => setNewMonitoring(prev => ({ ...prev, category: value }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecione uma categoria\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {categories.map(category => (\n                          <SelectItem key={category} value={category}>\n                            {category}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"frequency\">Frequência *</Label>\n                    <Select\n                      value={newMonitoring.frequency}\n                      onValueChange={value => setNewMonitoring(prev => ({ ...prev, frequency: value as any }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecione a frequência\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"hourly\">A cada hora</SelectItem>\n                        <SelectItem value=\"daily\">Diário</SelectItem>\n                        <SelectItem value=\"weekly\">Semanal</SelectItem>\n                        <SelectItem value=\"monthly\">Mensal</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"responsible\">Responsável *</Label>\n                  <Input\n                    id=\"responsible\"\n                    placeholder=\"Nome do responsável\"\n                    value={newMonitoring.responsible || ''}\n                    onChange={e => setNewMonitoring(prev => ({ ...prev, responsible: e.target.value }))}\n                  />\n                </div>\n\n                <Button className=\"w-full\" onClick={handleAddMonitoring}>\n                  Adicionar Monitoramento\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"manage\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle>Monitoramentos Ativos</CardTitle>\n                <div className=\"flex items-center gap-2\">\n                  <FilterIcon className=\"h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Filtrar por responsável...\"\n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    className=\"w-[200px]\"\n                  />\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-[500px] pr-4\">\n                <div className=\"space-y-4\">\n                  {filteredMonitorings.map(monitoring => (\n                    <div\n                      key={monitoring.id}\n                      className=\"flex items-start justify-between p-4 border rounded-lg hover:bg-accent transition-colors\"\n                    >\n                      <div>\n                        <div className=\"flex items-center gap-2\">\n                          <h4 className=\"font-medium\">{monitoring.name}</h4>\n                          <Badge variant={monitoring.status === 'active' ? 'default' : 'secondary'}>\n                            {monitoring.status === 'active' ? 'Ativo' : 'Pausado'}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mt-1\">\n                          {monitoring.url}\n                        </p>\n                        <div className=\"flex flex-wrap gap-2 mt-2\">\n                          {monitoring.keywords.map(keyword => (\n                            <Badge key={keyword} variant=\"outline\">\n                              {keyword}\n                            </Badge>\n                          ))}\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 text-sm text-muted-foreground\">\n                          <div>\n                            <strong>Categoria:</strong> {monitoring.category}\n                          </div>\n                          <div>\n                            <strong>Frequência:</strong> {monitoring.frequency}\n                          </div>\n                          <div>\n                            <strong>Responsável:</strong> {monitoring.responsible}\n                          </div>\n                          <div>\n                            <strong>Última atualização:</strong> {new Date(monitoring.lastUpdate).toLocaleString()}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setMonitorings(prev =>\n                              prev.map(m =>\n                                m.id === monitoring.id\n                                  ? { ...m, status: m.status === 'active' ? 'paused' : 'active' }\n                                  : m\n                              )\n                            );\n                          }}\n                        >\n                          {monitoring.status === 'active' ? (\n                            <><Pause className=\"h-4 w-4 mr-2\" /> Pausar</>\n                          ) : (\n                            <><Play className=\"h-4 w-4 mr-2\" /> Ativar</>\n                          )}\n                        </Button>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleDeleteMonitoring(monitoring.id)}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default MonitoringContent;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Button } from \"@/components/ui/button\";\nimport { Download, TrendingUp, Filter, AlertCircle, ExternalLink } from \"lucide-react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line, Legend } from 'recharts';\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface MonitoringStats {\n  totalMonitorings: number;\n  activeMonitorings: number;\n  byCategory: { name: string; value: number }[];\n  byFrequency: { name: string; value: number }[];\n  byResponsible: { name: string; value: number }[];\n  recentUpdates: {\n    id: string;\n    name: string;\n    type: string;\n    date: string;\n    changes: number;\n  }[];\n  dailyActivity: {\n    date: string;\n    changes: number;\n    newItems: number;\n  }[];\n  keywordStats: {\n    keyword: string;\n    mentions: number;\n    trend: number;\n  }[];\n}\n\nconst generateDailyActivity = () => {\n  const data = [];\n  for (let i = 30; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    data.push({\n      date: date.toISOString().split('T')[0],\n      changes: Math.floor(Math.random() * 50) + 10,\n      newItems: Math.floor(Math.random() * 20)\n    });\n  }\n  return data;\n};\n\nconst AnalysisContent: React.FC = () => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [timeRange, setTimeRange] = useState('30d');\n\n  // Dados de exemplo expandidos\n  const stats: MonitoringStats = {\n    totalMonitorings: 15,\n    activeMonitorings: 12,\n    byCategory: [\n      { name: 'Licitações', value: 6 },\n      { name: 'Diário Oficial', value: 5 },\n      { name: 'Indicadores', value: 4 },\n      { name: 'Legislação', value: 3 },\n      { name: 'Contratos', value: 2 }\n    ],\n    byFrequency: [\n      { name: 'Horária', value: 2 },\n      { name: 'Diária', value: 8 },\n      { name: 'Semanal', value: 3 },\n      { name: 'Mensal', value: 2 }\n    ],\n    byResponsible: [\n      { name: 'João Silva', value: 4 },\n      { name: 'Maria Santos', value: 3 },\n      { name: 'Pedro Costa', value: 5 },\n      { name: 'Ana Oliveira', value: 3 }\n    ],\n    recentUpdates: [\n      {\n        id: '1',\n        name: 'Portal da Transparência',\n        type: 'Licitações',\n        date: '2025-03-05T14:30:00',\n        changes: 15\n      },\n      {\n        id: '2',\n        name: 'IBGE - Indicadores',\n        type: 'Indicadores',\n        date: '2025-03-05T13:45:00',\n        changes: 8\n      },\n      {\n        id: '3',\n        name: 'Diário Oficial',\n        type: 'Legislação',\n        date: '2025-03-05T12:30:00',\n        changes: 12\n      }\n    ],\n    dailyActivity: generateDailyActivity(),\n    keywordStats: [\n      { keyword: 'licitação', mentions: 145, trend: 12 },\n      { keyword: 'contrato', mentions: 98, trend: -5 },\n      { keyword: 'edital', mentions: 76, trend: 8 },\n      { keyword: 'pregão', mentions: 65, trend: 15 },\n      { keyword: 'dispensa', mentions: 43, trend: -2 }\n    ]\n  };\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Análise de Monitoramentos</h2>\n          <p className=\"text-muted-foreground\">\n            Estatísticas e insights sobre os monitoramentos ativos\n          </p>\n        </div>\n        <Select value={timeRange} onValueChange={setTimeRange}>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Período\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"7d\">Últimos 7 dias</SelectItem>\n            <SelectItem value=\"30d\">Últimos 30 dias</SelectItem>\n            <SelectItem value=\"90d\">Últimos 90 dias</SelectItem>\n            <SelectItem value=\"1y\">Último ano</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"grid gap-6 mb-6 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total de Monitoramentos</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.totalMonitorings}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stats.activeMonitorings} ativos\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Alterações Hoje</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.dailyActivity[stats.dailyActivity.length - 1].changes}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{stats.dailyActivity[stats.dailyActivity.length - 1].newItems} novos itens\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Palavras-chave Monitoradas</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.keywordStats.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stats.keywordStats.reduce((acc, curr) => acc + curr.mentions, 0)} menções totais\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Responsáveis Ativos</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.byResponsible.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Gerenciando {stats.totalMonitorings} monitoramentos\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"overview\" className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-4 w-4\" />\n            Visão Geral\n          </TabsTrigger>\n          <TabsTrigger value=\"activity\" className=\"flex items-center gap-2\">\n            <Filter className=\"h-4 w-4\" />\n            Atividade\n          </TabsTrigger>\n          <TabsTrigger value=\"keywords\" className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-4 w-4\" />\n            Palavras-chave\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Distribuição por Categoria</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={stats.byCategory}\n                        dataKey=\"value\"\n                        nameKey=\"name\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={100}\n                        label\n                      >\n                        {stats.byCategory.map((entry, index) => (\n                          <Cell key={entry.name} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Distribuição por Frequência</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart data={stats.byFrequency}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"activity\">\n          <div className=\"grid gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Atividade Diária</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[400px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={stats.dailyActivity}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"changes\" stroke=\"#8884d8\" name=\"Alterações\" />\n                      <Line type=\"monotone\" dataKey=\"newItems\" stroke=\"#82ca9d\" name=\"Novos Itens\" />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Atualizações Recentes</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {stats.recentUpdates.map(update => (\n                    <div\n                      key={update.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                    >\n                      <div>\n                        <h4 className=\"font-medium\">{update.name}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {update.type} • {new Date(update.date).toLocaleString()}\n                        </p>\n                      </div>\n                      <Badge variant=\"secondary\">\n                        {update.changes} alterações\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"keywords\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Análise de Palavras-chave</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {stats.keywordStats.map(keyword => (\n                  <div key={keyword.keyword} className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">{keyword.keyword}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {keyword.mentions} menções totais\n                        </p>\n                      </div>\n                      <Badge variant={keyword.trend > 0 ? \"default\" : \"secondary\"}>\n                        {keyword.trend > 0 ? '+' : ''}{keyword.trend}% em 30 dias\n                      </Badge>\n                    </div>\n                    <div className=\"w-full bg-secondary h-2 rounded-full\">\n                      <div\n                        className=\"h-full rounded-full bg-primary\"\n                        style={{\n                          width: `${(keyword.mentions / stats.keywordStats[0].mentions) * 100}%`\n                        }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AnalysisContent;\n","import React, { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport ClientHeader from \"@/components/example-client/ClientHeader\";\nimport ClientInfo from \"@/components/example-client/ClientInfo\";\nimport { ClientType } from \"@/types/clientTypes\";\nimport { Mail, Eye } from \"lucide-react\";\nimport PressContent from \"@/components/press/PressContent\";\nimport MonitoringContent from \"@/components/monitoring/MonitoringContent\";\nimport AnalysisContent from \"@/components/analysis/AnalysisContent\";\n\nconst ExampleClient: React.FC = () => {\n  const [clientType] = useState<ClientType>(\"press\");\n\n  const getClientIcon = () => {\n    return <Mail className=\"h-6 w-6 text-indigo-600\" />;\n  };\n\n  return (\n    <div className=\"container py-6 max-w-7xl\">\n      <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <Eye className=\"h-5 w-5 text-yellow-400\" aria-hidden=\"true\" />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm text-yellow-700\">\n              Você está visualizando a interface do cliente como administrador. Isso permite que você veja exatamente o que o cliente vê para fornecer suporte adequado.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <ClientHeader clientType={clientType} getClientIcon={getClientIcon} />\n      \n      <div className=\"grid md:grid-cols-4 gap-6 mt-6\">\n        <div className=\"md:col-span-1\">\n          <ClientInfo clientType={clientType} />\n        </div>\n        \n        <div className=\"md:col-span-3\">\n          <Card>\n            <CardContent className=\"p-0\">\n              <Tabs defaultValue=\"press\" className=\"w-full\">\n                <TabsList className=\"w-full\">\n                  <TabsTrigger value=\"press\" className=\"flex-1\">Assessoria de Imprensa</TabsTrigger>\n                  <TabsTrigger value=\"monitoring\" className=\"flex-1\">Monitoramento</TabsTrigger>\n                  <TabsTrigger value=\"analysis\" className=\"flex-1\">Análise</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"press\">\n                  <PressContent clientType={clientType} />\n                </TabsContent>\n\n                <TabsContent value=\"monitoring\">\n                  <MonitoringContent />\n                </TabsContent>\n\n                <TabsContent value=\"analysis\">\n                  <AnalysisContent />\n                </TabsContent>\n              </Tabs>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExampleClient;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Check } from \"lucide-react\";\nimport { ClientType } from \"@/components/monitoring/utils/clientTypeUtils\";\nimport { clientTypeDetails } from \"@/components/client/ClientTypes\";\n\nconst ServicePricing: React.FC = () => {\n  const navigate = useNavigate();\n  const auth = useAuth();\n\n  const handleServiceContract = (serviceId: ClientType) => {\n    if (!auth.isAuthenticated) {\n      auth.setIsLoginDialogOpen(true);\n      return;\n    }\n    \n    // Navigate to payment with service type\n    navigate(\"/payment\", { state: { clientType: serviceId } });\n  };\n\n  const handleExampleClientClick = () => {\n    navigate(\"/example-client\");\n  };\n\n  const servicePricing = [\n    {\n      id: \"observatory\" as ClientType,\n      price: \"R$ 3.500\",\n      period: \"por mês\",\n      popular: true\n    },\n    {\n      id: \"researcher\" as ClientType,\n      price: \"R$ 1.200\",\n      period: \"por mês\",\n      popular: false\n    },\n    {\n      id: \"politician\" as ClientType,\n      price: \"R$ 2.800\",\n      period: \"por mês\",\n      popular: false\n    },\n    {\n      id: \"institution\" as ClientType,\n      price: \"R$ 4.200\",\n      period: \"por mês\",\n      popular: false\n    },\n    {\n      id: \"journalist\" as ClientType,\n      price: \"R$ 980\",\n      period: \"por mês\",\n      popular: false\n    },\n    {\n      id: \"press\" as ClientType,\n      price: \"R$ 1.850\",\n      period: \"por mês\",\n      popular: false\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <Header \n            isAuthenticated={auth.isAuthenticated} \n            onLoginClick={() => auth.setIsLoginDialogOpen(true)} \n            onLogoutClick={auth.handleLogout}\n          />\n          \n          <div className=\"mb-12 text-center\">\n            <h1 className=\"text-4xl font-bold mb-3\">Nossos Planos e Serviços</h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Escolha o plano ideal para suas necessidades e comece a utilizar nossos serviços especializados de dados.\n            </p>\n            <div className=\"mt-4\">\n              <Button \n                onClick={handleExampleClientClick}\n                className=\"bg-amber-600 hover:bg-amber-700\"\n              >\n                Ver exemplo da área do cliente\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {servicePricing.map((service) => {\n              const details = clientTypeDetails[service.id];\n              const colorMap: Record<ClientType, { bg: string, light: string, text: string, border: string }> = {\n                observatory: { bg: \"bg-blue-600\", light: \"bg-blue-50\", text: \"text-blue-600\", border: \"border-blue-200\" },\n                researcher: { bg: \"bg-indigo-600\", light: \"bg-indigo-50\", text: \"text-indigo-600\", border: \"border-indigo-200\" },\n                politician: { bg: \"bg-green-600\", light: \"bg-green-50\", text: \"text-green-600\", border: \"border-green-200\" },\n                institution: { bg: \"bg-purple-600\", light: \"bg-purple-50\", text: \"text-purple-600\", border: \"border-purple-200\" },\n                journalist: { bg: \"bg-red-600\", light: \"bg-red-50\", text: \"text-red-600\", border: \"border-red-200\" },\n                press: { bg: \"bg-amber-600\", light: \"bg-amber-50\", text: \"text-amber-600\", border: \"border-amber-200\" }\n              };\n              \n              const colors = colorMap[service.id];\n              \n              return (\n                <Card \n                  key={service.id} \n                  className={`${service.popular ? 'border-primary shadow-lg' : 'border-border'} relative`}\n                >\n                  {service.popular && (\n                    <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-primary text-white text-sm rounded-full\">\n                      Mais Popular\n                    </div>\n                  )}\n                  \n                  <CardHeader className={service.popular ? 'pt-8' : ''}>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <span className={colors.text}>{details.title}</span>\n                    </CardTitle>\n                    <CardDescription>{details.shortDescription}</CardDescription>\n                  </CardHeader>\n                  \n                  <CardContent>\n                    <div className=\"mb-6\">\n                      <p className=\"text-3xl font-bold\">{service.price}</p>\n                      <p className=\"text-muted-foreground\">{service.period}</p>\n                    </div>\n                    \n                    <ul className=\"space-y-2\">\n                      {details.benefits.slice(0, 4).map((benefit, i) => (\n                        <li key={i} className=\"flex items-start\">\n                          <div className={`rounded-full p-1 ${colors.light} mr-3 mt-1`}>\n                            <Check className={`h-4 w-4 ${colors.text}`} />\n                          </div>\n                          <span className=\"text-sm\">{benefit}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                  \n                  <CardFooter>\n                    <Button \n                      className={`w-full ${colors.bg} hover:opacity-90`}\n                      onClick={() => handleServiceContract(service.id)}\n                    >\n                      Contratar Serviço\n                    </Button>\n                  </CardFooter>\n                </Card>\n              );\n            })}\n          </div>\n          \n          <div className=\"mt-12 text-center\">\n            <p className=\"text-muted-foreground mb-4\">\n              Precisa de um plano personalizado para sua organização?\n            </p>\n            <Button \n              variant=\"outline\" \n              onClick={() => navigate(\"/help\")}\n            >\n              Entre em contato\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-auto\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default ServicePricing;\n","import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { CreditCard, Calendar, Lock, ArrowLeft } from \"lucide-react\";\nimport { Form, FormField, FormItem, FormLabel, FormControl } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { ClientType } from \"@/components/monitoring/utils/clientTypeUtils\";\n\ninterface PaymentFormValues {\n  cardName: string;\n  cardNumber: string;\n  expiryDate: string;\n  cvv: string;\n}\n\nconst servicePricing: Record<ClientType, { price: string, period: string }> = {\n  observatory: { price: \"R$ 3.500\", period: \"por mês\" },\n  researcher: { price: \"R$ 1.200\", period: \"por mês\" },\n  politician: { price: \"R$ 2.800\", period: \"por mês\" },\n  institution: { price: \"R$ 4.200\", period: \"por mês\" },\n  journalist: { price: \"R$ 980\", period: \"por mês\" },\n  press: { price: \"R$ 1.850\", period: \"por mês\" }\n};\n\nconst Payment: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auth = useAuth();\n  \n  // Get the client type from the URL or use default\n  const clientType = (location.state?.clientType as ClientType) || \"observatory\";\n  const pricing = servicePricing[clientType];\n  \n  console.log(\"Payment page for client type:\", clientType);\n  \n  const form = useForm<PaymentFormValues>({\n    defaultValues: {\n      cardName: \"\",\n      cardNumber: \"\",\n      expiryDate: \"\",\n      cvv: \"\"\n    }\n  });\n\n  const handleSubmit = (data: PaymentFormValues) => {\n    console.log(\"Payment form submitted:\", data);\n    \n    // Simulate a successful payment process\n    toast({\n      title: \"Pagamento processado com sucesso\",\n      description: \"Você será redirecionado para a área do cliente.\"\n    });\n    \n    // Redirect to client area with the specific client type after \"payment\"\n    setTimeout(() => {\n      navigate(`/client/${clientType}`);\n    }, 1500);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"max-w-7xl mx-auto w-full space-y-6 flex-1 p-6\">\n        <Header \n          isAuthenticated={auth.isAuthenticated}\n          onLoginClick={() => navigate('/login')}\n          onLogoutClick={auth.handleLogout}\n        />\n\n        <button \n          onClick={() => navigate(-1)}\n          className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Voltar\n        </button>\n\n        <div className=\"max-w-md mx-auto\">\n          <Card className=\"shadow-lg\">\n            <CardHeader className=\"bg-blue-50 border-b\">\n              <CardTitle className=\"text-2xl\">Pagamento</CardTitle>\n              <CardDescription>\n                Complete os dados de pagamento para finalizar sua compra\n              </CardDescription>\n            </CardHeader>\n            \n            <CardContent className=\"pt-6\">\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"cardName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Nome no cartão</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"Ex: João da Silva\" {...field} required />\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"cardNumber\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Número do cartão</FormLabel>\n                        <FormControl>\n                          <div className=\"relative\">\n                            <Input \n                              placeholder=\"0000 0000 0000 0000\" \n                              {...field} \n                              required \n                              className=\"pl-10\"\n                              maxLength={19}\n                              onChange={(e) => {\n                                // Format card number with spaces\n                                const value = e.target.value.replace(/\\s/g, \"\");\n                                const formatted = value.replace(/(\\d{4})/g, \"$1 \").trim();\n                                field.onChange(formatted);\n                              }}\n                            />\n                            <CreditCard className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                          </div>\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"expiryDate\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Data de expiração</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <Input \n                                placeholder=\"MM/AA\" \n                                {...field} \n                                required \n                                className=\"pl-10\"\n                                maxLength={5}\n                                onChange={(e) => {\n                                  // Format expiry date with slash\n                                  const value = e.target.value.replace(/\\//g, \"\");\n                                  if (value.length > 2) {\n                                    field.onChange(`${value.slice(0, 2)}/${value.slice(2)}`);\n                                  } else {\n                                    field.onChange(value);\n                                  }\n                                }}\n                              />\n                              <Calendar className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                            </div>\n                          </FormControl>\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"cvv\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>CVV</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <Input \n                                placeholder=\"123\" \n                                {...field} \n                                required \n                                className=\"pl-10\"\n                                maxLength={4}\n                                type=\"password\"\n                              />\n                              <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                            </div>\n                          </FormControl>\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <div className=\"text-sm text-gray-500 mt-4\">\n                    <p className=\"flex items-center\">\n                      <Lock className=\"h-4 w-4 mr-2 text-green-500\" />\n                      Seus dados estão seguros e criptografados\n                    </p>\n                  </div>\n                  \n                  <Button type=\"submit\" className=\"w-full mt-6 bg-blue-600 hover:bg-blue-700\">\n                    Finalizar pagamento\n                  </Button>\n                </form>\n              </Form>\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-between border-t pt-6\">\n              <div className=\"text-sm text-gray-500\">\n                <span>Total: </span>\n                <span className=\"font-bold text-lg text-gray-900\">{pricing.price}</span>\n                <span className=\"text-sm text-gray-500 ml-1\">{pricing.period}</span>\n              </div>\n            </CardFooter>\n          </Card>\n        </div>\n      </div>\n\n      <div className=\"mt-auto\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\n\nconst Unauthorized: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"max-w-md w-full space-y-8 p-8 bg-white rounded-lg shadow\">\n        <div className=\"text-center\">\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            Acesso Não Autorizado\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Você não tem permissão para acessar esta página.\n          </p>\n        </div>\n        <div className=\"mt-8 space-y-4\">\n          <Button\n            onClick={() => navigate('/')}\n            className=\"w-full\"\n          >\n            Voltar para a Página Inicial\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unauthorized;\n","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport ProtectedRoute from '@/components/auth/ProtectedRoute';\n\n// Admin pages\nimport Admin from '@/pages/Admin';\nimport ClientManagement from '@/pages/admin/ClientManagement';\nimport ContentManagement from '@/pages/admin/ContentManagement';\nimport MediaContactsManagement from '@/pages/admin/MediaContactsManagement';\nimport { AdminMonitoringDashboard } from '@/components/admin/monitoring/AdminMonitoringDashboard';\n\n// Client pages\nimport ObservatoryClient from '@/pages/clients/ObservatoryClient';\nimport ResearcherClient from '@/pages/clients/ResearcherClient';\nimport PoliticianClient from '@/pages/clients/PoliticianClient';\nimport InstitutionClient from '@/pages/clients/InstitutionClient';\nimport JournalistClient from '@/pages/clients/JournalistClient';\nimport PressClient from '@/pages/clients/PressClient';\n\n// Dashboards\nimport ObservatoryDashboard from '@/pages/dashboard/ObservatoryDashboard';\nimport ResearcherDashboard from '@/pages/dashboard/ResearcherDashboard';\nimport PoliticianDashboard from '@/pages/dashboard/PoliticianDashboard';\nimport InstitutionDashboard from '@/pages/dashboard/InstitutionDashboard';\nimport JournalistDashboard from '@/pages/dashboard/JournalistDashboard';\nimport PressDashboard from '@/pages/dashboard/PressDashboard';\n\n// Other pages\nimport Index from '@/pages/Index';\nimport LoginPage from '@/pages/Login';\nimport ClientLoginPage from '@/pages/ClientLogin';\nimport ServiceLanding from '@/pages/ServiceLanding';\nimport ExampleClient from '@/pages/ExampleClient';\nimport Client from '@/pages/Client';\nimport Payment from '@/pages/Payment';\nimport Unauthorized from '@/pages/Unauthorized';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Routes>\n          {/* Página inicial pública */}\n          <Route path=\"/\" element={<Index />} />\n\n          {/* Rotas de login */}\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/client-login\" element={<ClientLoginPage />} />\n          \n          {/* Rotas de serviço */}\n          <Route path=\"/service/:serviceId\" element={<ServiceLanding />} />\n          <Route path=\"/client\" element={<Client />} />\n          <Route path=\"/payment\" element={<Payment />} />\n          <Route path=\"/example-client\" element={<ExampleClient />} />\n          \n          {/* Rota de erro de autorização */}\n          <Route path=\"/unauthorized\" element={<Unauthorized />} />\n\n          {/* Rotas administrativas */}\n          <Route\n            path=\"/admin\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <Admin />\n              </ProtectedRoute>\n            }\n          />\n          \n          {/* Rota única para monitoramento */}\n          <Route\n            path=\"/admin/monitoring/*\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <AdminMonitoringDashboard />\n              </ProtectedRoute>\n            }\n          />\n\n          <Route\n            path=\"/admin/clients\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <ClientManagement />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/admin/content\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <ContentManagement />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/admin/contacts\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <MediaContactsManagement />\n              </ProtectedRoute>\n            }\n          />\n\n          {/* Rotas específicas de cada tipo de cliente na área admin */}\n          <Route\n            path=\"/admin/client/:clientType\"\n            element={\n              <ProtectedRoute allowedTypes={['admin']}>\n                <ClientManagement />\n              </ProtectedRoute>\n            }\n          />\n\n          {/* Rotas dos clientes */}\n          <Route\n            path=\"/clients/observatory\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'observatory']}>\n                <ObservatoryClient />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/clients/researcher\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'researcher']}>\n                <ResearcherClient />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/clients/politician\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'politician']}>\n                <PoliticianClient />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/clients/institution\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'institution']}>\n                <InstitutionClient />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/clients/journalist\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'journalist']}>\n                <JournalistClient />\n              </ProtectedRoute>\n            }\n          />\n          \n          <Route\n            path=\"/clients/press\"\n            element={\n              <ProtectedRoute allowedTypes={['admin', 'press']}>\n                <PressClient />\n              </ProtectedRoute>\n            }\n          />\n\n          {/* Rota 404 */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nconst rootElement = document.getElementById(\"root\");\n\nif (!rootElement) {\n  throw new Error(\"Failed to find the root element\");\n}\n\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"names":["AuthContext","createContext","AuthProvider","children","user","setUser","useState","storedUser","login","userData","logout","jsx","useAuth","context","useContext","navigate","useNavigate","auth","useAuthContext","form","useForm","isLoggingIn","setIsLoggingIn","handleLogin","data","resolve","error","handleLogout","ProtectedRoute","allowedTypes","isAuthenticated","Navigate","cn","inputs","twMerge","clsx","formatDate","date","buttonVariants","cva","Button","React.forwardRef","className","variant","size","asChild","props","ref","Comp","Slot","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","ServiceCard","color","colorClasses","jsxs","ServiceIconWrapper","bgColorClasses","FeatureCard","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","AdminSidebar","location","useLocation","menuItems","Home","Activity","UserPlus","Eye","Users","FileText","BarChart2","Settings","item","LogOut","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","X","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","badgeVariants","Badge","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","Textarea","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Check","Input","type","ContentDistributor","contentId","contentTitle","onDistribute","searchTerm","setSearchTerm","selectedContacts","setSelectedContacts","filterType","setFilterType","mockContacts","contactTypes","filteredContacts","contact","matchesSearch","matchesType","handleToggleContact","contactId","prev","handleDistribute","Search","e","PressMonitoringService","title","distributedTo","timer","result","pressMonitoringService","ContentModerator","contents","onUpdateStatus","selectedContent","setSelectedContent","feedback","setFeedback","handleApprove","handleReject","content","tag","Fragment","Admin","setContents","quickActions","handleUpdateStatus","status","prevContents","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","ClientList","clients","onAddClient","onEditClient","onDeleteClient","currentClientType","filteredClients","client","getStatusColor","getPlanColor","plan","handleViewClient","clientType","clientPages","PlusCircle","Edit","Trash","PaymentList","payments","onExportPayments","filteredPayments","payment","formatCurrency","amount","Download","PasswordResetList","resets","onResetPassword","filteredResets","reset","RotateCw","BackToAdminButton","ArrowLeft","mockClients","useClientManagement","setClients","isLoading","setIsLoading","loadClients","useCallback","handleStatusToggle","clientId","prevClients","mockPayments","mockResets","ClientManagement","activeTab","setActiveTab","selectedClient","setSelectedClient","addClient","editClient","deleteClient","exportPayments","resetPassword","resetId","useEffect","RichTextEditor","initialContent","onContentChange","showLinkDialog","setShowLinkDialog","showImageDialog","setShowImageDialog","linkUrl","setLinkUrl","imageUrl","setImageUrl","editorRef","React","commands","Bold","Italic","Underline","Heading1","Heading2","List","ListOrdered","Quote","AlignLeft","AlignCenter","AlignRight","execCommand","command","value","handleInsertLink","handleInsertImage","cmd","Link2","Image","ContentManagement","setContent","handleSaveContent","Loader2","labelVariants","Label","LabelPrimitive.Root","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","MediaContactsManagement","contacts","setContacts","outlets","setOutlets","isNewContactOpen","setIsNewContactOpen","isNewOutletOpen","setIsNewOutletOpen","segmentos","handleAddContact","newContact","handleAddOutlet","newOutlet","seg","Plus","outlet","Trash2","mockData","MonitoringList","monitorings","setMonitorings","search","setSearch","filter","setFilter","filteredMonitorings","monitoring","matchesFilter","toggleStatus","deleteMonitoring","AlertCircle","Pause","Play","initialFormData","MonitoringForm","formData","setFormData","handleSubmit","MonitoringStats","Clock","CheckCircle2","Switch","SwitchPrimitives.Root","SwitchPrimitives.Thumb","Separator","decorative","SeparatorPrimitive.Root","defaultSettings","MonitoringSettings","settings","setSettings","handleSave","checked","LineChart","height","ResponsiveLine","BarChart","keys","indexBy","ResponsiveBar","PieChart","ResponsivePie","geoData","MapChart","nameField","valueField","chartData","ResponsiveChoropleth","d","alertVariants","Alert","AlertTitle","AlertDescription","MonitoringAnalytics","timeRange","setTimeRange","exportFormat","setExportFormat","analyticsData","handleExportData","renderMetricComparison","metric","unit","ArrowUp","ArrowDown","alert","Bell","MonitoringReports","network","anomalies","report","rec","url","word","phrase","isAnomaly","mockReportData","AdminMonitoringDashboard","path","handleTabChange","Header","onLoginClick","onLogoutClick","clientName","isClientPage","getClientTypeLabel","Leaf","User","Footer","observatoryDetails","researcherDetails","politicianDetails","institutionDetails","journalistDetails","pressDetails","clientTypeDetails","getColorClasses","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","FormItem","React.useId","FormLabel","formItemId","FormControl","formDescriptionId","formMessageId","FormDescription","FormMessage","body","clientTypeInfoMap","getClientTypeInfo","getDefaultCategories","ClientAlert","alertText","InfoIcon","CategoryManager","onCategoryAdded","effectiveClientType","newCategory","setNewCategory","customCategories","setCustomCategories","handleAddCategory","defaultCategories","allCategories","updatedCustomCategories","BasicFormFields","clientInfo","field","AdvancedFormFields","MonitoringFormInputs","onSubmit","setAllCategories","handleCategoriesUpdated","categories","category","ObservatoryClient","details","monitoringItems","setMonitoringItems","selectedChart","setSelectedChart","alerts","setAlerts","handleMarkAsRead","handleAddMonitoring","newItem","handleDeleteMonitoring","updatedItems","handleAddClient","handleEditClient","handleDeleteClient","c","a","BarChart3","FilePieChart","ResearcherClient","PoliticianClient","InstitutionClient","JournalistClient","PressClient","HeroSection","FeatureItem","icon","description","features","FeaturesSection","feature","ServiceItem","onServiceClick","getButtonColorClass","clientTypes","BookOpen","MessageSquare","ServicesSection","handleServiceClick","serviceId","CTACard","iconColor","ctaFeatures","CheckCircle","Monitor","Shield","Smile","CTASection","Index","Login","showPassword","setShowPassword","rememberPassword","setRememberPassword","togglePasswordVisibility","EyeOff","LogIn","ClientLoginForm","rememberMe","setRememberMe","LoginCard","onLogin","validClients","validateClient","createClientInfo","email","saveClientInfo","useClientLogin","ClientLogin","ServiceHero","onBackClick","onContractServiceClick","onExampleClientClick","ServiceDetails","caseStudy","ServiceFeatures","ServiceBenefits","benefits","Zap","benefit","ServiceCTA","ServiceLanding","useParams","validServiceId","serviceDetails","handleBackClick","handleContractServiceClick","handleExampleClientClick","ClientHeader","getClientIcon","ClientInfo","RadioGroup","RadioGroupPrimitive.Root","RadioGroupItem","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","Circle","ContentCreator","contentType","setContentType","setTitle","subtitle","setSubtitle","setCategory","tags","setTags","contentData","cat","PressContent","handleContentSubmit","newContent","handleSendContent","getStatusIcon","XCircle","getStatusText","Send","exampleMonitorings","MonitoringContent","setCategories","newMonitoring","setNewMonitoring","k","m","Database","FilterIcon","keyword","generateDailyActivity","i","AnalysisContent","stats","COLORS","acc","curr","TrendingUp","Filter","ResponsiveContainer","Pie","entry","Cell","Tooltip","Legend","CartesianGrid","XAxis","YAxis","Bar","Line","ExampleClient","Mail","ServicePricing","handleServiceContract","servicePricing","service","colors","Payment","pricing","formatted","CreditCard","Calendar","Lock","Unauthorized","App","Router","Routes","Route","LoginPage","ClientLoginPage","Client","rootElement","root","createRoot","StrictMode"],"mappings":"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,+DACb,SAAA,CAAChD,EAAAA,IAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAAC,QAAK,UAAU,oBAAoB,4BAEpC,CACF,CAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAE/C,iCAAA,CAAA,CACF,CAAA,CACF,CAAA,ECZSsa,GAAuC,CAClD,GAAI,cACJ,MAAO,eACP,iBAAkB,gEAClB,YAAa,0KACb,QAAS,4UACT,SAAU,CACR,0CACA,yCACA,mCACA,4CACA,iDACA,kCACF,EACA,SAAU,CACR,mDACA,wDACA,0EACA,uDACA,6CACF,EACA,UAAW,CACT,MAAO,yCACP,YAAa,uLACf,CACF,ECzBaC,GAAsC,CACjD,GAAI,aACJ,MAAO,cACP,iBAAkB,oEAClB,YAAa,oLACb,QAAS,0TACT,SAAU,CACR,6CACA,gDACA,oDACA,yCACA,wCACF,EACA,SAAU,CACR,4DACA,qDACA,6DACA,6CACA,mDACF,EACA,UAAW,CACT,MAAO,0CACP,YAAa,4JACf,CACF,ECxBaC,GAAsC,CACjD,GAAI,aACJ,MAAO,WACP,iBAAkB,mEAClB,YAAa,kKACb,QAAS,ySACT,SAAU,CACR,0CACA,gDACA,sCACA,4CACA,iDACF,EACA,SAAU,CACR,sDACA,0DACA,yDACA,+CACA,2CACF,EACA,UAAW,CACT,MAAO,sCACP,YAAa,8KACf,CACF,ECxBaC,GAAuC,CAClD,GAAI,cACJ,MAAO,cACP,iBAAkB,6DAClB,YAAa,+KACb,QAAS,qTACT,SAAU,CACR,8CACA,4CACA,6CACA,uCACA,qCACF,EACA,SAAU,CACR,qDACA,oDACA,kDACA,gDACA,2CACF,EACA,UAAW,CACT,MAAO,8BACP,YAAa,mKACf,CACF,ECxBaC,GAAsC,CACjD,GAAI,aACJ,MAAO,aACP,iBAAkB,mEAClB,YAAa,+KACb,QAAS,2SACT,SAAU,CACR,yCACA,wCACA,yCACA,sCACA,iDACF,EACA,SAAU,CACR,mDACA,qDACA,uDACA,uDACA,mDACF,EACA,UAAW,CACT,MAAO,oCACP,YAAa,sJACf,CACF,ECxBaC,G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"}